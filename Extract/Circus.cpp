
#include	"stdafx.h"
#include	"../Arc/Zlib.h"
#include	"../Image.h"
#include	"../Sound/Wav.h"
#include	"Circus.h"

//////////////////////////////////////////////////////////////////////////////////////////
//	Mounting

BOOL	CCircus::Mount(
	CArcFile*			pclArc							// Archive
	)
{
	if( MountPCK( pclArc ) )
	{
		return	TRUE;
	}

	if( MountVoiceDat( pclArc ) )
	{
		return	TRUE;
	}

	if( MountCRX( pclArc ) )
	{
		return	TRUE;
	}

	if( MountPCM( pclArc ) )
	{
		return	TRUE;
	}

	return	FALSE;
}

//////////////////////////////////////////////////////////////////////////////////////////
//	PCK Mounting

BOOL	CCircus::MountPCK(
	CArcFile*			pclArc							// Archive
	)
{
	if( pclArc->GetArcExten() != _T(".PCK") )
	{
		return	FALSE;
	}

	// Get file count

	DWORD				dwFiles;

	pclArc->Read( &dwFiles, 4 );

	// Get index size

	DWORD				dwIndexSize = dwFiles * 64;

	// Read index

	YCMemory<BYTE>		clmbtIndex( dwIndexSize );

	pclArc->SeekCur( dwFiles * 8 );

	pclArc->Read( &clmbtIndex[0], dwIndexSize );

	// Store file information in memory

	for( DWORD i = 0 ; i < dwFiles ; i++ )
	{
		// Get filename

		char				szFileName[57];

		memcpy( szFileName, &clmbtIndex[i * 64], 56 );

		szFileName[56] = '\0';

		// Store file information in memory

		SFileInfo			stFileInfo;

		stFileInfo.name = szFileName;
		stFileInfo.sizeCmp = *(DWORD*) &clmbtIndex[i * 64 + 60];
		stFileInfo.sizeOrg = stFileInfo.sizeCmp;
		stFileInfo.start = *(DWORD*) &clmbtIndex[i * 64 + 56];
		stFileInfo.end = stFileInfo.start + stFileInfo.sizeCmp;

		pclArc->AddFileInfo( stFileInfo );
	}

	return	TRUE;
}

//////////////////////////////////////////////////////////////////////////////////////////
//	voice.dat Mounting

BOOL	CCircus::MountVoiceDat(
	CArcFile*			pclArc							// Archive
	)
{
	if( lstrcmpi( pclArc->GetArcName(), _T("voice.dat") ) != 0 )
	{
		return	FALSE;
	}

	if( memcmp( pclArc->GetHed(), "tskforce", 8 ) == 0 )
	{
		// Not the right archive

		return	FALSE;
	}

	// Get file count

	DWORD				dwFiles;

	pclArc->Read( &dwFiles, 4 );

	// Get index size

	DWORD				dwIndexSize = dwFiles * 52;

	// Read index

	YCMemory<BYTE>		clmbtIndex( dwIndexSize );

	pclArc->Read( &clmbtIndex[0], dwIndexSize );

	// Store file information in memory

	for( DWORD i = 0 ; i < dwFiles ; i++ )
	{
		// Get file name

		char				szFileName[49];

		memcpy( szFileName, &clmbtIndex[i * 52], 48 );

		szFileName[48] = '\0';

		if( strcmpi( PathFindExtensionA( szFileName ), ".pcm" ) != 0 )
		{
			// Unsupported archive

			pclArc->SeekCur( -(INT64)(4 + dwIndexSize) );
			return	FALSE;
		}

		// Store file information in memory

		SFileInfo			stFileInfo;

		stFileInfo.name = szFileName;
		stFileInfo.start = *(DWORD*) &clmbtIndex[i * 52 + 48];
		stFileInfo.end = (i < (dwFiles - 1)) ? *(DWORD*) &clmbtIndex[(i + 1) * 52 + 48] : pclArc->GetArcSize();
		stFileInfo.sizeCmp = stFileInfo.end - stFileInfo.start;
		stFileInfo.sizeOrg = stFileInfo.sizeCmp;

		pclArc->AddFileInfo( stFileInfo );
	}

	return	TRUE;
}

//////////////////////////////////////////////////////////////////////////////////////////
//	CRX Mounting

BOOL	CCircus::MountCRX(
	CArcFile*			pclArc							// Archive
	)
{
	if( lstrcmpi( pclArc->GetArcExten(), _T(".CRX") ) != 0 )
	{
		return	FALSE;
	}

	if( memcmp( pclArc->GetHed(), "CRXG", 4 ) != 0 )
	{
		return	FALSE;
	}

	return	pclArc->Mount();
}

//////////////////////////////////////////////////////////////////////////////////////////
//	PCM Mounting

BOOL	CCircus::MountPCM(
	CArcFile*			pclArc							// Archive
	)
{
	if( pclArc->GetArcExten() != _T(".pcm") )
	{
		return	FALSE;
	}

	if( memcmp( pclArc->GetHed(), "XPCM", 4) != 0 )
	{
		return	FALSE;
	}

	return	pclArc->Mount();
}

//////////////////////////////////////////////////////////////////////////////////////////
//	Decoding

BOOL	CCircus::Decode(
	CArcFile*			pclArc							// Archive
	)
{
	if( DecodeCRX( pclArc ) )
	{
		return	TRUE;
	}

	if( DecodePCM( pclArc ) )
	{
		return	TRUE;
	}

	return	FALSE;
}

//////////////////////////////////////////////////////////////////////////////////////////
//	CRX Decoding

BOOL	CCircus::DecodeCRX(
	CArcFile*			pclArc							// Archive
	)
{
	SFileInfo*			pstFileInfo = pclArc->GetOpenFileInfo();

	if( pstFileInfo->format != _T("CRX") )
	{
		return	FALSE;
	}

	// Ensure input buffer exists

	DWORD				dwSrcSize = pstFileInfo->sizeCmp;

	YCMemory<BYTE>		clmbtSrc( dwSrcSize );

	// Read

	pclArc->Read( &clmbtSrc[0], dwSrcSize );

	// Determine CRX type

	WORD				wType = *(WORD*) &clmbtSrc[12];

	switch( wType )
	{
	case	1:
		// LZSS compression type

		DecodeCRX1( pclArc, &clmbtSrc[0], dwSrcSize );
		break;

	case	2:
		// ZLIB compression type

		DecodeCRX2( pclArc, &clmbtSrc[0], dwSrcSize );
		break;

	default:
		// Unknown compression format

		pclArc->OpenFile();
		pclArc->WriteFile( &clmbtSrc[0], dwSrcSize );
	}

	return	TRUE;
}

//////////////////////////////////////////////////////////////////////////////////////////
//	CRX Decoding (Type 1)

BOOL	CCircus::DecodeCRX1(
	CArcFile*			pclArc,							// Archive
	const void*			pvSrc,							// Input data
	DWORD				dwSrcSize						// Input data size
	)
{
	const BYTE*			pbtSrc = (const BYTE*) pvSrc;

	// Get header information

	long				lWidth = *(WORD*) &pbtSrc[8];
	long				lHeight = *(WORD*) &pbtSrc[10];
	DWORD				dwPalletSize = *(WORD*) &pbtSrc[16] * 3;
	WORD				wBpp = (dwPalletSize == 0) ? 24 : 8;

	DWORD				dwSrcDataOffset = 20 + dwPalletSize;

	// Ensure the output buffer exists

	YCMemory<BYTE>		clmbtPallet;
	BYTE*				pbtPallet = NULL;

	DWORD				dwDstSize = lWidth * lHeight * (wBpp >> 3);

	YCMemory<BYTE>		clmbtDst( dwDstSize );

	// Get palette

	if( wBpp == 8 )
	{
		// Expand the palette

		DWORD				dwPalletSize2 = dwPalletSize;

		dwPalletSize = 1024;

		clmbtPallet.resize( dwPalletSize, 0 );

		for( DWORD i = 0, j = 0 ; (i < dwPalletSize) && (j < dwPalletSize2) ; i += 4, j += 3 )
		{
			clmbtPallet[i + 0] = pbtSrc[20 + j + 2];
			clmbtPallet[i + 1] = pbtSrc[20 + j + 1];
			clmbtPallet[i + 2] = pbtSrc[20 + j + 0];
			clmbtPallet[i + 3] = 0;
		}

		pbtPallet = &clmbtPallet[0];
	}

	// LZSS decompression

	DecompLZSS( &clmbtDst[0], dwDstSize, &pbtSrc[dwSrcDataOffset], (dwSrcSize - dwSrcDataOffset) );

	// Output

	CImage				clImage;

	clImage.Init( pclArc, lWidth, lHeight, wBpp, pbtPallet, dwPalletSize );
	clImage.WriteReverse( &clmbtDst[0], dwDstSize, dwSrcSize );

	return	TRUE;
}

//////////////////////////////////////////////////////////////////////////////////////////
//	CRX Decoding (Type 2)

BOOL	CCircus::DecodeCRX2(
	CArcFile*			pclArc,							// Archive
	const void*			pvSrc,							// Input data
	DWORD				dwSrcSize						// Input data size
	)
{
	const BYTE*			pbtSrc = (const BYTE*) pvSrc;

	// Get header information

	long				lWidth = *(WORD*)&pbtSrc[8];
	long				lHeight = *(WORD*)&pbtSrc[10];
	DWORD				dwPalletSize = *(WORD*)&pbtSrc[16] * 3;
	WORD				wFlags = *(WORD*)&pbtSrc[18];
	WORD				wBpp;

	DWORD				dwSrcDataOffset = 20 + dwPalletSize;

	switch( dwPalletSize )
	{
	case	0:
		wBpp = 24;
		break;

	case	3:
		wBpp = 32;
		dwSrcDataOffset = 20;
		break;

	default:
		wBpp = 8;
	}

	// Ensure the output buffer exists

	YCMemory<BYTE>		clmbtPallet;
	BYTE*				pbtPallet = NULL;

	DWORD				dwDstSize = lWidth * lHeight * 4;//(wBpp >> 3);

	YCMemory<BYTE>		clmbtDst( dwDstSize );

	DWORD				dwDstSize2 = lWidth * lHeight * (wBpp >> 3);

	YCMemory<BYTE>		clmbtDst2( dwDstSize2 );

	// Get palette

	if( wBpp == 8 )
	{
		// Expand the palette

		DWORD				dwPalletSize2 = dwPalletSize;

		dwPalletSize = 1024;

		clmbtPallet.resize( dwPalletSize, 0 );

		for( DWORD i = 0, j = 0 ; (i < dwPalletSize) && (j < dwPalletSize2) ; i += 4, j += 3 )
		{
			clmbtPallet[i + 0] = pbtSrc[20 + j + 2];
			clmbtPallet[i + 1] = pbtSrc[20 + j + 1];
			clmbtPallet[i + 2] = pbtSrc[20 + j + 0];
			clmbtPallet[i + 3] = 0;
		}

		pbtPallet = &clmbtPallet[0];
	}

	// Decompression

	if( wBpp == 8 )
	{
		// zlib decompression

		CZlib				clZlib;

		clZlib.Decompress( &clmbtDst2[0], &dwDstSize2, &pbtSrc[dwSrcDataOffset], (dwSrcSize - dwSrcDataOffset) );
	}
	else
	{
		// zlib decompression

		CZlib				clZlib;
		int					nResult;

		while( 1 )
		{
			nResult = clZlib.Decompress( &clmbtDst[0], &dwDstSize, &pbtSrc[dwSrcDataOffset], (dwSrcSize - dwSrcDataOffset) );

			if( nResult == Z_BUF_ERROR )
			{
				// Insufficient output buffer size

				dwDstSize = dwDstSize * 2;
				clmbtDst.resize( dwDstSize );
			}
			else
			{
				break;
			}
		}

		// CRX Decompression

		DecompCRX2( &clmbtDst2[0], dwDstSize2, &clmbtDst[0], dwDstSize, lWidth, lHeight, wBpp, wFlags );
	}

	// Output

	CImage				clImage;

	clImage.Init( pclArc, lWidth, lHeight, wBpp, pbtPallet, dwPalletSize );
	clImage.WriteReverse( &clmbtDst2[0], dwDstSize2, dwSrcSize );

	return	TRUE;
}

//////////////////////////////////////////////////////////////////////////////////////////
//	PCM Decoding

BOOL	CCircus::DecodePCM(
	CArcFile*			pclArc							// Archive
	)
{
	SFileInfo*			pstFileInfo = pclArc->GetOpenFileInfo();

	if( pstFileInfo->format != _T("PCM") )
	{
		return	FALSE;
	}

	// Read header

	SPCMHeader			stPCMHeader;

	pclArc->Read( &stPCMHeader, sizeof(SPCMHeader) );

	// Output

	switch( stPCMHeader.dwFlags & 0xFF )
	{
	case	0:
		// Uncompressed

		CWav				clWav;

		clWav.Init( pclArc, stPCMHeader.dwDataSize, stPCMHeader.dwFreq, stPCMHeader.wChannels, stPCMHeader.wBits );
		clWav.Write();
		break;

//	case	1:

		DecodePCM1( pclArc, stPCMHeader );
		break;

	case	2:

		DecodePCM2( pclArc, stPCMHeader );
		break;

//	case	3:

		break;

	default:
		// Unknown format

		pclArc->SeekCur( -(INT64)sizeof(SPCMHeader) );

		pclArc->OpenFile();
		pclArc->ReadWrite();
	}

	return	TRUE;
}

//////////////////////////////////////////////////////////////////////////////////////////
//	PCM Decoding (Type 1)

BOOL	CCircus::DecodePCM1(
	CArcFile*			pclArc,							// Archive
	const SPCMHeader&	rfstPCMHeader					// PCM Header
	)
{
	// Get input data size

	DWORD				dwSrcSize;

	pclArc->Read( &dwSrcSize, 4 );

	// Ensure buffer exists 

	YCMemory<BYTE>		clmbtSrc( dwSrcSize );

	DWORD				dwDstSize = rfstPCMHeader.dwDataSize;

	YCMemory<BYTE>		clmbtDst( dwDstSize );

	DWORD				dwDstSize2 = dwDstSize;

	YCMemory<BYTE>		clmbtDst2( dwDstSize2 );

	// Read

	pclArc->Read( &clmbtSrc[0], dwSrcSize );

	// LZSS Decompression

	DecompLZSS( &clmbtDst[0], dwDstSize, &clmbtSrc[0], dwSrcSize );

	// VQ Decompression

	DecompPCM1( &clmbtDst2[0], dwDstSize2, &clmbtDst[0], dwDstSize );

	// Output

	CWav				clWav;

	clWav.Init( pclArc, rfstPCMHeader.dwDataSize, rfstPCMHeader.dwFreq, rfstPCMHeader.wChannels, rfstPCMHeader.wBits );
	clWav.Write( &clmbtDst[0], dwDstSize );

	return	TRUE;
}

//////////////////////////////////////////////////////////////////////////////////////////
//	PCM Decoding(Type 2)

BOOL	CCircus::DecodePCM2(
	CArcFile*			pclArc,							// Archive
	const SPCMHeader&	rfstPCMHeader					// PCM Header
	)
{
	// Ensure buffer exists

	DWORD				dwSrcSize = pclArc->GetOpenFileInfo()->sizeCmp - sizeof(SPCMHeader);

	YCMemory<BYTE>		clmbtSrc( dwSrcSize );

	DWORD				dwDstSize = rfstPCMHeader.dwDataSize;

	YCMemory<BYTE>		clmbtDst( dwDstSize );

	// Read

	pclArc->Read( &clmbtSrc[0], dwSrcSize );

	// Decompression

	DecompPCM2( &clmbtDst[0], dwDstSize, &clmbtSrc[0], dwSrcSize );

	// Output

	CWav				clWav;

	clWav.Init( pclArc, rfstPCMHeader.dwDataSize, rfstPCMHeader.dwFreq, rfstPCMHeader.wChannels, rfstPCMHeader.wBits );
	clWav.Write( &clmbtDst[0], dwDstSize );

	return	TRUE;
}

//////////////////////////////////////////////////////////////////////////////////////////
//	LZSS Decompression

BOOL	CCircus::DecompLZSS(
	void*				pvDst,							// Destination
	DWORD				dwDstSize,						// Destination Size
	const void*			pvSrc,							// Input Data
	DWORD				dwSrcSize						// Input Size
	)
{
	const BYTE*			pbtSrc = (const BYTE*)pvSrc;
	BYTE*				pbtDst = (BYTE*)pvDst;

	DWORD				dwSrcPtr = 0;
	DWORD				dwDstPtr = 0;

	DWORD				dwFlags = 0;

	while( (dwSrcPtr < dwSrcSize) && (dwDstPtr < dwDstSize) )
	{
		dwFlags >>= 1;

		if( (dwFlags & 0x0100) == 0 )
		{
			dwFlags = 0xFF00 | pbtSrc[dwSrcPtr++];
		}

		if( dwFlags & 1 )
		{
			// Uncompressed data

			pbtDst[dwDstPtr++] = pbtSrc[dwSrcPtr++];
		}
		else
		{
			// Compressed data

			DWORD				dwLength;
			DWORD				dwBack;

			BYTE				btData = pbtSrc[dwSrcPtr++];

			if( btData >= 0xC0 )
			{
				dwBack = ((btData & 3) << 8) | pbtSrc[dwSrcPtr++];
				dwLength = ((btData >> 2) & 0x0F) + 4;
			}
			else if( btData >= 0x80 )
			{
				dwBack = btData & 0x1F;
				dwLength = ((btData >> 5) & 3) + 2;

				if( dwBack == 0 )
				{
					dwBack = pbtSrc[dwSrcPtr++];
				}
			}
			else if( btData == 0x7F )
			{
				dwLength = *(WORD*)&pbtSrc[dwSrcPtr] + 2;
				dwSrcPtr += 2;

				dwBack = *(WORD*)&pbtSrc[dwSrcPtr];
				dwSrcPtr += 2;
			}
			else
			{
				dwLength = btData + 4;

				dwBack = *(WORD*)&pbtSrc[dwSrcPtr];
				pbtSrc += 2;
			}

			if( (dwDstPtr + dwLength) > dwDstSize )
			{
				dwLength = dwDstSize - dwDstPtr;
			}

			for( DWORD i = 0 ; i < dwLength ; i++ )
			{
				pbtDst[dwDstPtr] = pbtDst[dwDstPtr - dwBack];

				dwDstPtr++;
			}
		}
	}

	return	TRUE;
}

//////////////////////////////////////////////////////////////////////////////////////////
//	CRX Decompression (Type 2)

BOOL	CCircus::DecompCRX2(
	void*				pvDst,							// Destination
	DWORD				dwDstSize,						// Destination Size
	const void*			pvSrc,							// Input Data
	DWORD				dwSrcSize,						// Input Size
	long				lWidth,							// Width
	long				lHeight,						// Height
	WORD				wBpp,							// Bit depth
	WORD				wFlags							// Flags
	)
{
	WORD				wColors = wBpp >> 3;
	DWORD				dwLineSize = lWidth * wColors;

	const BYTE*			pbtSrc = (const BYTE*)pvSrc;
	BYTE*				pbtDst = (BYTE*)pvDst;

	DWORD				dwSrcPtr = 0;
	DWORD				dwDstPtr = 0;
	DWORD				dwDstPtrPrev = 0;
	DWORD				dwDstPtrTemp = 0;

	for( long i = 0 ; i < lHeight ; i++ )
	{
		BYTE				btData = pbtSrc[dwSrcPtr++];

		switch( btData )
		{
		case	0:

			dwDstPtrTemp = dwDstPtr;

			// Output one pixel

			for( DWORD j = 0 ; j < wColors ; j++ )
			{
				pbtDst[dwDstPtrTemp++] = pbtSrc[dwSrcPtr++];
			}

			// Difference between the previous pixel

			for( long j = 0 ; j < (lWidth - 1) ; j++ )
			{
				for( DWORD k = 0 ; k < wColors ; k++ )
				{
					pbtDst[dwDstPtrTemp] = pbtSrc[dwSrcPtr++] + pbtDst[dwDstPtrTemp - wColors];
					dwDstPtrTemp++;
				}
			}

			break;

		case	1:

			dwDstPtrTemp = dwDstPtr;

			// Difference between the previous line

			for( long j = 0 ; j < lWidth ; j++ )
			{
				for( DWORD k = 0 ; k < wColors ; k++ )
				{
					pbtDst[dwDstPtrTemp++] = pbtSrc[dwSrcPtr++] + pbtDst[dwDstPtrPrev++];
				}
			}

			break;

		case	2:

			dwDstPtrTemp = dwDstPtr;

			// Output one pixel

			for( DWORD j = 0 ; j < wColors ; j++ )
			{
				pbtDst[dwDstPtrTemp++] = pbtSrc[dwSrcPtr++];
			}

			// Difference between the previous line

			for( long j = 0 ; j < (lWidth - 1) ; j++ )
			{
				for( DWORD k = 0 ; k < wColors ; k++ )
				{
					pbtDst[dwDstPtrTemp++] = pbtSrc[dwSrcPtr++] + pbtDst[dwDstPtrPrev++];
				}
			}

			break;

		case	3:

			dwDstPtrTemp = dwDstPtr;
			dwDstPtrPrev += wColors;

			// Difference between the previous line

			for( int j = 0 ; j < (lWidth - 1) ; j++ )
			{
				for( DWORD k = 0 ; k < wColors ; k++ )
				{
					pbtDst[dwDstPtrTemp++] = pbtSrc[dwSrcPtr++] + pbtDst[dwDstPtrPrev++];
				}
			}

			// Output one pixel

			for( int j = 0 ; j < wColors ; j++ )
			{
				pbtDst[dwDstPtrTemp++] = pbtSrc[dwSrcPtr++];
			}

			break;

		case	4:

			BYTE				btLength;

			for( int j = 0 ; j < wColors ; j++ )
			{
				long				lWidthTemp = lWidth;

				dwDstPtrTemp = (dwDstPtr + j);

				while( lWidthTemp > 0 )
				{
					// Output one byte

					btData = pbtSrc[dwSrcPtr++];

					pbtDst[dwDstPtrTemp] = btData;

					dwDstPtrTemp += wColors;

					if( --lWidthTemp == 0 )
					{
						break;
					}

					if( btData == pbtSrc[dwSrcPtr] )
					{
						dwSrcPtr++;

						btLength = pbtSrc[dwSrcPtr++];

						lWidthTemp -= btLength;

						for( int k = 0 ; k < btLength ; k++ )
						{
							pbtDst[dwDstPtrTemp] = btData;
							dwDstPtrTemp += wColors;
						}
					}
				}
			}

			break;
		}

		dwDstPtrPrev = dwDstPtr;
		dwDstPtr += dwLineSize;
	}

	switch( wFlags )
	{
	case	0:
		// Data is stored in the order ABGR (It is necessary to fix the order of BGRA)

		if( wBpp == 32 )
		{
			for( long i = 0 ; i < (lWidth * lHeight * 4) ; i += 4 )
			{
				BYTE				btWork;

				btWork = pbtDst[i + 0];
				pbtDst[i + 0] = pbtDst[i + 1];
				pbtDst[i + 1] = pbtDst[i + 2];
				pbtDst[i + 2] = pbtDst[i + 3];
				pbtDst[i + 3] = ~btWork;
			}
		}

		break;

	case	1:
		// Do nothing

		break;
	}

	return	TRUE;
}

//////////////////////////////////////////////////////////////////////////////////////////
//	PCM Extraction (Type 1)

BOOL	CCircus::DecompPCM1(
	void*				pvDst,							// Destination
	DWORD				dwDstSize,						// Destination Size
	const void*			pvSrc,							// Input Data
	DWORD				dwSrcSize						// Input Size
	)
{
	const BYTE*			pbtSrc = (const BYTE*)pvSrc;
	BYTE*				pbtDst = (BYTE*)pvDst;

	DWORD				dwSrcPtr = 0;
	DWORD				dwDstPtr = 0;

	// Create tables

	static const DWORD	adwTable[8] = {
		0x800, 0x800, 0x800, 0x100, 0x100, 0x100, 0x200, 0x400
	};

	static const DWORD	adwTable2[8192] = {
		0x00001000, 0x00000000, 0x00000FFF, 0x00000006, 0x00000FFF, 0x0000000C, 0x00000FFF, 0x00000012, 0x00000FFF, 0x00000019, 0x00000FFF, 0x0000001F, 0x00000FFF, 0x00000025, 0x00000FFF, 0x0000002B, 0x00000FFF, 0x00000032, 0x00000FFF, 0x00000038, 0x00000FFF, 0x0000003E, 0x00000FFF, 0x00000045, 0x00000FFF, 0x0000004B, 0x00000FFF, 0x00000051, 0x00000FFF, 0x00000057, 0x00000FFE, 0x0000005E,
		0x00000FFE, 0x00000064, 0x00000FFE, 0x0000006A, 0x00000FFE, 0x00000071, 0x00000FFE, 0x00000077, 0x00000FFE, 0x0000007D, 0x00000FFD, 0x00000083, 0x00000FFD, 0x0000008A, 0x00000FFD, 0x00000090, 0x00000FFD, 0x00000096, 0x00000FFC, 0x0000009D, 0x00000FFC, 0x000000A3, 0x00000FFC, 0x000000A9, 0x00000FFC, 0x000000AF, 0x00000FFB, 0x000000B6, 0x00000FFB, 0x000000BC, 0x00000FFB, 0x000000C2,
		0x00000FFB, 0x000000C8, 0x00000FFA, 0x000000CF, 0x00000FFA, 0x000000D5, 0x00000FFA, 0x000000DB, 0x00000FF9, 0x000000E2, 0x00000FF9, 0x000000E8, 0x00000FF9, 0x000000EE, 0x00000FF8, 0x000000F4, 0x00000FF8, 0x000000FB, 0x00000FF7, 0x00000101, 0x00000FF7, 0x00000107, 0x00000FF7, 0x0000010D, 0x00000FF6, 0x00000114, 0x00000FF6, 0x0000011A, 0x00000FF5, 0x00000120, 0x00000FF5, 0x00000127,
		0x00000FF4, 0x0000012D, 0x00000FF4, 0x00000133, 0x00000FF3, 0x00000139, 0x00000FF3, 0x00000140, 0x00000FF2, 0x00000146, 0x00000FF2, 0x0000014C, 0x00000FF1, 0x00000152, 0x00000FF1, 0x00000159, 0x00000FF0, 0x0000015F, 0x00000FF0, 0x00000165, 0x00000FEF, 0x0000016B, 0x00000FEF, 0x00000172, 0x00000FEE, 0x00000178, 0x00000FEE, 0x0000017E, 0x00000FED, 0x00000184, 0x00000FEC, 0x0000018B,
		0x00000FEC, 0x00000191, 0x00000FEB, 0x00000197, 0x00000FEB, 0x0000019D, 0x00000FEA, 0x000001A4, 0x00000FE9, 0x000001AA, 0x00000FE9, 0x000001B0, 0x00000FE8, 0x000001B6, 0x00000FE7, 0x000001BD, 0x00000FE7, 0x000001C3, 0x00000FE6, 0x000001C9, 0x00000FE5, 0x000001CF, 0x00000FE4, 0x000001D6, 0x00000FE4, 0x000001DC, 0x00000FE3, 0x000001E2, 0x00000FE2, 0x000001E8, 0x00000FE1, 0x000001EF,
		0x00000FE1, 0x000001F5, 0x00000FE0, 0x000001FB, 0x00000FDF, 0x00000201, 0x00000FDE, 0x00000208, 0x00000FDE, 0x0000020E, 0x00000FDD, 0x00000214, 0x00000FDC, 0x0000021A, 0x00000FDB, 0x00000221, 0x00000FDA, 0x00000227, 0x00000FD9, 0x0000022D, 0x00000FD9, 0x00000233, 0x00000FD8, 0x00000239, 0x00000FD7, 0x00000240, 0x00000FD6, 0x00000246, 0x00000FD5, 0x0000024C, 0x00000FD4, 0x00000252,
		0x00000FD3, 0x00000259, 0x00000FD2, 0x0000025F, 0x00000FD1, 0x00000265, 0x00000FD0, 0x0000026B, 0x00000FCF, 0x00000271, 0x00000FCE, 0x00000278, 0x00000FCD, 0x0000027E, 0x00000FCC, 0x00000284, 0x00000FCB, 0x0000028A, 0x00000FCA, 0x00000290, 0x00000FC9, 0x00000297, 0x00000FC8, 0x0000029D, 0x00000FC7, 0x000002A3, 0x00000FC6, 0x000002A9, 0x00000FC5, 0x000002AF, 0x00000FC4, 0x000002B6,
		0x00000FC3, 0x000002BC, 0x00000FC2, 0x000002C2, 0x00000FC1, 0x000002C8, 0x00000FC0, 0x000002CE, 0x00000FBF, 0x000002D5, 0x00000FBE, 0x000002DB, 0x00000FBD, 0x000002E1, 0x00000FBB, 0x000002E7, 0x00000FBA, 0x000002ED, 0x00000FB9, 0x000002F3, 0x00000FB8, 0x000002FA, 0x00000FB7, 0x00000300, 0x00000FB6, 0x00000306, 0x00000FB4, 0x0000030C, 0x00000FB3, 0x00000312, 0x00000FB2, 0x00000318,
		0x00000FB1, 0x0000031F, 0x00000FB0, 0x00000325, 0x00000FAE, 0x0000032B, 0x00000FAD, 0x00000331, 0x00000FAC, 0x00000337, 0x00000FAB, 0x0000033D, 0x00000FA9, 0x00000344, 0x00000FA8, 0x0000034A, 0x00000FA7, 0x00000350, 0x00000FA5, 0x00000356, 0x00000FA4, 0x0000035C, 0x00000FA3, 0x00000362, 0x00000FA1, 0x00000368, 0x00000FA0, 0x0000036F, 0x00000F9F, 0x00000375, 0x00000F9D, 0x0000037B,
		0x00000F9C, 0x00000381, 0x00000F9B, 0x00000387, 0x00000F99, 0x0000038D, 0x00000F98, 0x00000393, 0x00000F96, 0x00000399, 0x00000F95, 0x000003A0, 0x00000F94, 0x000003A6, 0x00000F92, 0x000003AC, 0x00000F91, 0x000003B2, 0x00000F8F, 0x000003B8, 0x00000F8E, 0x000003BE, 0x00000F8C, 0x000003C4, 0x00000F8B, 0x000003CA, 0x00000F89, 0x000003D0, 0x00000F88, 0x000003D7, 0x00000F86, 0x000003DD,
		0x00000F85, 0x000003E3, 0x00000F83, 0x000003E9, 0x00000F82, 0x000003EF, 0x00000F80, 0x000003F5, 0x00000F7F, 0x000003FB, 0x00000F7D, 0x00000401, 0x00000F7B, 0x00000407, 0x00000F7A, 0x0000040D, 0x00000F78, 0x00000413, 0x00000F77, 0x0000041A, 0x00000F75, 0x00000420, 0x00000F73, 0x00000426, 0x00000F72, 0x0000042C, 0x00000F70, 0x00000432, 0x00000F6E, 0x00000438, 0x00000F6D, 0x0000043E,
		0x00000F6B, 0x00000444, 0x00000F69, 0x0000044A, 0x00000F68, 0x00000450, 0x00000F66, 0x00000456, 0x00000F64, 0x0000045C, 0x00000F63, 0x00000462, 0x00000F61, 0x00000468, 0x00000F5F, 0x0000046E, 0x00000F5D, 0x00000474, 0x00000F5C, 0x0000047A, 0x00000F5A, 0x00000480, 0x00000F58, 0x00000486, 0x00000F56, 0x0000048C, 0x00000F55, 0x00000492, 0x00000F53, 0x00000498, 0x00000F51, 0x0000049E,
		0x00000F4F, 0x000004A5, 0x00000F4D, 0x000004AB, 0x00000F4B, 0x000004B1, 0x00000F4A, 0x000004B7, 0x00000F48, 0x000004BD, 0x00000F46, 0x000004C3, 0x00000F44, 0x000004C9, 0x00000F42, 0x000004CF, 0x00000F40, 0x000004D5, 0x00000F3E, 0x000004DB, 0x00000F3C, 0x000004E0, 0x00000F3B, 0x000004E6, 0x00000F39, 0x000004EC, 0x00000F37, 0x000004F2, 0x00000F35, 0x000004F8, 0x00000F33, 0x000004FE,
		0x00000F31, 0x00000504, 0x00000F2F, 0x0000050A, 0x00000F2D, 0x00000510, 0x00000F2B, 0x00000516, 0x00000F29, 0x0000051C, 0x00000F27, 0x00000522, 0x00000F25, 0x00000528, 0x00000F23, 0x0000052E, 0x00000F21, 0x00000534, 0x00000F1F, 0x0000053A, 0x00000F1D, 0x00000540, 0x00000F1B, 0x00000546, 0x00000F18, 0x0000054C, 0x00000F16, 0x00000552, 0x00000F14, 0x00000558, 0x00000F12, 0x0000055D,
		0x00000F10, 0x00000563, 0x00000F0E, 0x00000569, 0x00000F0C, 0x0000056F, 0x00000F0A, 0x00000575, 0x00000F08, 0x0000057B, 0x00000F05, 0x00000581, 0x00000F03, 0x00000587, 0x00000F01, 0x0000058D, 0x00000EFF, 0x00000593, 0x00000EFD, 0x00000599, 0x00000EFA, 0x0000059E, 0x00000EF8, 0x000005A4, 0x00000EF6, 0x000005AA, 0x00000EF4, 0x000005B0, 0x00000EF2, 0x000005B6, 0x00000EEF, 0x000005BC,
		0x00000EED, 0x000005C2, 0x00000EEB, 0x000005C7, 0x00000EE8, 0x000005CD, 0x00000EE6, 0x000005D3, 0x00000EE4, 0x000005D9, 0x00000EE2, 0x000005DF, 0x00000EDF, 0x000005E5, 0x00000EDD, 0x000005EB, 0x00000EDB, 0x000005F0, 0x00000ED8, 0x000005F6, 0x00000ED6, 0x000005FC, 0x00000ED4, 0x00000602, 0x00000ED1, 0x00000608, 0x00000ECF, 0x0000060E, 0x00000ECD, 0x00000613, 0x00000ECA, 0x00000619,
		0x00000EC8, 0x0000061F, 0x00000EC5, 0x00000625, 0x00000EC3, 0x0000062B, 0x00000EC0, 0x00000630, 0x00000EBE, 0x00000636, 0x00000EBC, 0x0000063C, 0x00000EB9, 0x00000642, 0x00000EB7, 0x00000648, 0x00000EB4, 0x0000064D, 0x00000EB2, 0x00000653, 0x00000EAF, 0x00000659, 0x00000EAD, 0x0000065F, 0x00000EAA, 0x00000664, 0x00000EA8, 0x0000066A, 0x00000EA5, 0x00000670, 0x00000EA3, 0x00000676,
		0x00000EA0, 0x0000067B, 0x00000E9E, 0x00000681, 0x00000E9B, 0x00000687, 0x00000E98, 0x0000068D, 0x00000E96, 0x00000692, 0x00000E93, 0x00000698, 0x00000E91, 0x0000069E, 0x00000E8E, 0x000006A3, 0x00000E8B, 0x000006A9, 0x00000E89, 0x000006AF, 0x00000E86, 0x000006B5, 0x00000E84, 0x000006BA, 0x00000E81, 0x000006C0, 0x00000E7E, 0x000006C6, 0x00000E7C, 0x000006CB, 0x00000E79, 0x000006D1,
		0x00000E76, 0x000006D7, 0x00000E74, 0x000006DC, 0x00000E71, 0x000006E2, 0x00000E6E, 0x000006E8, 0x00000E6B, 0x000006ED, 0x00000E69, 0x000006F3, 0x00000E66, 0x000006F9, 0x00000E63, 0x000006FE, 0x00000E60, 0x00000704, 0x00000E5E, 0x0000070A, 0x00000E5B, 0x0000070F, 0x00000E58, 0x00000715, 0x00000E55, 0x0000071B, 0x00000E53, 0x00000720, 0x00000E50, 0x00000726, 0x00000E4D, 0x0000072B,
		0x00000E4A, 0x00000731, 0x00000E47, 0x00000737, 0x00000E44, 0x0000073C, 0x00000E42, 0x00000742, 0x00000E3F, 0x00000748, 0x00000E3C, 0x0000074D, 0x00000E39, 0x00000753, 0x00000E36, 0x00000758, 0x00000E33, 0x0000075E, 0x00000E30, 0x00000763, 0x00000E2D, 0x00000769, 0x00000E2B, 0x0000076F, 0x00000E28, 0x00000774, 0x00000E25, 0x0000077A, 0x00000E22, 0x0000077F, 0x00000E1F, 0x00000785,
		0x00000E1C, 0x0000078A, 0x00000E19, 0x00000790, 0x00000E16, 0x00000795, 0x00000E13, 0x0000079B, 0x00000E10, 0x000007A0, 0x00000E0D, 0x000007A6, 0x00000E0A, 0x000007AC, 0x00000E07, 0x000007B1, 0x00000E04, 0x000007B7, 0x00000E01, 0x000007BC, 0x00000DFE, 0x000007C2, 0x00000DFB, 0x000007C7, 0x00000DF8, 0x000007CD, 0x00000DF5, 0x000007D2, 0x00000DF2, 0x000007D7, 0x00000DEE, 0x000007DD,
		0x00000DEB, 0x000007E2, 0x00000DE8, 0x000007E8, 0x00000DE5, 0x000007ED, 0x00000DE2, 0x000007F3, 0x00000DDF, 0x000007F8, 0x00000DDC, 0x000007FE, 0x00000DD9, 0x00000803, 0x00000DD5, 0x00000809, 0x00000DD2, 0x0000080E, 0x00000DCF, 0x00000813, 0x00000DCC, 0x00000819, 0x00000DC9, 0x0000081E, 0x00000DC6, 0x00000824, 0x00000DC2, 0x00000829, 0x00000DBF, 0x0000082E, 0x00000DBC, 0x00000834,
		0x00000DB9, 0x00000839, 0x00000DB6, 0x0000083F, 0x00000DB2, 0x00000844, 0x00000DAF, 0x00000849, 0x00000DAC, 0x0000084F, 0x00000DA9, 0x00000854, 0x00000DA5, 0x0000085A, 0x00000DA2, 0x0000085F, 0x00000D9F, 0x00000864, 0x00000D9B, 0x0000086A, 0x00000D98, 0x0000086F, 0x00000D95, 0x00000874, 0x00000D91, 0x0000087A, 0x00000D8E, 0x0000087F, 0x00000D8B, 0x00000884, 0x00000D87, 0x0000088A,
		0x00000D84, 0x0000088F, 0x00000D81, 0x00000894, 0x00000D7D, 0x00000899, 0x00000D7A, 0x0000089F, 0x00000D77, 0x000008A4, 0x00000D73, 0x000008A9, 0x00000D70, 0x000008AF, 0x00000D6C, 0x000008B4, 0x00000D69, 0x000008B9, 0x00000D65, 0x000008BE, 0x00000D62, 0x000008C4, 0x00000D5F, 0x000008C9, 0x00000D5B, 0x000008CE, 0x00000D58, 0x000008D3, 0x00000D54, 0x000008D9, 0x00000D51, 0x000008DE,
		0x00000D4D, 0x000008E3, 0x00000D4A, 0x000008E8, 0x00000D46, 0x000008EE, 0x00000D43, 0x000008F3, 0x00000D3F, 0x000008F8, 0x00000D3C, 0x000008FD, 0x00000D38, 0x00000902, 0x00000D35, 0x00000908, 0x00000D31, 0x0000090D, 0x00000D2D, 0x00000912, 0x00000D2A, 0x00000917, 0x00000D26, 0x0000091C, 0x00000D23, 0x00000921, 0x00000D1F, 0x00000927, 0x00000D1C, 0x0000092C, 0x00000D18, 0x00000931,
		0x00000D14, 0x00000936, 0x00000D11, 0x0000093B, 0x00000D0D, 0x00000940, 0x00000D09, 0x00000945, 0x00000D06, 0x0000094B, 0x00000D02, 0x00000950, 0x00000CFE, 0x00000955, 0x00000CFB, 0x0000095A, 0x00000CF7, 0x0000095F, 0x00000CF3, 0x00000964, 0x00000CF0, 0x00000969, 0x00000CEC, 0x0000096E, 0x00000CE8, 0x00000973, 0x00000CE5, 0x00000978, 0x00000CE1, 0x0000097D, 0x00000CDD, 0x00000982,
		0x00000CD9, 0x00000987, 0x00000CD6, 0x0000098D, 0x00000CD2, 0x00000992, 0x00000CCE, 0x00000997, 0x00000CCA, 0x0000099C, 0x00000CC7, 0x000009A1, 0x00000CC3, 0x000009A6, 0x00000CBF, 0x000009AB, 0x00000CBB, 0x000009B0, 0x00000CB7, 0x000009B5, 0x00000CB4, 0x000009BA, 0x00000CB0, 0x000009BF, 0x00000CAC, 0x000009C4, 0x00000CA8, 0x000009C9, 0x00000CA4, 0x000009CE, 0x00000CA0, 0x000009D3,
		0x00000C9D, 0x000009D7, 0x00000C99, 0x000009DC, 0x00000C95, 0x000009E1, 0x00000C91, 0x000009E6, 0x00000C8D, 0x000009EB, 0x00000C89, 0x000009F0, 0x00000C85, 0x000009F5, 0x00000C81, 0x000009FA, 0x00000C7D, 0x000009FF, 0x00000C79, 0x00000A04, 0x00000C76, 0x00000A09, 0x00000C72, 0x00000A0E, 0x00000C6E, 0x00000A12, 0x00000C6A, 0x00000A17, 0x00000C66, 0x00000A1C, 0x00000C62, 0x00000A21,
		0x00000C5E, 0x00000A26, 0x00000C5A, 0x00000A2B, 0x00000C56, 0x00000A30, 0x00000C52, 0x00000A35, 0x00000C4E, 0x00000A39, 0x00000C4A, 0x00000A3E, 0x00000C46, 0x00000A43, 0x00000C42, 0x00000A48, 0x00000C3E, 0x00000A4D, 0x00000C3A, 0x00000A51, 0x00000C36, 0x00000A56, 0x00000C31, 0x00000A5B, 0x00000C2D, 0x00000A60, 0x00000C29, 0x00000A65, 0x00000C25, 0x00000A69, 0x00000C21, 0x00000A6E,
		0x00000C1D, 0x00000A73, 0x00000C19, 0x00000A78, 0x00000C15, 0x00000A7C, 0x00000C11, 0x00000A81, 0x00000C0D, 0x00000A86, 0x00000C08, 0x00000A8B, 0x00000C04, 0x00000A8F, 0x00000C00, 0x00000A94, 0x00000BFC, 0x00000A99, 0x00000BF8, 0x00000A9D, 0x00000BF4, 0x00000AA2, 0x00000BEF, 0x00000AA7, 0x00000BEB, 0x00000AAC, 0x00000BE7, 0x00000AB0, 0x00000BE3, 0x00000AB5, 0x00000BDF, 0x00000ABA,
		0x00000BDA, 0x00000ABE, 0x00000BD6, 0x00000AC3, 0x00000BD2, 0x00000AC8, 0x00000BCE, 0x00000ACC, 0x00000BCA, 0x00000AD1, 0x00000BC5, 0x00000AD5, 0x00000BC1, 0x00000ADA, 0x00000BBD, 0x00000ADF, 0x00000BB8, 0x00000AE3, 0x00000BB4, 0x00000AE8, 0x00000BB0, 0x00000AEC, 0x00000BAC, 0x00000AF1, 0x00000BA7, 0x00000AF6, 0x00000BA3, 0x00000AFA, 0x00000B9F, 0x00000AFF, 0x00000B9A, 0x00000B03,
		0x00000B96, 0x00000B08, 0x00000B92, 0x00000B0C, 0x00000B8D, 0x00000B11, 0x00000B89, 0x00000B15, 0x00000B85, 0x00000B1A, 0x00000B80, 0x00000B1F, 0x00000B7C, 0x00000B23, 0x00000B78, 0x00000B28, 0x00000B73, 0x00000B2C, 0x00000B6F, 0x00000B31, 0x00000B6A, 0x00000B35, 0x00000B66, 0x00000B3A, 0x00000B62, 0x00000B3E, 0x00000B5D, 0x00000B42, 0x00000B59, 0x00000B47, 0x00000B54, 0x00000B4B,
		0x00000B50, 0x00000B50, 0x00000B4B, 0x00000B54, 0x00000B47, 0x00000B59, 0x00000B42, 0x00000B5D, 0x00000B3E, 0x00000B62, 0x00000B3A, 0x00000B66, 0x00000B35, 0x00000B6A, 0x00000B31, 0x00000B6F, 0x00000B2C, 0x00000B73, 0x00000B28, 0x00000B78, 0x00000B23, 0x00000B7C, 0x00000B1F, 0x00000B80, 0x00000B1A, 0x00000B85, 0x00000B15, 0x00000B89, 0x00000B11, 0x00000B8D, 0x00000B0C, 0x00000B92,
		0x00000B08, 0x00000B96, 0x00000B03, 0x00000B9A, 0x00000AFF, 0x00000B9F, 0x00000AFA, 0x00000BA3, 0x00000AF6, 0x00000BA7, 0x00000AF1, 0x00000BAC, 0x00000AEC, 0x00000BB0, 0x00000AE8, 0x00000BB4, 0x00000AE3, 0x00000BB8, 0x00000ADF, 0x00000BBD, 0x00000ADA, 0x00000BC1, 0x00000AD5, 0x00000BC5, 0x00000AD1, 0x00000BCA, 0x00000ACC, 0x00000BCE, 0x00000AC8, 0x00000BD2, 0x00000AC3, 0x00000BD6,
		0x00000ABE, 0x00000BDA, 0x00000ABA, 0x00000BDF, 0x00000AB5, 0x00000BE3, 0x00000AB0, 0x00000BE7, 0x00000AAC, 0x00000BEB, 0x00000AA7, 0x00000BEF, 0x00000AA2, 0x00000BF4, 0x00000A9D, 0x00000BF8, 0x00000A99, 0x00000BFC, 0x00000A94, 0x00000C00, 0x00000A8F, 0x00000C04, 0x00000A8B, 0x00000C08, 0x00000A86, 0x00000C0D, 0x00000A81, 0x00000C11, 0x00000A7C, 0x00000C15, 0x00000A78, 0x00000C19,
		0x00000A73, 0x00000C1D, 0x00000A6E, 0x00000C21, 0x00000A69, 0x00000C25, 0x00000A65, 0x00000C29, 0x00000A60, 0x00000C2D, 0x00000A5B, 0x00000C31, 0x00000A56, 0x00000C36, 0x00000A51, 0x00000C3A, 0x00000A4D, 0x00000C3E, 0x00000A48, 0x00000C42, 0x00000A43, 0x00000C46, 0x00000A3E, 0x00000C4A, 0x00000A39, 0x00000C4E, 0x00000A35, 0x00000C52, 0x00000A30, 0x00000C56, 0x00000A2B, 0x00000C5A,
		0x00000A26, 0x00000C5E, 0x00000A21, 0x00000C62, 0x00000A1C, 0x00000C66, 0x00000A17, 0x00000C6A, 0x00000A12, 0x00000C6E, 0x00000A0E, 0x00000C72, 0x00000A09, 0x00000C76, 0x00000A04, 0x00000C79, 0x000009FF, 0x00000C7D, 0x000009FA, 0x00000C81, 0x000009F5, 0x00000C85, 0x000009F0, 0x00000C89, 0x000009EB, 0x00000C8D, 0x000009E6, 0x00000C91, 0x000009E1, 0x00000C95, 0x000009DC, 0x00000C99,
		0x000009D7, 0x00000C9D, 0x000009D3, 0x00000CA0, 0x000009CE, 0x00000CA4, 0x000009C9, 0x00000CA8, 0x000009C4, 0x00000CAC, 0x000009BF, 0x00000CB0, 0x000009BA, 0x00000CB4, 0x000009B5, 0x00000CB7, 0x000009B0, 0x00000CBB, 0x000009AB, 0x00000CBF, 0x000009A6, 0x00000CC3, 0x000009A1, 0x00000CC7, 0x0000099C, 0x00000CCA, 0x00000997, 0x00000CCE, 0x00000992, 0x00000CD2, 0x0000098D, 0x00000CD6,
		0x00000987, 0x00000CD9, 0x00000982, 0x00000CDD, 0x0000097D, 0x00000CE1, 0x00000978, 0x00000CE5, 0x00000973, 0x00000CE8, 0x0000096E, 0x00000CEC, 0x00000969, 0x00000CF0, 0x00000964, 0x00000CF3, 0x0000095F, 0x00000CF7, 0x0000095A, 0x00000CFB, 0x00000955, 0x00000CFE, 0x00000950, 0x00000D02, 0x0000094B, 0x00000D06, 0x00000945, 0x00000D09, 0x00000940, 0x00000D0D, 0x0000093B, 0x00000D11,
		0x00000936, 0x00000D14, 0x00000931, 0x00000D18, 0x0000092C, 0x00000D1C, 0x00000927, 0x00000D1F, 0x00000921, 0x00000D23, 0x0000091C, 0x00000D26, 0x00000917, 0x00000D2A, 0x00000912, 0x00000D2D, 0x0000090D, 0x00000D31, 0x00000908, 0x00000D35, 0x00000902, 0x00000D38, 0x000008FD, 0x00000D3C, 0x000008F8, 0x00000D3F, 0x000008F3, 0x00000D43, 0x000008EE, 0x00000D46, 0x000008E8, 0x00000D4A,
		0x000008E3, 0x00000D4D, 0x000008DE, 0x00000D51, 0x000008D9, 0x00000D54, 0x000008D3, 0x00000D58, 0x000008CE, 0x00000D5B, 0x000008C9, 0x00000D5F, 0x000008C4, 0x00000D62, 0x000008BE, 0x00000D65, 0x000008B9, 0x00000D69, 0x000008B4, 0x00000D6C, 0x000008AF, 0x00000D70, 0x000008A9, 0x00000D73, 0x000008A4, 0x00000D77, 0x0000089F, 0x00000D7A, 0x00000899, 0x00000D7D, 0x00000894, 0x00000D81,
		0x0000088F, 0x00000D84, 0x0000088A, 0x00000D87, 0x00000884, 0x00000D8B, 0x0000087F, 0x00000D8E, 0x0000087A, 0x00000D91, 0x00000874, 0x00000D95, 0x0000086F, 0x00000D98, 0x0000086A, 0x00000D9B, 0x00000864, 0x00000D9F, 0x0000085F, 0x00000DA2, 0x0000085A, 0x00000DA5, 0x00000854, 0x00000DA9, 0x0000084F, 0x00000DAC, 0x00000849, 0x00000DAF, 0x00000844, 0x00000DB2, 0x0000083F, 0x00000DB6,
		0x00000839, 0x00000DB9, 0x00000834, 0x00000DBC, 0x0000082E, 0x00000DBF, 0x00000829, 0x00000DC2, 0x00000824, 0x00000DC6, 0x0000081E, 0x00000DC9, 0x00000819, 0x00000DCC, 0x00000813, 0x00000DCF, 0x0000080E, 0x00000DD2, 0x00000809, 0x00000DD5, 0x00000803, 0x00000DD9, 0x000007FE, 0x00000DDC, 0x000007F8, 0x00000DDF, 0x000007F3, 0x00000DE2, 0x000007ED, 0x00000DE5, 0x000007E8, 0x00000DE8,
		0x000007E2, 0x00000DEB, 0x000007DD, 0x00000DEE, 0x000007D7, 0x00000DF2, 0x000007D2, 0x00000DF5, 0x000007CD, 0x00000DF8, 0x000007C7, 0x00000DFB, 0x000007C2, 0x00000DFE, 0x000007BC, 0x00000E01, 0x000007B7, 0x00000E04, 0x000007B1, 0x00000E07, 0x000007AC, 0x00000E0A, 0x000007A6, 0x00000E0D, 0x000007A0, 0x00000E10, 0x0000079B, 0x00000E13, 0x00000795, 0x00000E16, 0x00000790, 0x00000E19,
		0x0000078A, 0x00000E1C, 0x00000785, 0x00000E1F, 0x0000077F, 0x00000E22, 0x0000077A, 0x00000E25, 0x00000774, 0x00000E28, 0x0000076F, 0x00000E2B, 0x00000769, 0x00000E2D, 0x00000763, 0x00000E30, 0x0000075E, 0x00000E33, 0x00000758, 0x00000E36, 0x00000753, 0x00000E39, 0x0000074D, 0x00000E3C, 0x00000748, 0x00000E3F, 0x00000742, 0x00000E42, 0x0000073C, 0x00000E44, 0x00000737, 0x00000E47,
		0x00000731, 0x00000E4A, 0x0000072B, 0x00000E4D, 0x00000726, 0x00000E50, 0x00000720, 0x00000E53, 0x0000071B, 0x00000E55, 0x00000715, 0x00000E58, 0x0000070F, 0x00000E5B, 0x0000070A, 0x00000E5E, 0x00000704, 0x00000E60, 0x000006FE, 0x00000E63, 0x000006F9, 0x00000E66, 0x000006F3, 0x00000E69, 0x000006ED, 0x00000E6B, 0x000006E8, 0x00000E6E, 0x000006E2, 0x00000E71, 0x000006DC, 0x00000E74,
		0x000006D7, 0x00000E76, 0x000006D1, 0x00000E79, 0x000006CB, 0x00000E7C, 0x000006C6, 0x00000E7E, 0x000006C0, 0x00000E81, 0x000006BA, 0x00000E84, 0x000006B5, 0x00000E86, 0x000006AF, 0x00000E89, 0x000006A9, 0x00000E8B, 0x000006A3, 0x00000E8E, 0x0000069E, 0x00000E91, 0x00000698, 0x00000E93, 0x00000692, 0x00000E96, 0x0000068D, 0x00000E98, 0x00000687, 0x00000E9B, 0x00000681, 0x00000E9E,
		0x0000067B, 0x00000EA0, 0x00000676, 0x00000EA3, 0x00000670, 0x00000EA5, 0x0000066A, 0x00000EA8, 0x00000664, 0x00000EAA, 0x0000065F, 0x00000EAD, 0x00000659, 0x00000EAF, 0x00000653, 0x00000EB2, 0x0000064D, 0x00000EB4, 0x00000648, 0x00000EB7, 0x00000642, 0x00000EB9, 0x0000063C, 0x00000EBC, 0x00000636, 0x00000EBE, 0x00000630, 0x00000EC0, 0x0000062B, 0x00000EC3, 0x00000625, 0x00000EC5,
		0x0000061F, 0x00000EC8, 0x00000619, 0x00000ECA, 0x00000613, 0x00000ECD, 0x0000060E, 0x00000ECF, 0x00000608, 0x00000ED1, 0x00000602, 0x00000ED4, 0x000005FC, 0x00000ED6, 0x000005F6, 0x00000ED8, 0x000005F0, 0x00000EDB, 0x000005EB, 0x00000EDD, 0x000005E5, 0x00000EDF, 0x000005DF, 0x00000EE2, 0x000005D9, 0x00000EE4, 0x000005D3, 0x00000EE6, 0x000005CD, 0x00000EE8, 0x000005C7, 0x00000EEB,
		0x000005C2, 0x00000EED, 0x000005BC, 0x00000EEF, 0x000005B6, 0x00000EF2, 0x000005B0, 0x00000EF4, 0x000005AA, 0x00000EF6, 0x000005A4, 0x00000EF8, 0x0000059E, 0x00000EFA, 0x00000599, 0x00000EFD, 0x00000593, 0x00000EFF, 0x0000058D, 0x00000F01, 0x00000587, 0x00000F03, 0x00000581, 0x00000F05, 0x0000057B, 0x00000F08, 0x00000575, 0x00000F0A, 0x0000056F, 0x00000F0C, 0x00000569, 0x00000F0E,
		0x00000563, 0x00000F10, 0x0000055D, 0x00000F12, 0x00000558, 0x00000F14, 0x00000552, 0x00000F16, 0x0000054C, 0x00000F18, 0x00000546, 0x00000F1B, 0x00000540, 0x00000F1D, 0x0000053A, 0x00000F1F, 0x00000534, 0x00000F21, 0x0000052E, 0x00000F23, 0x00000528, 0x00000F25, 0x00000522, 0x00000F27, 0x0000051C, 0x00000F29, 0x00000516, 0x00000F2B, 0x00000510, 0x00000F2D, 0x0000050A, 0x00000F2F,
		0x00000504, 0x00000F31, 0x000004FE, 0x00000F33, 0x000004F8, 0x00000F35, 0x000004F2, 0x00000F37, 0x000004EC, 0x00000F39, 0x000004E6, 0x00000F3B, 0x000004E0, 0x00000F3C, 0x000004DB, 0x00000F3E, 0x000004D5, 0x00000F40, 0x000004CF, 0x00000F42, 0x000004C9, 0x00000F44, 0x000004C3, 0x00000F46, 0x000004BD, 0x00000F48, 0x000004B7, 0x00000F4A, 0x000004B1, 0x00000F4B, 0x000004AB, 0x00000F4D,
		0x000004A5, 0x00000F4F, 0x0000049E, 0x00000F51, 0x00000498, 0x00000F53, 0x00000492, 0x00000F55, 0x0000048C, 0x00000F56, 0x00000486, 0x00000F58, 0x00000480, 0x00000F5A, 0x0000047A, 0x00000F5C, 0x00000474, 0x00000F5D, 0x0000046E, 0x00000F5F, 0x00000468, 0x00000F61, 0x00000462, 0x00000F63, 0x0000045C, 0x00000F64, 0x00000456, 0x00000F66, 0x00000450, 0x00000F68, 0x0000044A, 0x00000F69,
		0x00000444, 0x00000F6B, 0x0000043E, 0x00000F6D, 0x00000438, 0x00000F6E, 0x00000432, 0x00000F70, 0x0000042C, 0x00000F72, 0x00000426, 0x00000F73, 0x00000420, 0x00000F75, 0x0000041A, 0x00000F77, 0x00000413, 0x00000F78, 0x0000040D, 0x00000F7A, 0x00000407, 0x00000F7B, 0x00000401, 0x00000F7D, 0x000003FB, 0x00000F7F, 0x000003F5, 0x00000F80, 0x000003EF, 0x00000F82, 0x000003E9, 0x00000F83,
		0x000003E3, 0x00000F85, 0x000003DD, 0x00000F86, 0x000003D7, 0x00000F88, 0x000003D0, 0x00000F89, 0x000003CA, 0x00000F8B, 0x000003C4, 0x00000F8C, 0x000003BE, 0x00000F8E, 0x000003B8, 0x00000F8F, 0x000003B2, 0x00000F91, 0x000003AC, 0x00000F92, 0x000003A6, 0x00000F94, 0x000003A0, 0x00000F95, 0x00000399, 0x00000F96, 0x00000393, 0x00000F98, 0x0000038D, 0x00000F99, 0x00000387, 0x00000F9B,
		0x00000381, 0x00000F9C, 0x0000037B, 0x00000F9D, 0x00000375, 0x00000F9F, 0x0000036F, 0x00000FA0, 0x00000368, 0x00000FA1, 0x00000362, 0x00000FA3, 0x0000035C, 0x00000FA4, 0x00000356, 0x00000FA5, 0x00000350, 0x00000FA7, 0x0000034A, 0x00000FA8, 0x00000344, 0x00000FA9, 0x0000033D, 0x00000FAB, 0x00000337, 0x00000FAC, 0x00000331, 0x00000FAD, 0x0000032B, 0x00000FAE, 0x00000325, 0x00000FB0,
		0x0000031F, 0x00000FB1, 0x00000318, 0x00000FB2, 0x00000312, 0x00000FB3, 0x0000030C, 0x00000FB4, 0x00000306, 0x00000FB6, 0x00000300, 0x00000FB7, 0x000002FA, 0x00000FB8, 0x000002F3, 0x00000FB9, 0x000002ED, 0x00000FBA, 0x000002E7, 0x00000FBB, 0x000002E1, 0x00000FBD, 0x000002DB, 0x00000FBE, 0x000002D5, 0x00000FBF, 0x000002CE, 0x00000FC0, 0x000002C8, 0x00000FC1, 0x000002C2, 0x00000FC2,
		0x000002BC, 0x00000FC3, 0x000002B6, 0x00000FC4, 0x000002AF, 0x00000FC5, 0x000002A9, 0x00000FC6, 0x000002A3, 0x00000FC7, 0x0000029D, 0x00000FC8, 0x00000297, 0x00000FC9, 0x00000290, 0x00000FCA, 0x0000028A, 0x00000FCB, 0x00000284, 0x00000FCC, 0x0000027E, 0x00000FCD, 0x00000278, 0x00000FCE, 0x00000271, 0x00000FCF, 0x0000026B, 0x00000FD0, 0x00000265, 0x00000FD1, 0x0000025F, 0x00000FD2,
		0x00000259, 0x00000FD3, 0x00000252, 0x00000FD4, 0x0000024C, 0x00000FD5, 0x00000246, 0x00000FD6, 0x00000240, 0x00000FD7, 0x00000239, 0x00000FD8, 0x00000233, 0x00000FD9, 0x0000022D, 0x00000FD9, 0x00000227, 0x00000FDA, 0x00000221, 0x00000FDB, 0x0000021A, 0x00000FDC, 0x00000214, 0x00000FDD, 0x0000020E, 0x00000FDE, 0x00000208, 0x00000FDE, 0x00000201, 0x00000FDF, 0x000001FB, 0x00000FE0,
		0x000001F5, 0x00000FE1, 0x000001EF, 0x00000FE1, 0x000001E8, 0x00000FE2, 0x000001E2, 0x00000FE3, 0x000001DC, 0x00000FE4, 0x000001D6, 0x00000FE4, 0x000001CF, 0x00000FE5, 0x000001C9, 0x00000FE6, 0x000001C3, 0x00000FE7, 0x000001BD, 0x00000FE7, 0x000001B6, 0x00000FE8, 0x000001B0, 0x00000FE9, 0x000001AA, 0x00000FE9, 0x000001A4, 0x00000FEA, 0x0000019D, 0x00000FEB, 0x00000197, 0x00000FEB,
		0x00000191, 0x00000FEC, 0x0000018B, 0x00000FEC, 0x00000184, 0x00000FED, 0x0000017E, 0x00000FEE, 0x00000178, 0x00000FEE, 0x00000172, 0x00000FEF, 0x0000016B, 0x00000FEF, 0x00000165, 0x00000FF0, 0x0000015F, 0x00000FF0, 0x00000159, 0x00000FF1, 0x00000152, 0x00000FF1, 0x0000014C, 0x00000FF2, 0x00000146, 0x00000FF2, 0x00000140, 0x00000FF3, 0x00000139, 0x00000FF3, 0x00000133, 0x00000FF4,
		0x0000012D, 0x00000FF4, 0x00000127, 0x00000FF5, 0x00000120, 0x00000FF5, 0x0000011A, 0x00000FF6, 0x00000114, 0x00000FF6, 0x0000010D, 0x00000FF7, 0x00000107, 0x00000FF7, 0x00000101, 0x00000FF7, 0x000000FB, 0x00000FF8, 0x000000F4, 0x00000FF8, 0x000000EE, 0x00000FF9, 0x000000E8, 0x00000FF9, 0x000000E2, 0x00000FF9, 0x000000DB, 0x00000FFA, 0x000000D5, 0x00000FFA, 0x000000CF, 0x00000FFA,
		0x000000C8, 0x00000FFB, 0x000000C2, 0x00000FFB, 0x000000BC, 0x00000FFB, 0x000000B6, 0x00000FFB, 0x000000AF, 0x00000FFC, 0x000000A9, 0x00000FFC, 0x000000A3, 0x00000FFC, 0x0000009D, 0x00000FFC, 0x00000096, 0x00000FFD, 0x00000090, 0x00000FFD, 0x0000008A, 0x00000FFD, 0x00000083, 0x00000FFD, 0x0000007D, 0x00000FFE, 0x00000077, 0x00000FFE, 0x00000071, 0x00000FFE, 0x0000006A, 0x00000FFE,
		0x00000064, 0x00000FFE, 0x0000005E, 0x00000FFE, 0x00000057, 0x00000FFF, 0x00000051, 0x00000FFF, 0x0000004B, 0x00000FFF, 0x00000045, 0x00000FFF, 0x0000003E, 0x00000FFF, 0x00000038, 0x00000FFF, 0x00000032, 0x00000FFF, 0x0000002B, 0x00000FFF, 0x00000025, 0x00000FFF, 0x0000001F, 0x00000FFF, 0x00000019, 0x00000FFF, 0x00000012, 0x00000FFF, 0x0000000C, 0x00000FFF, 0x00000006, 0x00000FFF,
		0x00000000, 0x00001000, 0xFFFFFFFA, 0x00000FFF, 0xFFFFFFF4, 0x00000FFF, 0xFFFFFFEE, 0x00000FFF, 0xFFFFFFE7, 0x00000FFF, 0xFFFFFFE1, 0x00000FFF, 0xFFFFFFDB, 0x00000FFF, 0xFFFFFFD5, 0x00000FFF, 0xFFFFFFCE, 0x00000FFF, 0xFFFFFFC8, 0x00000FFF, 0xFFFFFFC2, 0x00000FFF, 0xFFFFFFBB, 0x00000FFF, 0xFFFFFFB5, 0x00000FFF, 0xFFFFFFAF, 0x00000FFF, 0xFFFFFFA9, 0x00000FFF, 0xFFFFFFA2, 0x00000FFE,
		0xFFFFFF9C, 0x00000FFE, 0xFFFFFF96, 0x00000FFE, 0xFFFFFF8F, 0x00000FFE, 0xFFFFFF89, 0x00000FFE, 0xFFFFFF83, 0x00000FFE, 0xFFFFFF7D, 0x00000FFD, 0xFFFFFF76, 0x00000FFD, 0xFFFFFF70, 0x00000FFD, 0xFFFFFF6A, 0x00000FFD, 0xFFFFFF63, 0x00000FFC, 0xFFFFFF5D, 0x00000FFC, 0xFFFFFF57, 0x00000FFC, 0xFFFFFF51, 0x00000FFC, 0xFFFFFF4A, 0x00000FFB, 0xFFFFFF44, 0x00000FFB, 0xFFFFFF3E, 0x00000FFB,
		0xFFFFFF38, 0x00000FFB, 0xFFFFFF31, 0x00000FFA, 0xFFFFFF2B, 0x00000FFA, 0xFFFFFF25, 0x00000FFA, 0xFFFFFF1E, 0x00000FF9, 0xFFFFFF18, 0x00000FF9, 0xFFFFFF12, 0x00000FF9, 0xFFFFFF0C, 0x00000FF8, 0xFFFFFF05, 0x00000FF8, 0xFFFFFEFF, 0x00000FF7, 0xFFFFFEF9, 0x00000FF7, 0xFFFFFEF3, 0x00000FF7, 0xFFFFFEEC, 0x00000FF6, 0xFFFFFEE6, 0x00000FF6, 0xFFFFFEE0, 0x00000FF5, 0xFFFFFED9, 0x00000FF5,
		0xFFFFFED3, 0x00000FF4, 0xFFFFFECD, 0x00000FF4, 0xFFFFFEC7, 0x00000FF3, 0xFFFFFEC0, 0x00000FF3, 0xFFFFFEBA, 0x00000FF2, 0xFFFFFEB4, 0x00000FF2, 0xFFFFFEAE, 0x00000FF1, 0xFFFFFEA7, 0x00000FF1, 0xFFFFFEA1, 0x00000FF0, 0xFFFFFE9B, 0x00000FF0, 0xFFFFFE95, 0x00000FEF, 0xFFFFFE8E, 0x00000FEF, 0xFFFFFE88, 0x00000FEE, 0xFFFFFE82, 0x00000FEE, 0xFFFFFE7C, 0x00000FED, 0xFFFFFE75, 0x00000FEC,
		0xFFFFFE6F, 0x00000FEC, 0xFFFFFE69, 0x00000FEB, 0xFFFFFE63, 0x00000FEB, 0xFFFFFE5C, 0x00000FEA, 0xFFFFFE56, 0x00000FE9, 0xFFFFFE50, 0x00000FE9, 0xFFFFFE4A, 0x00000FE8, 0xFFFFFE43, 0x00000FE7, 0xFFFFFE3D, 0x00000FE7, 0xFFFFFE37, 0x00000FE6, 0xFFFFFE31, 0x00000FE5, 0xFFFFFE2A, 0x00000FE4, 0xFFFFFE24, 0x00000FE4, 0xFFFFFE1E, 0x00000FE3, 0xFFFFFE18, 0x00000FE2, 0xFFFFFE11, 0x00000FE1,
		0xFFFFFE0B, 0x00000FE1, 0xFFFFFE05, 0x00000FE0, 0xFFFFFDFF, 0x00000FDF, 0xFFFFFDF8, 0x00000FDE, 0xFFFFFDF2, 0x00000FDE, 0xFFFFFDEC, 0x00000FDD, 0xFFFFFDE6, 0x00000FDC, 0xFFFFFDDF, 0x00000FDB, 0xFFFFFDD9, 0x00000FDA, 0xFFFFFDD3, 0x00000FD9, 0xFFFFFDCD, 0x00000FD9, 0xFFFFFDC7, 0x00000FD8, 0xFFFFFDC0, 0x00000FD7, 0xFFFFFDBA, 0x00000FD6, 0xFFFFFDB4, 0x00000FD5, 0xFFFFFDAE, 0x00000FD4,
		0xFFFFFDA7, 0x00000FD3, 0xFFFFFDA1, 0x00000FD2, 0xFFFFFD9B, 0x00000FD1, 0xFFFFFD95, 0x00000FD0, 0xFFFFFD8F, 0x00000FCF, 0xFFFFFD88, 0x00000FCE, 0xFFFFFD82, 0x00000FCD, 0xFFFFFD7C, 0x00000FCC, 0xFFFFFD76, 0x00000FCB, 0xFFFFFD70, 0x00000FCA, 0xFFFFFD69, 0x00000FC9, 0xFFFFFD63, 0x00000FC8, 0xFFFFFD5D, 0x00000FC7, 0xFFFFFD57, 0x00000FC6, 0xFFFFFD51, 0x00000FC5, 0xFFFFFD4A, 0x00000FC4,
		0xFFFFFD44, 0x00000FC3, 0xFFFFFD3E, 0x00000FC2, 0xFFFFFD38, 0x00000FC1, 0xFFFFFD32, 0x00000FC0, 0xFFFFFD2B, 0x00000FBF, 0xFFFFFD25, 0x00000FBE, 0xFFFFFD1F, 0x00000FBD, 0xFFFFFD19, 0x00000FBB, 0xFFFFFD13, 0x00000FBA, 0xFFFFFD0D, 0x00000FB9, 0xFFFFFD06, 0x00000FB8, 0xFFFFFD00, 0x00000FB7, 0xFFFFFCFA, 0x00000FB6, 0xFFFFFCF4, 0x00000FB4, 0xFFFFFCEE, 0x00000FB3, 0xFFFFFCE8, 0x00000FB2,
		0xFFFFFCE1, 0x00000FB1, 0xFFFFFCDB, 0x00000FB0, 0xFFFFFCD5, 0x00000FAE, 0xFFFFFCCF, 0x00000FAD, 0xFFFFFCC9, 0x00000FAC, 0xFFFFFCC3, 0x00000FAB, 0xFFFFFCBC, 0x00000FA9, 0xFFFFFCB6, 0x00000FA8, 0xFFFFFCB0, 0x00000FA7, 0xFFFFFCAA, 0x00000FA5, 0xFFFFFCA4, 0x00000FA4, 0xFFFFFC9E, 0x00000FA3, 0xFFFFFC98, 0x00000FA1, 0xFFFFFC91, 0x00000FA0, 0xFFFFFC8B, 0x00000F9F, 0xFFFFFC85, 0x00000F9D,
		0xFFFFFC7F, 0x00000F9C, 0xFFFFFC79, 0x00000F9B, 0xFFFFFC73, 0x00000F99, 0xFFFFFC6D, 0x00000F98, 0xFFFFFC67, 0x00000F96, 0xFFFFFC60, 0x00000F95, 0xFFFFFC5A, 0x00000F94, 0xFFFFFC54, 0x00000F92, 0xFFFFFC4E, 0x00000F91, 0xFFFFFC48, 0x00000F8F, 0xFFFFFC42, 0x00000F8E, 0xFFFFFC3C, 0x00000F8C, 0xFFFFFC36, 0x00000F8B, 0xFFFFFC30, 0x00000F89, 0xFFFFFC29, 0x00000F88, 0xFFFFFC23, 0x00000F86,
		0xFFFFFC1D, 0x00000F85, 0xFFFFFC17, 0x00000F83, 0xFFFFFC11, 0x00000F82, 0xFFFFFC0B, 0x00000F80, 0xFFFFFC05, 0x00000F7F, 0xFFFFFBFF, 0x00000F7D, 0xFFFFFBF9, 0x00000F7B, 0xFFFFFBF3, 0x00000F7A, 0xFFFFFBED, 0x00000F78, 0xFFFFFBE6, 0x00000F77, 0xFFFFFBE0, 0x00000F75, 0xFFFFFBDA, 0x00000F73, 0xFFFFFBD4, 0x00000F72, 0xFFFFFBCE, 0x00000F70, 0xFFFFFBC8, 0x00000F6E, 0xFFFFFBC2, 0x00000F6D,
		0xFFFFFBBC, 0x00000F6B, 0xFFFFFBB6, 0x00000F69, 0xFFFFFBB0, 0x00000F68, 0xFFFFFBAA, 0x00000F66, 0xFFFFFBA4, 0x00000F64, 0xFFFFFB9E, 0x00000F63, 0xFFFFFB98, 0x00000F61, 0xFFFFFB92, 0x00000F5F, 0xFFFFFB8C, 0x00000F5D, 0xFFFFFB86, 0x00000F5C, 0xFFFFFB80, 0x00000F5A, 0xFFFFFB7A, 0x00000F58, 0xFFFFFB74, 0x00000F56, 0xFFFFFB6E, 0x00000F55, 0xFFFFFB68, 0x00000F53, 0xFFFFFB62, 0x00000F51,
		0xFFFFFB5B, 0x00000F4F, 0xFFFFFB55, 0x00000F4D, 0xFFFFFB4F, 0x00000F4B, 0xFFFFFB49, 0x00000F4A, 0xFFFFFB43, 0x00000F48, 0xFFFFFB3D, 0x00000F46, 0xFFFFFB37, 0x00000F44, 0xFFFFFB31, 0x00000F42, 0xFFFFFB2B, 0x00000F40, 0xFFFFFB25, 0x00000F3E, 0xFFFFFB20, 0x00000F3C, 0xFFFFFB1A, 0x00000F3B, 0xFFFFFB14, 0x00000F39, 0xFFFFFB0E, 0x00000F37, 0xFFFFFB08, 0x00000F35, 0xFFFFFB02, 0x00000F33,
		0xFFFFFAFC, 0x00000F31, 0xFFFFFAF6, 0x00000F2F, 0xFFFFFAF0, 0x00000F2D, 0xFFFFFAEA, 0x00000F2B, 0xFFFFFAE4, 0x00000F29, 0xFFFFFADE, 0x00000F27, 0xFFFFFAD8, 0x00000F25, 0xFFFFFAD2, 0x00000F23, 0xFFFFFACC, 0x00000F21, 0xFFFFFAC6, 0x00000F1F, 0xFFFFFAC0, 0x00000F1D, 0xFFFFFABA, 0x00000F1B, 0xFFFFFAB4, 0x00000F18, 0xFFFFFAAE, 0x00000F16, 0xFFFFFAA8, 0x00000F14, 0xFFFFFAA3, 0x00000F12,
		0xFFFFFA9D, 0x00000F10, 0xFFFFFA97, 0x00000F0E, 0xFFFFFA91, 0x00000F0C, 0xFFFFFA8B, 0x00000F0A, 0xFFFFFA85, 0x00000F08, 0xFFFFFA7F, 0x00000F05, 0xFFFFFA79, 0x00000F03, 0xFFFFFA73, 0x00000F01, 0xFFFFFA6D, 0x00000EFF, 0xFFFFFA67, 0x00000EFD, 0xFFFFFA62, 0x00000EFA, 0xFFFFFA5C, 0x00000EF8, 0xFFFFFA56, 0x00000EF6, 0xFFFFFA50, 0x00000EF4, 0xFFFFFA4A, 0x00000EF2, 0xFFFFFA44, 0x00000EEF,
		0xFFFFFA3E, 0x00000EED, 0xFFFFFA39, 0x00000EEB, 0xFFFFFA33, 0x00000EE8, 0xFFFFFA2D, 0x00000EE6, 0xFFFFFA27, 0x00000EE4, 0xFFFFFA21, 0x00000EE2, 0xFFFFFA1B, 0x00000EDF, 0xFFFFFA15, 0x00000EDD, 0xFFFFFA10, 0x00000EDB, 0xFFFFFA0A, 0x00000ED8, 0xFFFFFA04, 0x00000ED6, 0xFFFFF9FE, 0x00000ED4, 0xFFFFF9F8, 0x00000ED1, 0xFFFFF9F2, 0x00000ECF, 0xFFFFF9ED, 0x00000ECD, 0xFFFFF9E7, 0x00000ECA,
		0xFFFFF9E1, 0x00000EC8, 0xFFFFF9DB, 0x00000EC5, 0xFFFFF9D5, 0x00000EC3, 0xFFFFF9D0, 0x00000EC0, 0xFFFFF9CA, 0x00000EBE, 0xFFFFF9C4, 0x00000EBC, 0xFFFFF9BE, 0x00000EB9, 0xFFFFF9B8, 0x00000EB7, 0xFFFFF9B3, 0x00000EB4, 0xFFFFF9AD, 0x00000EB2, 0xFFFFF9A7, 0x00000EAF, 0xFFFFF9A1, 0x00000EAD, 0xFFFFF99C, 0x00000EAA, 0xFFFFF996, 0x00000EA8, 0xFFFFF990, 0x00000EA5, 0xFFFFF98A, 0x00000EA3,
		0xFFFFF985, 0x00000EA0, 0xFFFFF97F, 0x00000E9E, 0xFFFFF979, 0x00000E9B, 0xFFFFF973, 0x00000E98, 0xFFFFF96E, 0x00000E96, 0xFFFFF968, 0x00000E93, 0xFFFFF962, 0x00000E91, 0xFFFFF95D, 0x00000E8E, 0xFFFFF957, 0x00000E8B, 0xFFFFF951, 0x00000E89, 0xFFFFF94B, 0x00000E86, 0xFFFFF946, 0x00000E84, 0xFFFFF940, 0x00000E81, 0xFFFFF93A, 0x00000E7E, 0xFFFFF935, 0x00000E7C, 0xFFFFF92F, 0x00000E79,
		0xFFFFF929, 0x00000E76, 0xFFFFF924, 0x00000E74, 0xFFFFF91E, 0x00000E71, 0xFFFFF918, 0x00000E6E, 0xFFFFF913, 0x00000E6B, 0xFFFFF90D, 0x00000E69, 0xFFFFF907, 0x00000E66, 0xFFFFF902, 0x00000E63, 0xFFFFF8FC, 0x00000E60, 0xFFFFF8F6, 0x00000E5E, 0xFFFFF8F1, 0x00000E5B, 0xFFFFF8EB, 0x00000E58, 0xFFFFF8E5, 0x00000E55, 0xFFFFF8E0, 0x00000E53, 0xFFFFF8DA, 0x00000E50, 0xFFFFF8D5, 0x00000E4D,
		0xFFFFF8CF, 0x00000E4A, 0xFFFFF8C9, 0x00000E47, 0xFFFFF8C4, 0x00000E44, 0xFFFFF8BE, 0x00000E42, 0xFFFFF8B8, 0x00000E3F, 0xFFFFF8B3, 0x00000E3C, 0xFFFFF8AD, 0x00000E39, 0xFFFFF8A8, 0x00000E36, 0xFFFFF8A2, 0x00000E33, 0xFFFFF89D, 0x00000E30, 0xFFFFF897, 0x00000E2D, 0xFFFFF891, 0x00000E2B, 0xFFFFF88C, 0x00000E28, 0xFFFFF886, 0x00000E25, 0xFFFFF881, 0x00000E22, 0xFFFFF87B, 0x00000E1F,
		0xFFFFF876, 0x00000E1C, 0xFFFFF870, 0x00000E19, 0xFFFFF86B, 0x00000E16, 0xFFFFF865, 0x00000E13, 0xFFFFF860, 0x00000E10, 0xFFFFF85A, 0x00000E0D, 0xFFFFF854, 0x00000E0A, 0xFFFFF84F, 0x00000E07, 0xFFFFF849, 0x00000E04, 0xFFFFF844, 0x00000E01, 0xFFFFF83E, 0x00000DFE, 0xFFFFF839, 0x00000DFB, 0xFFFFF833, 0x00000DF8, 0xFFFFF82E, 0x00000DF5, 0xFFFFF829, 0x00000DF2, 0xFFFFF823, 0x00000DEE,
		0xFFFFF81E, 0x00000DEB, 0xFFFFF818, 0x00000DE8, 0xFFFFF813, 0x00000DE5, 0xFFFFF80D, 0x00000DE2, 0xFFFFF808, 0x00000DDF, 0xFFFFF802, 0x00000DDC, 0xFFFFF7FD, 0x00000DD9, 0xFFFFF7F7, 0x00000DD5, 0xFFFFF7F2, 0x00000DD2, 0xFFFFF7ED, 0x00000DCF, 0xFFFFF7E7, 0x00000DCC, 0xFFFFF7E2, 0x00000DC9, 0xFFFFF7DC, 0x00000DC6, 0xFFFFF7D7, 0x00000DC2, 0xFFFFF7D2, 0x00000DBF, 0xFFFFF7CC, 0x00000DBC,
		0xFFFFF7C7, 0x00000DB9, 0xFFFFF7C1, 0x00000DB6, 0xFFFFF7BC, 0x00000DB2, 0xFFFFF7B7, 0x00000DAF, 0xFFFFF7B1, 0x00000DAC, 0xFFFFF7AC, 0x00000DA9, 0xFFFFF7A6, 0x00000DA5, 0xFFFFF7A1, 0x00000DA2, 0xFFFFF79C, 0x00000D9F, 0xFFFFF796, 0x00000D9B, 0xFFFFF791, 0x00000D98, 0xFFFFF78C, 0x00000D95, 0xFFFFF786, 0x00000D91, 0xFFFFF781, 0x00000D8E, 0xFFFFF77C, 0x00000D8B, 0xFFFFF776, 0x00000D87,
		0xFFFFF771, 0x00000D84, 0xFFFFF76C, 0x00000D81, 0xFFFFF767, 0x00000D7D, 0xFFFFF761, 0x00000D7A, 0xFFFFF75C, 0x00000D77, 0xFFFFF757, 0x00000D73, 0xFFFFF751, 0x00000D70, 0xFFFFF74C, 0x00000D6C, 0xFFFFF747, 0x00000D69, 0xFFFFF742, 0x00000D65, 0xFFFFF73C, 0x00000D62, 0xFFFFF737, 0x00000D5F, 0xFFFFF732, 0x00000D5B, 0xFFFFF72D, 0x00000D58, 0xFFFFF727, 0x00000D54, 0xFFFFF722, 0x00000D51,
		0xFFFFF71D, 0x00000D4D, 0xFFFFF718, 0x00000D4A, 0xFFFFF712, 0x00000D46, 0xFFFFF70D, 0x00000D43, 0xFFFFF708, 0x00000D3F, 0xFFFFF703, 0x00000D3C, 0xFFFFF6FE, 0x00000D38, 0xFFFFF6F8, 0x00000D35, 0xFFFFF6F3, 0x00000D31, 0xFFFFF6EE, 0x00000D2D, 0xFFFFF6E9, 0x00000D2A, 0xFFFFF6E4, 0x00000D26, 0xFFFFF6DF, 0x00000D23, 0xFFFFF6D9, 0x00000D1F, 0xFFFFF6D4, 0x00000D1C, 0xFFFFF6CF, 0x00000D18,
		0xFFFFF6CA, 0x00000D14, 0xFFFFF6C5, 0x00000D11, 0xFFFFF6C0, 0x00000D0D, 0xFFFFF6BB, 0x00000D09, 0xFFFFF6B5, 0x00000D06, 0xFFFFF6B0, 0x00000D02, 0xFFFFF6AB, 0x00000CFE, 0xFFFFF6A6, 0x00000CFB, 0xFFFFF6A1, 0x00000CF7, 0xFFFFF69C, 0x00000CF3, 0xFFFFF697, 0x00000CF0, 0xFFFFF692, 0x00000CEC, 0xFFFFF68D, 0x00000CE8, 0xFFFFF688, 0x00000CE5, 0xFFFFF683, 0x00000CE1, 0xFFFFF67E, 0x00000CDD,
		0xFFFFF679, 0x00000CD9, 0xFFFFF673, 0x00000CD6, 0xFFFFF66E, 0x00000CD2, 0xFFFFF669, 0x00000CCE, 0xFFFFF664, 0x00000CCA, 0xFFFFF65F, 0x00000CC7, 0xFFFFF65A, 0x00000CC3, 0xFFFFF655, 0x00000CBF, 0xFFFFF650, 0x00000CBB, 0xFFFFF64B, 0x00000CB7, 0xFFFFF646, 0x00000CB4, 0xFFFFF641, 0x00000CB0, 0xFFFFF63C, 0x00000CAC, 0xFFFFF637, 0x00000CA8, 0xFFFFF632, 0x00000CA4, 0xFFFFF62D, 0x00000CA0,
		0xFFFFF629, 0x00000C9D, 0xFFFFF624, 0x00000C99, 0xFFFFF61F, 0x00000C95, 0xFFFFF61A, 0x00000C91, 0xFFFFF615, 0x00000C8D, 0xFFFFF610, 0x00000C89, 0xFFFFF60B, 0x00000C85, 0xFFFFF606, 0x00000C81, 0xFFFFF601, 0x00000C7D, 0xFFFFF5FC, 0x00000C79, 0xFFFFF5F7, 0x00000C76, 0xFFFFF5F2, 0x00000C72, 0xFFFFF5EE, 0x00000C6E, 0xFFFFF5E9, 0x00000C6A, 0xFFFFF5E4, 0x00000C66, 0xFFFFF5DF, 0x00000C62,
		0xFFFFF5DA, 0x00000C5E, 0xFFFFF5D5, 0x00000C5A, 0xFFFFF5D0, 0x00000C56, 0xFFFFF5CB, 0x00000C52, 0xFFFFF5C7, 0x00000C4E, 0xFFFFF5C2, 0x00000C4A, 0xFFFFF5BD, 0x00000C46, 0xFFFFF5B8, 0x00000C42, 0xFFFFF5B3, 0x00000C3E, 0xFFFFF5AF, 0x00000C3A, 0xFFFFF5AA, 0x00000C36, 0xFFFFF5A5, 0x00000C31, 0xFFFFF5A0, 0x00000C2D, 0xFFFFF59B, 0x00000C29, 0xFFFFF597, 0x00000C25, 0xFFFFF592, 0x00000C21,
		0xFFFFF58D, 0x00000C1D, 0xFFFFF588, 0x00000C19, 0xFFFFF584, 0x00000C15, 0xFFFFF57F, 0x00000C11, 0xFFFFF57A, 0x00000C0D, 0xFFFFF575, 0x00000C08, 0xFFFFF571, 0x00000C04, 0xFFFFF56C, 0x00000C00, 0xFFFFF567, 0x00000BFC, 0xFFFFF563, 0x00000BF8, 0xFFFFF55E, 0x00000BF4, 0xFFFFF559, 0x00000BEF, 0xFFFFF554, 0x00000BEB, 0xFFFFF550, 0x00000BE7, 0xFFFFF54B, 0x00000BE3, 0xFFFFF546, 0x00000BDF,
		0xFFFFF542, 0x00000BDA, 0xFFFFF53D, 0x00000BD6, 0xFFFFF538, 0x00000BD2, 0xFFFFF534, 0x00000BCE, 0xFFFFF52F, 0x00000BCA, 0xFFFFF52B, 0x00000BC5, 0xFFFFF526, 0x00000BC1, 0xFFFFF521, 0x00000BBD, 0xFFFFF51D, 0x00000BB8, 0xFFFFF518, 0x00000BB4, 0xFFFFF514, 0x00000BB0, 0xFFFFF50F, 0x00000BAC, 0xFFFFF50A, 0x00000BA7, 0xFFFFF506, 0x00000BA3, 0xFFFFF501, 0x00000B9F, 0xFFFFF4FD, 0x00000B9A,
		0xFFFFF4F8, 0x00000B96, 0xFFFFF4F4, 0x00000B92, 0xFFFFF4EF, 0x00000B8D, 0xFFFFF4EB, 0x00000B89, 0xFFFFF4E6, 0x00000B85, 0xFFFFF4E1, 0x00000B80, 0xFFFFF4DD, 0x00000B7C, 0xFFFFF4D8, 0x00000B78, 0xFFFFF4D4, 0x00000B73, 0xFFFFF4CF, 0x00000B6F, 0xFFFFF4CB, 0x00000B6A, 0xFFFFF4C6, 0x00000B66, 0xFFFFF4C2, 0x00000B62, 0xFFFFF4BE, 0x00000B5D, 0xFFFFF4B9, 0x00000B59, 0xFFFFF4B5, 0x00000B54,
		0xFFFFF4B0, 0x00000B50, 0xFFFFF4AC, 0x00000B4B, 0xFFFFF4A7, 0x00000B47, 0xFFFFF4A3, 0x00000B42, 0xFFFFF49E, 0x00000B3E, 0xFFFFF49A, 0x00000B3A, 0xFFFFF496, 0x00000B35, 0xFFFFF491, 0x00000B31, 0xFFFFF48D, 0x00000B2C, 0xFFFFF488, 0x00000B28, 0xFFFFF484, 0x00000B23, 0xFFFFF480, 0x00000B1F, 0xFFFFF47B, 0x00000B1A, 0xFFFFF477, 0x00000B15, 0xFFFFF473, 0x00000B11, 0xFFFFF46E, 0x00000B0C,
		0xFFFFF46A, 0x00000B08, 0xFFFFF466, 0x00000B03, 0xFFFFF461, 0x00000AFF, 0xFFFFF45D, 0x00000AFA, 0xFFFFF459, 0x00000AF6, 0xFFFFF454, 0x00000AF1, 0xFFFFF450, 0x00000AEC, 0xFFFFF44C, 0x00000AE8, 0xFFFFF448, 0x00000AE3, 0xFFFFF443, 0x00000ADF, 0xFFFFF43F, 0x00000ADA, 0xFFFFF43B, 0x00000AD5, 0xFFFFF436, 0x00000AD1, 0xFFFFF432, 0x00000ACC, 0xFFFFF42E, 0x00000AC8, 0xFFFFF42A, 0x00000AC3,
		0xFFFFF426, 0x00000ABE, 0xFFFFF421, 0x00000ABA, 0xFFFFF41D, 0x00000AB5, 0xFFFFF419, 0x00000AB0, 0xFFFFF415, 0x00000AAC, 0xFFFFF411, 0x00000AA7, 0xFFFFF40C, 0x00000AA2, 0xFFFFF408, 0x00000A9D, 0xFFFFF404, 0x00000A99, 0xFFFFF400, 0x00000A94, 0xFFFFF3FC, 0x00000A8F, 0xFFFFF3F8, 0x00000A8B, 0xFFFFF3F3, 0x00000A86, 0xFFFFF3EF, 0x00000A81, 0xFFFFF3EB, 0x00000A7C, 0xFFFFF3E7, 0x00000A78,
		0xFFFFF3E3, 0x00000A73, 0xFFFFF3DF, 0x00000A6E, 0xFFFFF3DB, 0x00000A69, 0xFFFFF3D7, 0x00000A65, 0xFFFFF3D3, 0x00000A60, 0xFFFFF3CF, 0x00000A5B, 0xFFFFF3CA, 0x00000A56, 0xFFFFF3C6, 0x00000A51, 0xFFFFF3C2, 0x00000A4D, 0xFFFFF3BE, 0x00000A48, 0xFFFFF3BA, 0x00000A43, 0xFFFFF3B6, 0x00000A3E, 0xFFFFF3B2, 0x00000A39, 0xFFFFF3AE, 0x00000A35, 0xFFFFF3AA, 0x00000A30, 0xFFFFF3A6, 0x00000A2B,
		0xFFFFF3A2, 0x00000A26, 0xFFFFF39E, 0x00000A21, 0xFFFFF39A, 0x00000A1C, 0xFFFFF396, 0x00000A17, 0xFFFFF392, 0x00000A12, 0xFFFFF38E, 0x00000A0E, 0xFFFFF38A, 0x00000A09, 0xFFFFF387, 0x00000A04, 0xFFFFF383, 0x000009FF, 0xFFFFF37F, 0x000009FA, 0xFFFFF37B, 0x000009F5, 0xFFFFF377, 0x000009F0, 0xFFFFF373, 0x000009EB, 0xFFFFF36F, 0x000009E6, 0xFFFFF36B, 0x000009E1, 0xFFFFF367, 0x000009DC,
		0xFFFFF363, 0x000009D7, 0xFFFFF360, 0x000009D3, 0xFFFFF35C, 0x000009CE, 0xFFFFF358, 0x000009C9, 0xFFFFF354, 0x000009C4, 0xFFFFF350, 0x000009BF, 0xFFFFF34C, 0x000009BA, 0xFFFFF349, 0x000009B5, 0xFFFFF345, 0x000009B0, 0xFFFFF341, 0x000009AB, 0xFFFFF33D, 0x000009A6, 0xFFFFF339, 0x000009A1, 0xFFFFF336, 0x0000099C, 0xFFFFF332, 0x00000997, 0xFFFFF32E, 0x00000992, 0xFFFFF32A, 0x0000098D,
		0xFFFFF327, 0x00000987, 0xFFFFF323, 0x00000982, 0xFFFFF31F, 0x0000097D, 0xFFFFF31B, 0x00000978, 0xFFFFF318, 0x00000973, 0xFFFFF314, 0x0000096E, 0xFFFFF310, 0x00000969, 0xFFFFF30D, 0x00000964, 0xFFFFF309, 0x0000095F, 0xFFFFF305, 0x0000095A, 0xFFFFF302, 0x00000955, 0xFFFFF2FE, 0x00000950, 0xFFFFF2FA, 0x0000094B, 0xFFFFF2F7, 0x00000945, 0xFFFFF2F3, 0x00000940, 0xFFFFF2EF, 0x0000093B,
		0xFFFFF2EC, 0x00000936, 0xFFFFF2E8, 0x00000931, 0xFFFFF2E4, 0x0000092C, 0xFFFFF2E1, 0x00000927, 0xFFFFF2DD, 0x00000921, 0xFFFFF2DA, 0x0000091C, 0xFFFFF2D6, 0x00000917, 0xFFFFF2D3, 0x00000912, 0xFFFFF2CF, 0x0000090D, 0xFFFFF2CB, 0x00000908, 0xFFFFF2C8, 0x00000902, 0xFFFFF2C4, 0x000008FD, 0xFFFFF2C1, 0x000008F8, 0xFFFFF2BD, 0x000008F3, 0xFFFFF2BA, 0x000008EE, 0xFFFFF2B6, 0x000008E8,
		0xFFFFF2B3, 0x000008E3, 0xFFFFF2AF, 0x000008DE, 0xFFFFF2AC, 0x000008D9, 0xFFFFF2A8, 0x000008D3, 0xFFFFF2A5, 0x000008CE, 0xFFFFF2A1, 0x000008C9, 0xFFFFF29E, 0x000008C4, 0xFFFFF29B, 0x000008BE, 0xFFFFF297, 0x000008B9, 0xFFFFF294, 0x000008B4, 0xFFFFF290, 0x000008AF, 0xFFFFF28D, 0x000008A9, 0xFFFFF289, 0x000008A4, 0xFFFFF286, 0x0000089F, 0xFFFFF283, 0x00000899, 0xFFFFF27F, 0x00000894,
		0xFFFFF27C, 0x0000088F, 0xFFFFF279, 0x0000088A, 0xFFFFF275, 0x00000884, 0xFFFFF272, 0x0000087F, 0xFFFFF26F, 0x0000087A, 0xFFFFF26B, 0x00000874, 0xFFFFF268, 0x0000086F, 0xFFFFF265, 0x0000086A, 0xFFFFF261, 0x00000864, 0xFFFFF25E, 0x0000085F, 0xFFFFF25B, 0x0000085A, 0xFFFFF257, 0x00000854, 0xFFFFF254, 0x0000084F, 0xFFFFF251, 0x00000849, 0xFFFFF24E, 0x00000844, 0xFFFFF24A, 0x0000083F,
		0xFFFFF247, 0x00000839, 0xFFFFF244, 0x00000834, 0xFFFFF241, 0x0000082E, 0xFFFFF23E, 0x00000829, 0xFFFFF23A, 0x00000824, 0xFFFFF237, 0x0000081E, 0xFFFFF234, 0x00000819, 0xFFFFF231, 0x00000813, 0xFFFFF22E, 0x0000080E, 0xFFFFF22B, 0x00000809, 0xFFFFF227, 0x00000803, 0xFFFFF224, 0x000007FE, 0xFFFFF221, 0x000007F8, 0xFFFFF21E, 0x000007F3, 0xFFFFF21B, 0x000007ED, 0xFFFFF218, 0x000007E8,
		0xFFFFF215, 0x000007E2, 0xFFFFF212, 0x000007DD, 0xFFFFF20E, 0x000007D7, 0xFFFFF20B, 0x000007D2, 0xFFFFF208, 0x000007CD, 0xFFFFF205, 0x000007C7, 0xFFFFF202, 0x000007C2, 0xFFFFF1FF, 0x000007BC, 0xFFFFF1FC, 0x000007B7, 0xFFFFF1F9, 0x000007B1, 0xFFFFF1F6, 0x000007AC, 0xFFFFF1F3, 0x000007A6, 0xFFFFF1F0, 0x000007A0, 0xFFFFF1ED, 0x0000079B, 0xFFFFF1EA, 0x00000795, 0xFFFFF1E7, 0x00000790,
		0xFFFFF1E4, 0x0000078A, 0xFFFFF1E1, 0x00000785, 0xFFFFF1DE, 0x0000077F, 0xFFFFF1DB, 0x0000077A, 0xFFFFF1D8, 0x00000774, 0xFFFFF1D5, 0x0000076F, 0xFFFFF1D3, 0x00000769, 0xFFFFF1D0, 0x00000763, 0xFFFFF1CD, 0x0000075E, 0xFFFFF1CA, 0x00000758, 0xFFFFF1C7, 0x00000753, 0xFFFFF1C4, 0x0000074D, 0xFFFFF1C1, 0x00000748, 0xFFFFF1BE, 0x00000742, 0xFFFFF1BC, 0x0000073C, 0xFFFFF1B9, 0x00000737,
		0xFFFFF1B6, 0x00000731, 0xFFFFF1B3, 0x0000072B, 0xFFFFF1B0, 0x00000726, 0xFFFFF1AD, 0x00000720, 0xFFFFF1AB, 0x0000071B, 0xFFFFF1A8, 0x00000715, 0xFFFFF1A5, 0x0000070F, 0xFFFFF1A2, 0x0000070A, 0xFFFFF1A0, 0x00000704, 0xFFFFF19D, 0x000006FE, 0xFFFFF19A, 0x000006F9, 0xFFFFF197, 0x000006F3, 0xFFFFF195, 0x000006ED, 0xFFFFF192, 0x000006E8, 0xFFFFF18F, 0x000006E2, 0xFFFFF18C, 0x000006DC,
		0xFFFFF18A, 0x000006D7, 0xFFFFF187, 0x000006D1, 0xFFFFF184, 0x000006CB, 0xFFFFF182, 0x000006C6, 0xFFFFF17F, 0x000006C0, 0xFFFFF17C, 0x000006BA, 0xFFFFF17A, 0x000006B5, 0xFFFFF177, 0x000006AF, 0xFFFFF175, 0x000006A9, 0xFFFFF172, 0x000006A3, 0xFFFFF16F, 0x0000069E, 0xFFFFF16D, 0x00000698, 0xFFFFF16A, 0x00000692, 0xFFFFF168, 0x0000068D, 0xFFFFF165, 0x00000687, 0xFFFFF162, 0x00000681,
		0xFFFFF160, 0x0000067B, 0xFFFFF15D, 0x00000676, 0xFFFFF15B, 0x00000670, 0xFFFFF158, 0x0000066A, 0xFFFFF156, 0x00000664, 0xFFFFF153, 0x0000065F, 0xFFFFF151, 0x00000659, 0xFFFFF14E, 0x00000653, 0xFFFFF14C, 0x0000064D, 0xFFFFF149, 0x00000648, 0xFFFFF147, 0x00000642, 0xFFFFF144, 0x0000063C, 0xFFFFF142, 0x00000636, 0xFFFFF140, 0x00000630, 0xFFFFF13D, 0x0000062B, 0xFFFFF13B, 0x00000625,
		0xFFFFF138, 0x0000061F, 0xFFFFF136, 0x00000619, 0xFFFFF133, 0x00000613, 0xFFFFF131, 0x0000060E, 0xFFFFF12F, 0x00000608, 0xFFFFF12C, 0x00000602, 0xFFFFF12A, 0x000005FC, 0xFFFFF128, 0x000005F6, 0xFFFFF125, 0x000005F0, 0xFFFFF123, 0x000005EB, 0xFFFFF121, 0x000005E5, 0xFFFFF11E, 0x000005DF, 0xFFFFF11C, 0x000005D9, 0xFFFFF11A, 0x000005D3, 0xFFFFF118, 0x000005CD, 0xFFFFF115, 0x000005C7,
		0xFFFFF113, 0x000005C2, 0xFFFFF111, 0x000005BC, 0xFFFFF10E, 0x000005B6, 0xFFFFF10C, 0x000005B0, 0xFFFFF10A, 0x000005AA, 0xFFFFF108, 0x000005A4, 0xFFFFF106, 0x0000059E, 0xFFFFF103, 0x00000599, 0xFFFFF101, 0x00000593, 0xFFFFF0FF, 0x0000058D, 0xFFFFF0FD, 0x00000587, 0xFFFFF0FB, 0x00000581, 0xFFFFF0F8, 0x0000057B, 0xFFFFF0F6, 0x00000575, 0xFFFFF0F4, 0x0000056F, 0xFFFFF0F2, 0x00000569,
		0xFFFFF0F0, 0x00000563, 0xFFFFF0EE, 0x0000055D, 0xFFFFF0EC, 0x00000558, 0xFFFFF0EA, 0x00000552, 0xFFFFF0E8, 0x0000054C, 0xFFFFF0E5, 0x00000546, 0xFFFFF0E3, 0x00000540, 0xFFFFF0E1, 0x0000053A, 0xFFFFF0DF, 0x00000534, 0xFFFFF0DD, 0x0000052E, 0xFFFFF0DB, 0x00000528, 0xFFFFF0D9, 0x00000522, 0xFFFFF0D7, 0x0000051C, 0xFFFFF0D5, 0x00000516, 0xFFFFF0D3, 0x00000510, 0xFFFFF0D1, 0x0000050A,
		0xFFFFF0CF, 0x00000504, 0xFFFFF0CD, 0x000004FE, 0xFFFFF0CB, 0x000004F8, 0xFFFFF0C9, 0x000004F2, 0xFFFFF0C7, 0x000004EC, 0xFFFFF0C5, 0x000004E6, 0xFFFFF0C4, 0x000004E0, 0xFFFFF0C2, 0x000004DB, 0xFFFFF0C0, 0x000004D5, 0xFFFFF0BE, 0x000004CF, 0xFFFFF0BC, 0x000004C9, 0xFFFFF0BA, 0x000004C3, 0xFFFFF0B8, 0x000004BD, 0xFFFFF0B6, 0x000004B7, 0xFFFFF0B5, 0x000004B1, 0xFFFFF0B3, 0x000004AB,
		0xFFFFF0B1, 0x000004A5, 0xFFFFF0AF, 0x0000049E, 0xFFFFF0AD, 0x00000498, 0xFFFFF0AB, 0x00000492, 0xFFFFF0AA, 0x0000048C, 0xFFFFF0A8, 0x00000486, 0xFFFFF0A6, 0x00000480, 0xFFFFF0A4, 0x0000047A, 0xFFFFF0A3, 0x00000474, 0xFFFFF0A1, 0x0000046E, 0xFFFFF09F, 0x00000468, 0xFFFFF09D, 0x00000462, 0xFFFFF09C, 0x0000045C, 0xFFFFF09A, 0x00000456, 0xFFFFF098, 0x00000450, 0xFFFFF097, 0x0000044A,
		0xFFFFF095, 0x00000444, 0xFFFFF093, 0x0000043E, 0xFFFFF092, 0x00000438, 0xFFFFF090, 0x00000432, 0xFFFFF08E, 0x0000042C, 0xFFFFF08D, 0x00000426, 0xFFFFF08B, 0x00000420, 0xFFFFF089, 0x0000041A, 0xFFFFF088, 0x00000413, 0xFFFFF086, 0x0000040D, 0xFFFFF085, 0x00000407, 0xFFFFF083, 0x00000401, 0xFFFFF081, 0x000003FB, 0xFFFFF080, 0x000003F5, 0xFFFFF07E, 0x000003EF, 0xFFFFF07D, 0x000003E9,
		0xFFFFF07B, 0x000003E3, 0xFFFFF07A, 0x000003DD, 0xFFFFF078, 0x000003D7, 0xFFFFF077, 0x000003D0, 0xFFFFF075, 0x000003CA, 0xFFFFF074, 0x000003C4, 0xFFFFF072, 0x000003BE, 0xFFFFF071, 0x000003B8, 0xFFFFF06F, 0x000003B2, 0xFFFFF06E, 0x000003AC, 0xFFFFF06C, 0x000003A6, 0xFFFFF06B, 0x000003A0, 0xFFFFF06A, 0x00000399, 0xFFFFF068, 0x00000393, 0xFFFFF067, 0x0000038D, 0xFFFFF065, 0x00000387,
		0xFFFFF064, 0x00000381, 0xFFFFF063, 0x0000037B, 0xFFFFF061, 0x00000375, 0xFFFFF060, 0x0000036F, 0xFFFFF05F, 0x00000368, 0xFFFFF05D, 0x00000362, 0xFFFFF05C, 0x0000035C, 0xFFFFF05B, 0x00000356, 0xFFFFF059, 0x00000350, 0xFFFFF058, 0x0000034A, 0xFFFFF057, 0x00000344, 0xFFFFF055, 0x0000033D, 0xFFFFF054, 0x00000337, 0xFFFFF053, 0x00000331, 0xFFFFF052, 0x0000032B, 0xFFFFF050, 0x00000325,
		0xFFFFF04F, 0x0000031F, 0xFFFFF04E, 0x00000318, 0xFFFFF04D, 0x00000312, 0xFFFFF04C, 0x0000030C, 0xFFFFF04A, 0x00000306, 0xFFFFF049, 0x00000300, 0xFFFFF048, 0x000002FA, 0xFFFFF047, 0x000002F3, 0xFFFFF046, 0x000002ED, 0xFFFFF045, 0x000002E7, 0xFFFFF043, 0x000002E1, 0xFFFFF042, 0x000002DB, 0xFFFFF041, 0x000002D5, 0xFFFFF040, 0x000002CE, 0xFFFFF03F, 0x000002C8, 0xFFFFF03E, 0x000002C2,
		0xFFFFF03D, 0x000002BC, 0xFFFFF03C, 0x000002B6, 0xFFFFF03B, 0x000002AF, 0xFFFFF03A, 0x000002A9, 0xFFFFF039, 0x000002A3, 0xFFFFF038, 0x0000029D, 0xFFFFF037, 0x00000297, 0xFFFFF036, 0x00000290, 0xFFFFF035, 0x0000028A, 0xFFFFF034, 0x00000284, 0xFFFFF033, 0x0000027E, 0xFFFFF032, 0x00000278, 0xFFFFF031, 0x00000271, 0xFFFFF030, 0x0000026B, 0xFFFFF02F, 0x00000265, 0xFFFFF02E, 0x0000025F,
		0xFFFFF02D, 0x00000259, 0xFFFFF02C, 0x00000252, 0xFFFFF02B, 0x0000024C, 0xFFFFF02A, 0x00000246, 0xFFFFF029, 0x00000240, 0xFFFFF028, 0x00000239, 0xFFFFF027, 0x00000233, 0xFFFFF027, 0x0000022D, 0xFFFFF026, 0x00000227, 0xFFFFF025, 0x00000221, 0xFFFFF024, 0x0000021A, 0xFFFFF023, 0x00000214, 0xFFFFF022, 0x0000020E, 0xFFFFF022, 0x00000208, 0xFFFFF021, 0x00000201, 0xFFFFF020, 0x000001FB,
		0xFFFFF01F, 0x000001F5, 0xFFFFF01F, 0x000001EF, 0xFFFFF01E, 0x000001E8, 0xFFFFF01D, 0x000001E2, 0xFFFFF01C, 0x000001DC, 0xFFFFF01C, 0x000001D6, 0xFFFFF01B, 0x000001CF, 0xFFFFF01A, 0x000001C9, 0xFFFFF019, 0x000001C3, 0xFFFFF019, 0x000001BD, 0xFFFFF018, 0x000001B6, 0xFFFFF017, 0x000001B0, 0xFFFFF017, 0x000001AA, 0xFFFFF016, 0x000001A4, 0xFFFFF015, 0x0000019D, 0xFFFFF015, 0x00000197,
		0xFFFFF014, 0x00000191, 0xFFFFF014, 0x0000018B, 0xFFFFF013, 0x00000184, 0xFFFFF012, 0x0000017E, 0xFFFFF012, 0x00000178, 0xFFFFF011, 0x00000172, 0xFFFFF011, 0x0000016B, 0xFFFFF010, 0x00000165, 0xFFFFF010, 0x0000015F, 0xFFFFF00F, 0x00000159, 0xFFFFF00F, 0x00000152, 0xFFFFF00E, 0x0000014C, 0xFFFFF00E, 0x00000146, 0xFFFFF00D, 0x00000140, 0xFFFFF00D, 0x00000139, 0xFFFFF00C, 0x00000133,
		0xFFFFF00C, 0x0000012D, 0xFFFFF00B, 0x00000127, 0xFFFFF00B, 0x00000120, 0xFFFFF00A, 0x0000011A, 0xFFFFF00A, 0x00000114, 0xFFFFF009, 0x0000010D, 0xFFFFF009, 0x00000107, 0xFFFFF009, 0x00000101, 0xFFFFF008, 0x000000FB, 0xFFFFF008, 0x000000F4, 0xFFFFF007, 0x000000EE, 0xFFFFF007, 0x000000E8, 0xFFFFF007, 0x000000E2, 0xFFFFF006, 0x000000DB, 0xFFFFF006, 0x000000D5, 0xFFFFF006, 0x000000CF,
		0xFFFFF005, 0x000000C8, 0xFFFFF005, 0x000000C2, 0xFFFFF005, 0x000000BC, 0xFFFFF005, 0x000000B6, 0xFFFFF004, 0x000000AF, 0xFFFFF004, 0x000000A9, 0xFFFFF004, 0x000000A3, 0xFFFFF004, 0x0000009D, 0xFFFFF003, 0x00000096, 0xFFFFF003, 0x00000090, 0xFFFFF003, 0x0000008A, 0xFFFFF003, 0x00000083, 0xFFFFF002, 0x0000007D, 0xFFFFF002, 0x00000077, 0xFFFFF002, 0x00000071, 0xFFFFF002, 0x0000006A,
		0xFFFFF002, 0x00000064, 0xFFFFF002, 0x0000005E, 0xFFFFF001, 0x00000057, 0xFFFFF001, 0x00000051, 0xFFFFF001, 0x0000004B, 0xFFFFF001, 0x00000045, 0xFFFFF001, 0x0000003E, 0xFFFFF001, 0x00000038, 0xFFFFF001, 0x00000032, 0xFFFFF001, 0x0000002B, 0xFFFFF001, 0x00000025, 0xFFFFF001, 0x0000001F, 0xFFFFF001, 0x00000019, 0xFFFFF001, 0x00000012, 0xFFFFF001, 0x0000000C, 0xFFFFF001, 0x00000006,
		0xFFFFF000, 0x00000000, 0xFFFFF001, 0xFFFFFFFA, 0xFFFFF001, 0xFFFFFFF4, 0xFFFFF001, 0xFFFFFFEE, 0xFFFFF001, 0xFFFFFFE7, 0xFFFFF001, 0xFFFFFFE1, 0xFFFFF001, 0xFFFFFFDB, 0xFFFFF001, 0xFFFFFFD5, 0xFFFFF001, 0xFFFFFFCE, 0xFFFFF001, 0xFFFFFFC8, 0xFFFFF001, 0xFFFFFFC2, 0xFFFFF001, 0xFFFFFFBB, 0xFFFFF001, 0xFFFFFFB5, 0xFFFFF001, 0xFFFFFFAF, 0xFFFFF001, 0xFFFFFFA9, 0xFFFFF002, 0xFFFFFFA2,
		0xFFFFF002, 0xFFFFFF9C, 0xFFFFF002, 0xFFFFFF96, 0xFFFFF002, 0xFFFFFF8F, 0xFFFFF002, 0xFFFFFF89, 0xFFFFF002, 0xFFFFFF83, 0xFFFFF003, 0xFFFFFF7D, 0xFFFFF003, 0xFFFFFF76, 0xFFFFF003, 0xFFFFFF70, 0xFFFFF003, 0xFFFFFF6A, 0xFFFFF004, 0xFFFFFF63, 0xFFFFF004, 0xFFFFFF5D, 0xFFFFF004, 0xFFFFFF57, 0xFFFFF004, 0xFFFFFF51, 0xFFFFF005, 0xFFFFFF4A, 0xFFFFF005, 0xFFFFFF44, 0xFFFFF005, 0xFFFFFF3E,
		0xFFFFF005, 0xFFFFFF38, 0xFFFFF006, 0xFFFFFF31, 0xFFFFF006, 0xFFFFFF2B, 0xFFFFF006, 0xFFFFFF25, 0xFFFFF007, 0xFFFFFF1E, 0xFFFFF007, 0xFFFFFF18, 0xFFFFF007, 0xFFFFFF12, 0xFFFFF008, 0xFFFFFF0C, 0xFFFFF008, 0xFFFFFF05, 0xFFFFF009, 0xFFFFFEFF, 0xFFFFF009, 0xFFFFFEF9, 0xFFFFF009, 0xFFFFFEF3, 0xFFFFF00A, 0xFFFFFEEC, 0xFFFFF00A, 0xFFFFFEE6, 0xFFFFF00B, 0xFFFFFEE0, 0xFFFFF00B, 0xFFFFFED9,
		0xFFFFF00C, 0xFFFFFED3, 0xFFFFF00C, 0xFFFFFECD, 0xFFFFF00D, 0xFFFFFEC7, 0xFFFFF00D, 0xFFFFFEC0, 0xFFFFF00E, 0xFFFFFEBA, 0xFFFFF00E, 0xFFFFFEB4, 0xFFFFF00F, 0xFFFFFEAE, 0xFFFFF00F, 0xFFFFFEA7, 0xFFFFF010, 0xFFFFFEA1, 0xFFFFF010, 0xFFFFFE9B, 0xFFFFF011, 0xFFFFFE95, 0xFFFFF011, 0xFFFFFE8E, 0xFFFFF012, 0xFFFFFE88, 0xFFFFF012, 0xFFFFFE82, 0xFFFFF013, 0xFFFFFE7C, 0xFFFFF014, 0xFFFFFE75,
		0xFFFFF014, 0xFFFFFE6F, 0xFFFFF015, 0xFFFFFE69, 0xFFFFF015, 0xFFFFFE63, 0xFFFFF016, 0xFFFFFE5C, 0xFFFFF017, 0xFFFFFE56, 0xFFFFF017, 0xFFFFFE50, 0xFFFFF018, 0xFFFFFE4A, 0xFFFFF019, 0xFFFFFE43, 0xFFFFF019, 0xFFFFFE3D, 0xFFFFF01A, 0xFFFFFE37, 0xFFFFF01B, 0xFFFFFE31, 0xFFFFF01C, 0xFFFFFE2A, 0xFFFFF01C, 0xFFFFFE24, 0xFFFFF01D, 0xFFFFFE1E, 0xFFFFF01E, 0xFFFFFE18, 0xFFFFF01F, 0xFFFFFE11,
		0xFFFFF01F, 0xFFFFFE0B, 0xFFFFF020, 0xFFFFFE05, 0xFFFFF021, 0xFFFFFDFF, 0xFFFFF022, 0xFFFFFDF8, 0xFFFFF022, 0xFFFFFDF2, 0xFFFFF023, 0xFFFFFDEC, 0xFFFFF024, 0xFFFFFDE6, 0xFFFFF025, 0xFFFFFDDF, 0xFFFFF026, 0xFFFFFDD9, 0xFFFFF027, 0xFFFFFDD3, 0xFFFFF027, 0xFFFFFDCD, 0xFFFFF028, 0xFFFFFDC7, 0xFFFFF029, 0xFFFFFDC0, 0xFFFFF02A, 0xFFFFFDBA, 0xFFFFF02B, 0xFFFFFDB4, 0xFFFFF02C, 0xFFFFFDAE,
		0xFFFFF02D, 0xFFFFFDA7, 0xFFFFF02E, 0xFFFFFDA1, 0xFFFFF02F, 0xFFFFFD9B, 0xFFFFF030, 0xFFFFFD95, 0xFFFFF031, 0xFFFFFD8F, 0xFFFFF032, 0xFFFFFD88, 0xFFFFF033, 0xFFFFFD82, 0xFFFFF034, 0xFFFFFD7C, 0xFFFFF035, 0xFFFFFD76, 0xFFFFF036, 0xFFFFFD70, 0xFFFFF037, 0xFFFFFD69, 0xFFFFF038, 0xFFFFFD63, 0xFFFFF039, 0xFFFFFD5D, 0xFFFFF03A, 0xFFFFFD57, 0xFFFFF03B, 0xFFFFFD51, 0xFFFFF03C, 0xFFFFFD4A,
		0xFFFFF03D, 0xFFFFFD44, 0xFFFFF03E, 0xFFFFFD3E, 0xFFFFF03F, 0xFFFFFD38, 0xFFFFF040, 0xFFFFFD32, 0xFFFFF041, 0xFFFFFD2B, 0xFFFFF042, 0xFFFFFD25, 0xFFFFF043, 0xFFFFFD1F, 0xFFFFF045, 0xFFFFFD19, 0xFFFFF046, 0xFFFFFD13, 0xFFFFF047, 0xFFFFFD0D, 0xFFFFF048, 0xFFFFFD06, 0xFFFFF049, 0xFFFFFD00, 0xFFFFF04A, 0xFFFFFCFA, 0xFFFFF04C, 0xFFFFFCF4, 0xFFFFF04D, 0xFFFFFCEE, 0xFFFFF04E, 0xFFFFFCE8,
		0xFFFFF04F, 0xFFFFFCE1, 0xFFFFF050, 0xFFFFFCDB, 0xFFFFF052, 0xFFFFFCD5, 0xFFFFF053, 0xFFFFFCCF, 0xFFFFF054, 0xFFFFFCC9, 0xFFFFF055, 0xFFFFFCC3, 0xFFFFF057, 0xFFFFFCBC, 0xFFFFF058, 0xFFFFFCB6, 0xFFFFF059, 0xFFFFFCB0, 0xFFFFF05B, 0xFFFFFCAA, 0xFFFFF05C, 0xFFFFFCA4, 0xFFFFF05D, 0xFFFFFC9E, 0xFFFFF05F, 0xFFFFFC98, 0xFFFFF060, 0xFFFFFC91, 0xFFFFF061, 0xFFFFFC8B, 0xFFFFF063, 0xFFFFFC85,
		0xFFFFF064, 0xFFFFFC7F, 0xFFFFF065, 0xFFFFFC79, 0xFFFFF067, 0xFFFFFC73, 0xFFFFF068, 0xFFFFFC6D, 0xFFFFF06A, 0xFFFFFC67, 0xFFFFF06B, 0xFFFFFC60, 0xFFFFF06C, 0xFFFFFC5A, 0xFFFFF06E, 0xFFFFFC54, 0xFFFFF06F, 0xFFFFFC4E, 0xFFFFF071, 0xFFFFFC48, 0xFFFFF072, 0xFFFFFC42, 0xFFFFF074, 0xFFFFFC3C, 0xFFFFF075, 0xFFFFFC36, 0xFFFFF077, 0xFFFFFC30, 0xFFFFF078, 0xFFFFFC29, 0xFFFFF07A, 0xFFFFFC23,
		0xFFFFF07B, 0xFFFFFC1D, 0xFFFFF07D, 0xFFFFFC17, 0xFFFFF07E, 0xFFFFFC11, 0xFFFFF080, 0xFFFFFC0B, 0xFFFFF081, 0xFFFFFC05, 0xFFFFF083, 0xFFFFFBFF, 0xFFFFF085, 0xFFFFFBF9, 0xFFFFF086, 0xFFFFFBF3, 0xFFFFF088, 0xFFFFFBED, 0xFFFFF089, 0xFFFFFBE6, 0xFFFFF08B, 0xFFFFFBE0, 0xFFFFF08D, 0xFFFFFBDA, 0xFFFFF08E, 0xFFFFFBD4, 0xFFFFF090, 0xFFFFFBCE, 0xFFFFF092, 0xFFFFFBC8, 0xFFFFF093, 0xFFFFFBC2,
		0xFFFFF095, 0xFFFFFBBC, 0xFFFFF097, 0xFFFFFBB6, 0xFFFFF098, 0xFFFFFBB0, 0xFFFFF09A, 0xFFFFFBAA, 0xFFFFF09C, 0xFFFFFBA4, 0xFFFFF09D, 0xFFFFFB9E, 0xFFFFF09F, 0xFFFFFB98, 0xFFFFF0A1, 0xFFFFFB92, 0xFFFFF0A3, 0xFFFFFB8C, 0xFFFFF0A4, 0xFFFFFB86, 0xFFFFF0A6, 0xFFFFFB80, 0xFFFFF0A8, 0xFFFFFB7A, 0xFFFFF0AA, 0xFFFFFB74, 0xFFFFF0AB, 0xFFFFFB6E, 0xFFFFF0AD, 0xFFFFFB68, 0xFFFFF0AF, 0xFFFFFB62,
		0xFFFFF0B1, 0xFFFFFB5B, 0xFFFFF0B3, 0xFFFFFB55, 0xFFFFF0B5, 0xFFFFFB4F, 0xFFFFF0B6, 0xFFFFFB49, 0xFFFFF0B8, 0xFFFFFB43, 0xFFFFF0BA, 0xFFFFFB3D, 0xFFFFF0BC, 0xFFFFFB37, 0xFFFFF0BE, 0xFFFFFB31, 0xFFFFF0C0, 0xFFFFFB2B, 0xFFFFF0C2, 0xFFFFFB25, 0xFFFFF0C4, 0xFFFFFB20, 0xFFFFF0C5, 0xFFFFFB1A, 0xFFFFF0C7, 0xFFFFFB14, 0xFFFFF0C9, 0xFFFFFB0E, 0xFFFFF0CB, 0xFFFFFB08, 0xFFFFF0CD, 0xFFFFFB02,
		0xFFFFF0CF, 0xFFFFFAFC, 0xFFFFF0D1, 0xFFFFFAF6, 0xFFFFF0D3, 0xFFFFFAF0, 0xFFFFF0D5, 0xFFFFFAEA, 0xFFFFF0D7, 0xFFFFFAE4, 0xFFFFF0D9, 0xFFFFFADE, 0xFFFFF0DB, 0xFFFFFAD8, 0xFFFFF0DD, 0xFFFFFAD2, 0xFFFFF0DF, 0xFFFFFACC, 0xFFFFF0E1, 0xFFFFFAC6, 0xFFFFF0E3, 0xFFFFFAC0, 0xFFFFF0E5, 0xFFFFFABA, 0xFFFFF0E8, 0xFFFFFAB4, 0xFFFFF0EA, 0xFFFFFAAE, 0xFFFFF0EC, 0xFFFFFAA8, 0xFFFFF0EE, 0xFFFFFAA3,
		0xFFFFF0F0, 0xFFFFFA9D, 0xFFFFF0F2, 0xFFFFFA97, 0xFFFFF0F4, 0xFFFFFA91, 0xFFFFF0F6, 0xFFFFFA8B, 0xFFFFF0F8, 0xFFFFFA85, 0xFFFFF0FB, 0xFFFFFA7F, 0xFFFFF0FD, 0xFFFFFA79, 0xFFFFF0FF, 0xFFFFFA73, 0xFFFFF101, 0xFFFFFA6D, 0xFFFFF103, 0xFFFFFA67, 0xFFFFF106, 0xFFFFFA62, 0xFFFFF108, 0xFFFFFA5C, 0xFFFFF10A, 0xFFFFFA56, 0xFFFFF10C, 0xFFFFFA50, 0xFFFFF10E, 0xFFFFFA4A, 0xFFFFF111, 0xFFFFFA44,
		0xFFFFF113, 0xFFFFFA3E, 0xFFFFF115, 0xFFFFFA39, 0xFFFFF118, 0xFFFFFA33, 0xFFFFF11A, 0xFFFFFA2D, 0xFFFFF11C, 0xFFFFFA27, 0xFFFFF11E, 0xFFFFFA21, 0xFFFFF121, 0xFFFFFA1B, 0xFFFFF123, 0xFFFFFA15, 0xFFFFF125, 0xFFFFFA10, 0xFFFFF128, 0xFFFFFA0A, 0xFFFFF12A, 0xFFFFFA04, 0xFFFFF12C, 0xFFFFF9FE, 0xFFFFF12F, 0xFFFFF9F8, 0xFFFFF131, 0xFFFFF9F2, 0xFFFFF133, 0xFFFFF9ED, 0xFFFFF136, 0xFFFFF9E7,
		0xFFFFF138, 0xFFFFF9E1, 0xFFFFF13B, 0xFFFFF9DB, 0xFFFFF13D, 0xFFFFF9D5, 0xFFFFF140, 0xFFFFF9D0, 0xFFFFF142, 0xFFFFF9CA, 0xFFFFF144, 0xFFFFF9C4, 0xFFFFF147, 0xFFFFF9BE, 0xFFFFF149, 0xFFFFF9B8, 0xFFFFF14C, 0xFFFFF9B3, 0xFFFFF14E, 0xFFFFF9AD, 0xFFFFF151, 0xFFFFF9A7, 0xFFFFF153, 0xFFFFF9A1, 0xFFFFF156, 0xFFFFF99C, 0xFFFFF158, 0xFFFFF996, 0xFFFFF15B, 0xFFFFF990, 0xFFFFF15D, 0xFFFFF98A,
		0xFFFFF160, 0xFFFFF985, 0xFFFFF162, 0xFFFFF97F, 0xFFFFF165, 0xFFFFF979, 0xFFFFF168, 0xFFFFF973, 0xFFFFF16A, 0xFFFFF96E, 0xFFFFF16D, 0xFFFFF968, 0xFFFFF16F, 0xFFFFF962, 0xFFFFF172, 0xFFFFF95D, 0xFFFFF175, 0xFFFFF957, 0xFFFFF177, 0xFFFFF951, 0xFFFFF17A, 0xFFFFF94B, 0xFFFFF17C, 0xFFFFF946, 0xFFFFF17F, 0xFFFFF940, 0xFFFFF182, 0xFFFFF93A, 0xFFFFF184, 0xFFFFF935, 0xFFFFF187, 0xFFFFF92F,
		0xFFFFF18A, 0xFFFFF929, 0xFFFFF18C, 0xFFFFF924, 0xFFFFF18F, 0xFFFFF91E, 0xFFFFF192, 0xFFFFF918, 0xFFFFF195, 0xFFFFF913, 0xFFFFF197, 0xFFFFF90D, 0xFFFFF19A, 0xFFFFF907, 0xFFFFF19D, 0xFFFFF902, 0xFFFFF1A0, 0xFFFFF8FC, 0xFFFFF1A2, 0xFFFFF8F6, 0xFFFFF1A5, 0xFFFFF8F1, 0xFFFFF1A8, 0xFFFFF8EB, 0xFFFFF1AB, 0xFFFFF8E5, 0xFFFFF1AD, 0xFFFFF8E0, 0xFFFFF1B0, 0xFFFFF8DA, 0xFFFFF1B3, 0xFFFFF8D5,
		0xFFFFF1B6, 0xFFFFF8CF, 0xFFFFF1B9, 0xFFFFF8C9, 0xFFFFF1BC, 0xFFFFF8C4, 0xFFFFF1BE, 0xFFFFF8BE, 0xFFFFF1C1, 0xFFFFF8B8, 0xFFFFF1C4, 0xFFFFF8B3, 0xFFFFF1C7, 0xFFFFF8AD, 0xFFFFF1CA, 0xFFFFF8A8, 0xFFFFF1CD, 0xFFFFF8A2, 0xFFFFF1D0, 0xFFFFF89D, 0xFFFFF1D3, 0xFFFFF897, 0xFFFFF1D5, 0xFFFFF891, 0xFFFFF1D8, 0xFFFFF88C, 0xFFFFF1DB, 0xFFFFF886, 0xFFFFF1DE, 0xFFFFF881, 0xFFFFF1E1, 0xFFFFF87B,
		0xFFFFF1E4, 0xFFFFF876, 0xFFFFF1E7, 0xFFFFF870, 0xFFFFF1EA, 0xFFFFF86B, 0xFFFFF1ED, 0xFFFFF865, 0xFFFFF1F0, 0xFFFFF860, 0xFFFFF1F3, 0xFFFFF85A, 0xFFFFF1F6, 0xFFFFF854, 0xFFFFF1F9, 0xFFFFF84F, 0xFFFFF1FC, 0xFFFFF849, 0xFFFFF1FF, 0xFFFFF844, 0xFFFFF202, 0xFFFFF83E, 0xFFFFF205, 0xFFFFF839, 0xFFFFF208, 0xFFFFF833, 0xFFFFF20B, 0xFFFFF82E, 0xFFFFF20E, 0xFFFFF829, 0xFFFFF212, 0xFFFFF823,
		0xFFFFF215, 0xFFFFF81E, 0xFFFFF218, 0xFFFFF818, 0xFFFFF21B, 0xFFFFF813, 0xFFFFF21E, 0xFFFFF80D, 0xFFFFF221, 0xFFFFF808, 0xFFFFF224, 0xFFFFF802, 0xFFFFF227, 0xFFFFF7FD, 0xFFFFF22B, 0xFFFFF7F7, 0xFFFFF22E, 0xFFFFF7F2, 0xFFFFF231, 0xFFFFF7ED, 0xFFFFF234, 0xFFFFF7E7, 0xFFFFF237, 0xFFFFF7E2, 0xFFFFF23A, 0xFFFFF7DC, 0xFFFFF23E, 0xFFFFF7D7, 0xFFFFF241, 0xFFFFF7D2, 0xFFFFF244, 0xFFFFF7CC,
		0xFFFFF247, 0xFFFFF7C7, 0xFFFFF24A, 0xFFFFF7C1, 0xFFFFF24E, 0xFFFFF7BC, 0xFFFFF251, 0xFFFFF7B7, 0xFFFFF254, 0xFFFFF7B1, 0xFFFFF257, 0xFFFFF7AC, 0xFFFFF25B, 0xFFFFF7A6, 0xFFFFF25E, 0xFFFFF7A1, 0xFFFFF261, 0xFFFFF79C, 0xFFFFF265, 0xFFFFF796, 0xFFFFF268, 0xFFFFF791, 0xFFFFF26B, 0xFFFFF78C, 0xFFFFF26F, 0xFFFFF786, 0xFFFFF272, 0xFFFFF781, 0xFFFFF275, 0xFFFFF77C, 0xFFFFF279, 0xFFFFF776,
		0xFFFFF27C, 0xFFFFF771, 0xFFFFF27F, 0xFFFFF76C, 0xFFFFF283, 0xFFFFF767, 0xFFFFF286, 0xFFFFF761, 0xFFFFF289, 0xFFFFF75C, 0xFFFFF28D, 0xFFFFF757, 0xFFFFF290, 0xFFFFF751, 0xFFFFF294, 0xFFFFF74C, 0xFFFFF297, 0xFFFFF747, 0xFFFFF29B, 0xFFFFF742, 0xFFFFF29E, 0xFFFFF73C, 0xFFFFF2A1, 0xFFFFF737, 0xFFFFF2A5, 0xFFFFF732, 0xFFFFF2A8, 0xFFFFF72D, 0xFFFFF2AC, 0xFFFFF727, 0xFFFFF2AF, 0xFFFFF722,
		0xFFFFF2B3, 0xFFFFF71D, 0xFFFFF2B6, 0xFFFFF718, 0xFFFFF2BA, 0xFFFFF712, 0xFFFFF2BD, 0xFFFFF70D, 0xFFFFF2C1, 0xFFFFF708, 0xFFFFF2C4, 0xFFFFF703, 0xFFFFF2C8, 0xFFFFF6FE, 0xFFFFF2CB, 0xFFFFF6F8, 0xFFFFF2CF, 0xFFFFF6F3, 0xFFFFF2D3, 0xFFFFF6EE, 0xFFFFF2D6, 0xFFFFF6E9, 0xFFFFF2DA, 0xFFFFF6E4, 0xFFFFF2DD, 0xFFFFF6DF, 0xFFFFF2E1, 0xFFFFF6D9, 0xFFFFF2E4, 0xFFFFF6D4, 0xFFFFF2E8, 0xFFFFF6CF,
		0xFFFFF2EC, 0xFFFFF6CA, 0xFFFFF2EF, 0xFFFFF6C5, 0xFFFFF2F3, 0xFFFFF6C0, 0xFFFFF2F7, 0xFFFFF6BB, 0xFFFFF2FA, 0xFFFFF6B5, 0xFFFFF2FE, 0xFFFFF6B0, 0xFFFFF302, 0xFFFFF6AB, 0xFFFFF305, 0xFFFFF6A6, 0xFFFFF309, 0xFFFFF6A1, 0xFFFFF30D, 0xFFFFF69C, 0xFFFFF310, 0xFFFFF697, 0xFFFFF314, 0xFFFFF692, 0xFFFFF318, 0xFFFFF68D, 0xFFFFF31B, 0xFFFFF688, 0xFFFFF31F, 0xFFFFF683, 0xFFFFF323, 0xFFFFF67E,
		0xFFFFF327, 0xFFFFF679, 0xFFFFF32A, 0xFFFFF673, 0xFFFFF32E, 0xFFFFF66E, 0xFFFFF332, 0xFFFFF669, 0xFFFFF336, 0xFFFFF664, 0xFFFFF339, 0xFFFFF65F, 0xFFFFF33D, 0xFFFFF65A, 0xFFFFF341, 0xFFFFF655, 0xFFFFF345, 0xFFFFF650, 0xFFFFF349, 0xFFFFF64B, 0xFFFFF34C, 0xFFFFF646, 0xFFFFF350, 0xFFFFF641, 0xFFFFF354, 0xFFFFF63C, 0xFFFFF358, 0xFFFFF637, 0xFFFFF35C, 0xFFFFF632, 0xFFFFF360, 0xFFFFF62D,
		0xFFFFF363, 0xFFFFF629, 0xFFFFF367, 0xFFFFF624, 0xFFFFF36B, 0xFFFFF61F, 0xFFFFF36F, 0xFFFFF61A, 0xFFFFF373, 0xFFFFF615, 0xFFFFF377, 0xFFFFF610, 0xFFFFF37B, 0xFFFFF60B, 0xFFFFF37F, 0xFFFFF606, 0xFFFFF383, 0xFFFFF601, 0xFFFFF387, 0xFFFFF5FC, 0xFFFFF38A, 0xFFFFF5F7, 0xFFFFF38E, 0xFFFFF5F2, 0xFFFFF392, 0xFFFFF5EE, 0xFFFFF396, 0xFFFFF5E9, 0xFFFFF39A, 0xFFFFF5E4, 0xFFFFF39E, 0xFFFFF5DF,
		0xFFFFF3A2, 0xFFFFF5DA, 0xFFFFF3A6, 0xFFFFF5D5, 0xFFFFF3AA, 0xFFFFF5D0, 0xFFFFF3AE, 0xFFFFF5CB, 0xFFFFF3B2, 0xFFFFF5C7, 0xFFFFF3B6, 0xFFFFF5C2, 0xFFFFF3BA, 0xFFFFF5BD, 0xFFFFF3BE, 0xFFFFF5B8, 0xFFFFF3C2, 0xFFFFF5B3, 0xFFFFF3C6, 0xFFFFF5AF, 0xFFFFF3CA, 0xFFFFF5AA, 0xFFFFF3CF, 0xFFFFF5A5, 0xFFFFF3D3, 0xFFFFF5A0, 0xFFFFF3D7, 0xFFFFF59B, 0xFFFFF3DB, 0xFFFFF597, 0xFFFFF3DF, 0xFFFFF592,
		0xFFFFF3E3, 0xFFFFF58D, 0xFFFFF3E7, 0xFFFFF588, 0xFFFFF3EB, 0xFFFFF584, 0xFFFFF3EF, 0xFFFFF57F, 0xFFFFF3F3, 0xFFFFF57A, 0xFFFFF3F8, 0xFFFFF575, 0xFFFFF3FC, 0xFFFFF571, 0xFFFFF400, 0xFFFFF56C, 0xFFFFF404, 0xFFFFF567, 0xFFFFF408, 0xFFFFF563, 0xFFFFF40C, 0xFFFFF55E, 0xFFFFF411, 0xFFFFF559, 0xFFFFF415, 0xFFFFF554, 0xFFFFF419, 0xFFFFF550, 0xFFFFF41D, 0xFFFFF54B, 0xFFFFF421, 0xFFFFF546,
		0xFFFFF426, 0xFFFFF542, 0xFFFFF42A, 0xFFFFF53D, 0xFFFFF42E, 0xFFFFF538, 0xFFFFF432, 0xFFFFF534, 0xFFFFF436, 0xFFFFF52F, 0xFFFFF43B, 0xFFFFF52B, 0xFFFFF43F, 0xFFFFF526, 0xFFFFF443, 0xFFFFF521, 0xFFFFF448, 0xFFFFF51D, 0xFFFFF44C, 0xFFFFF518, 0xFFFFF450, 0xFFFFF514, 0xFFFFF454, 0xFFFFF50F, 0xFFFFF459, 0xFFFFF50A, 0xFFFFF45D, 0xFFFFF506, 0xFFFFF461, 0xFFFFF501, 0xFFFFF466, 0xFFFFF4FD,
		0xFFFFF46A, 0xFFFFF4F8, 0xFFFFF46E, 0xFFFFF4F4, 0xFFFFF473, 0xFFFFF4EF, 0xFFFFF477, 0xFFFFF4EB, 0xFFFFF47B, 0xFFFFF4E6, 0xFFFFF480, 0xFFFFF4E1, 0xFFFFF484, 0xFFFFF4DD, 0xFFFFF488, 0xFFFFF4D8, 0xFFFFF48D, 0xFFFFF4D4, 0xFFFFF491, 0xFFFFF4CF, 0xFFFFF496, 0xFFFFF4CB, 0xFFFFF49A, 0xFFFFF4C6, 0xFFFFF49E, 0xFFFFF4C2, 0xFFFFF4A3, 0xFFFFF4BE, 0xFFFFF4A7, 0xFFFFF4B9, 0xFFFFF4AC, 0xFFFFF4B5,
		0xFFFFF4B0, 0xFFFFF4B0, 0xFFFFF4B5, 0xFFFFF4AC, 0xFFFFF4B9, 0xFFFFF4A7, 0xFFFFF4BE, 0xFFFFF4A3, 0xFFFFF4C2, 0xFFFFF49E, 0xFFFFF4C6, 0xFFFFF49A, 0xFFFFF4CB, 0xFFFFF496, 0xFFFFF4CF, 0xFFFFF491, 0xFFFFF4D4, 0xFFFFF48D, 0xFFFFF4D8, 0xFFFFF488, 0xFFFFF4DD, 0xFFFFF484, 0xFFFFF4E1, 0xFFFFF480, 0xFFFFF4E6, 0xFFFFF47B, 0xFFFFF4EB, 0xFFFFF477, 0xFFFFF4EF, 0xFFFFF473, 0xFFFFF4F4, 0xFFFFF46E,
		0xFFFFF4F8, 0xFFFFF46A, 0xFFFFF4FD, 0xFFFFF466, 0xFFFFF501, 0xFFFFF461, 0xFFFFF506, 0xFFFFF45D, 0xFFFFF50A, 0xFFFFF459, 0xFFFFF50F, 0xFFFFF454, 0xFFFFF514, 0xFFFFF450, 0xFFFFF518, 0xFFFFF44C, 0xFFFFF51D, 0xFFFFF448, 0xFFFFF521, 0xFFFFF443, 0xFFFFF526, 0xFFFFF43F, 0xFFFFF52B, 0xFFFFF43B, 0xFFFFF52F, 0xFFFFF436, 0xFFFFF534, 0xFFFFF432, 0xFFFFF538, 0xFFFFF42E, 0xFFFFF53D, 0xFFFFF42A,
		0xFFFFF542, 0xFFFFF426, 0xFFFFF546, 0xFFFFF421, 0xFFFFF54B, 0xFFFFF41D, 0xFFFFF550, 0xFFFFF419, 0xFFFFF554, 0xFFFFF415, 0xFFFFF559, 0xFFFFF411, 0xFFFFF55E, 0xFFFFF40C, 0xFFFFF563, 0xFFFFF408, 0xFFFFF567, 0xFFFFF404, 0xFFFFF56C, 0xFFFFF400, 0xFFFFF571, 0xFFFFF3FC, 0xFFFFF575, 0xFFFFF3F8, 0xFFFFF57A, 0xFFFFF3F3, 0xFFFFF57F, 0xFFFFF3EF, 0xFFFFF584, 0xFFFFF3EB, 0xFFFFF588, 0xFFFFF3E7,
		0xFFFFF58D, 0xFFFFF3E3, 0xFFFFF592, 0xFFFFF3DF, 0xFFFFF597, 0xFFFFF3DB, 0xFFFFF59B, 0xFFFFF3D7, 0xFFFFF5A0, 0xFFFFF3D3, 0xFFFFF5A5, 0xFFFFF3CF, 0xFFFFF5AA, 0xFFFFF3CA, 0xFFFFF5AF, 0xFFFFF3C6, 0xFFFFF5B3, 0xFFFFF3C2, 0xFFFFF5B8, 0xFFFFF3BE, 0xFFFFF5BD, 0xFFFFF3BA, 0xFFFFF5C2, 0xFFFFF3B6, 0xFFFFF5C7, 0xFFFFF3B2, 0xFFFFF5CB, 0xFFFFF3AE, 0xFFFFF5D0, 0xFFFFF3AA, 0xFFFFF5D5, 0xFFFFF3A6,
		0xFFFFF5DA, 0xFFFFF3A2, 0xFFFFF5DF, 0xFFFFF39E, 0xFFFFF5E4, 0xFFFFF39A, 0xFFFFF5E9, 0xFFFFF396, 0xFFFFF5EE, 0xFFFFF392, 0xFFFFF5F2, 0xFFFFF38E, 0xFFFFF5F7, 0xFFFFF38A, 0xFFFFF5FC, 0xFFFFF387, 0xFFFFF601, 0xFFFFF383, 0xFFFFF606, 0xFFFFF37F, 0xFFFFF60B, 0xFFFFF37B, 0xFFFFF610, 0xFFFFF377, 0xFFFFF615, 0xFFFFF373, 0xFFFFF61A, 0xFFFFF36F, 0xFFFFF61F, 0xFFFFF36B, 0xFFFFF624, 0xFFFFF367,
		0xFFFFF629, 0xFFFFF363, 0xFFFFF62D, 0xFFFFF360, 0xFFFFF632, 0xFFFFF35C, 0xFFFFF637, 0xFFFFF358, 0xFFFFF63C, 0xFFFFF354, 0xFFFFF641, 0xFFFFF350, 0xFFFFF646, 0xFFFFF34C, 0xFFFFF64B, 0xFFFFF349, 0xFFFFF650, 0xFFFFF345, 0xFFFFF655, 0xFFFFF341, 0xFFFFF65A, 0xFFFFF33D, 0xFFFFF65F, 0xFFFFF339, 0xFFFFF664, 0xFFFFF336, 0xFFFFF669, 0xFFFFF332, 0xFFFFF66E, 0xFFFFF32E, 0xFFFFF673, 0xFFFFF32A,
		0xFFFFF679, 0xFFFFF327, 0xFFFFF67E, 0xFFFFF323, 0xFFFFF683, 0xFFFFF31F, 0xFFFFF688, 0xFFFFF31B, 0xFFFFF68D, 0xFFFFF318, 0xFFFFF692, 0xFFFFF314, 0xFFFFF697, 0xFFFFF310, 0xFFFFF69C, 0xFFFFF30D, 0xFFFFF6A1, 0xFFFFF309, 0xFFFFF6A6, 0xFFFFF305, 0xFFFFF6AB, 0xFFFFF302, 0xFFFFF6B0, 0xFFFFF2FE, 0xFFFFF6B5, 0xFFFFF2FA, 0xFFFFF6BB, 0xFFFFF2F7, 0xFFFFF6C0, 0xFFFFF2F3, 0xFFFFF6C5, 0xFFFFF2EF,
		0xFFFFF6CA, 0xFFFFF2EC, 0xFFFFF6CF, 0xFFFFF2E8, 0xFFFFF6D4, 0xFFFFF2E4, 0xFFFFF6D9, 0xFFFFF2E1, 0xFFFFF6DF, 0xFFFFF2DD, 0xFFFFF6E4, 0xFFFFF2DA, 0xFFFFF6E9, 0xFFFFF2D6, 0xFFFFF6EE, 0xFFFFF2D3, 0xFFFFF6F3, 0xFFFFF2CF, 0xFFFFF6F8, 0xFFFFF2CB, 0xFFFFF6FE, 0xFFFFF2C8, 0xFFFFF703, 0xFFFFF2C4, 0xFFFFF708, 0xFFFFF2C1, 0xFFFFF70D, 0xFFFFF2BD, 0xFFFFF712, 0xFFFFF2BA, 0xFFFFF718, 0xFFFFF2B6,
		0xFFFFF71D, 0xFFFFF2B3, 0xFFFFF722, 0xFFFFF2AF, 0xFFFFF727, 0xFFFFF2AC, 0xFFFFF72D, 0xFFFFF2A8, 0xFFFFF732, 0xFFFFF2A5, 0xFFFFF737, 0xFFFFF2A1, 0xFFFFF73C, 0xFFFFF29E, 0xFFFFF742, 0xFFFFF29B, 0xFFFFF747, 0xFFFFF297, 0xFFFFF74C, 0xFFFFF294, 0xFFFFF751, 0xFFFFF290, 0xFFFFF757, 0xFFFFF28D, 0xFFFFF75C, 0xFFFFF289, 0xFFFFF761, 0xFFFFF286, 0xFFFFF767, 0xFFFFF283, 0xFFFFF76C, 0xFFFFF27F,
		0xFFFFF771, 0xFFFFF27C, 0xFFFFF776, 0xFFFFF279, 0xFFFFF77C, 0xFFFFF275, 0xFFFFF781, 0xFFFFF272, 0xFFFFF786, 0xFFFFF26F, 0xFFFFF78C, 0xFFFFF26B, 0xFFFFF791, 0xFFFFF268, 0xFFFFF796, 0xFFFFF265, 0xFFFFF79C, 0xFFFFF261, 0xFFFFF7A1, 0xFFFFF25E, 0xFFFFF7A6, 0xFFFFF25B, 0xFFFFF7AC, 0xFFFFF257, 0xFFFFF7B1, 0xFFFFF254, 0xFFFFF7B7, 0xFFFFF251, 0xFFFFF7BC, 0xFFFFF24E, 0xFFFFF7C1, 0xFFFFF24A,
		0xFFFFF7C7, 0xFFFFF247, 0xFFFFF7CC, 0xFFFFF244, 0xFFFFF7D2, 0xFFFFF241, 0xFFFFF7D7, 0xFFFFF23E, 0xFFFFF7DC, 0xFFFFF23A, 0xFFFFF7E2, 0xFFFFF237, 0xFFFFF7E7, 0xFFFFF234, 0xFFFFF7ED, 0xFFFFF231, 0xFFFFF7F2, 0xFFFFF22E, 0xFFFFF7F7, 0xFFFFF22B, 0xFFFFF7FD, 0xFFFFF227, 0xFFFFF802, 0xFFFFF224, 0xFFFFF808, 0xFFFFF221, 0xFFFFF80D, 0xFFFFF21E, 0xFFFFF813, 0xFFFFF21B, 0xFFFFF818, 0xFFFFF218,
		0xFFFFF81E, 0xFFFFF215, 0xFFFFF823, 0xFFFFF212, 0xFFFFF829, 0xFFFFF20E, 0xFFFFF82E, 0xFFFFF20B, 0xFFFFF833, 0xFFFFF208, 0xFFFFF839, 0xFFFFF205, 0xFFFFF83E, 0xFFFFF202, 0xFFFFF844, 0xFFFFF1FF, 0xFFFFF849, 0xFFFFF1FC, 0xFFFFF84F, 0xFFFFF1F9, 0xFFFFF854, 0xFFFFF1F6, 0xFFFFF85A, 0xFFFFF1F3, 0xFFFFF860, 0xFFFFF1F0, 0xFFFFF865, 0xFFFFF1ED, 0xFFFFF86B, 0xFFFFF1EA, 0xFFFFF870, 0xFFFFF1E7,
		0xFFFFF876, 0xFFFFF1E4, 0xFFFFF87B, 0xFFFFF1E1, 0xFFFFF881, 0xFFFFF1DE, 0xFFFFF886, 0xFFFFF1DB, 0xFFFFF88C, 0xFFFFF1D8, 0xFFFFF891, 0xFFFFF1D5, 0xFFFFF897, 0xFFFFF1D3, 0xFFFFF89D, 0xFFFFF1D0, 0xFFFFF8A2, 0xFFFFF1CD, 0xFFFFF8A8, 0xFFFFF1CA, 0xFFFFF8AD, 0xFFFFF1C7, 0xFFFFF8B3, 0xFFFFF1C4, 0xFFFFF8B8, 0xFFFFF1C1, 0xFFFFF8BE, 0xFFFFF1BE, 0xFFFFF8C4, 0xFFFFF1BC, 0xFFFFF8C9, 0xFFFFF1B9,
		0xFFFFF8CF, 0xFFFFF1B6, 0xFFFFF8D5, 0xFFFFF1B3, 0xFFFFF8DA, 0xFFFFF1B0, 0xFFFFF8E0, 0xFFFFF1AD, 0xFFFFF8E5, 0xFFFFF1AB, 0xFFFFF8EB, 0xFFFFF1A8, 0xFFFFF8F1, 0xFFFFF1A5, 0xFFFFF8F6, 0xFFFFF1A2, 0xFFFFF8FC, 0xFFFFF1A0, 0xFFFFF902, 0xFFFFF19D, 0xFFFFF907, 0xFFFFF19A, 0xFFFFF90D, 0xFFFFF197, 0xFFFFF913, 0xFFFFF195, 0xFFFFF918, 0xFFFFF192, 0xFFFFF91E, 0xFFFFF18F, 0xFFFFF924, 0xFFFFF18C,
		0xFFFFF929, 0xFFFFF18A, 0xFFFFF92F, 0xFFFFF187, 0xFFFFF935, 0xFFFFF184, 0xFFFFF93A, 0xFFFFF182, 0xFFFFF940, 0xFFFFF17F, 0xFFFFF946, 0xFFFFF17C, 0xFFFFF94B, 0xFFFFF17A, 0xFFFFF951, 0xFFFFF177, 0xFFFFF957, 0xFFFFF175, 0xFFFFF95D, 0xFFFFF172, 0xFFFFF962, 0xFFFFF16F, 0xFFFFF968, 0xFFFFF16D, 0xFFFFF96E, 0xFFFFF16A, 0xFFFFF973, 0xFFFFF168, 0xFFFFF979, 0xFFFFF165, 0xFFFFF97F, 0xFFFFF162,
		0xFFFFF985, 0xFFFFF160, 0xFFFFF98A, 0xFFFFF15D, 0xFFFFF990, 0xFFFFF15B, 0xFFFFF996, 0xFFFFF158, 0xFFFFF99C, 0xFFFFF156, 0xFFFFF9A1, 0xFFFFF153, 0xFFFFF9A7, 0xFFFFF151, 0xFFFFF9AD, 0xFFFFF14E, 0xFFFFF9B3, 0xFFFFF14C, 0xFFFFF9B8, 0xFFFFF149, 0xFFFFF9BE, 0xFFFFF147, 0xFFFFF9C4, 0xFFFFF144, 0xFFFFF9CA, 0xFFFFF142, 0xFFFFF9D0, 0xFFFFF140, 0xFFFFF9D5, 0xFFFFF13D, 0xFFFFF9DB, 0xFFFFF13B,
		0xFFFFF9E1, 0xFFFFF138, 0xFFFFF9E7, 0xFFFFF136, 0xFFFFF9ED, 0xFFFFF133, 0xFFFFF9F2, 0xFFFFF131, 0xFFFFF9F8, 0xFFFFF12F, 0xFFFFF9FE, 0xFFFFF12C, 0xFFFFFA04, 0xFFFFF12A, 0xFFFFFA0A, 0xFFFFF128, 0xFFFFFA10, 0xFFFFF125, 0xFFFFFA15, 0xFFFFF123, 0xFFFFFA1B, 0xFFFFF121, 0xFFFFFA21, 0xFFFFF11E, 0xFFFFFA27, 0xFFFFF11C, 0xFFFFFA2D, 0xFFFFF11A, 0xFFFFFA33, 0xFFFFF118, 0xFFFFFA39, 0xFFFFF115,
		0xFFFFFA3E, 0xFFFFF113, 0xFFFFFA44, 0xFFFFF111, 0xFFFFFA4A, 0xFFFFF10E, 0xFFFFFA50, 0xFFFFF10C, 0xFFFFFA56, 0xFFFFF10A, 0xFFFFFA5C, 0xFFFFF108, 0xFFFFFA62, 0xFFFFF106, 0xFFFFFA67, 0xFFFFF103, 0xFFFFFA6D, 0xFFFFF101, 0xFFFFFA73, 0xFFFFF0FF, 0xFFFFFA79, 0xFFFFF0FD, 0xFFFFFA7F, 0xFFFFF0FB, 0xFFFFFA85, 0xFFFFF0F8, 0xFFFFFA8B, 0xFFFFF0F6, 0xFFFFFA91, 0xFFFFF0F4, 0xFFFFFA97, 0xFFFFF0F2,
		0xFFFFFA9D, 0xFFFFF0F0, 0xFFFFFAA3, 0xFFFFF0EE, 0xFFFFFAA8, 0xFFFFF0EC, 0xFFFFFAAE, 0xFFFFF0EA, 0xFFFFFAB4, 0xFFFFF0E8, 0xFFFFFABA, 0xFFFFF0E5, 0xFFFFFAC0, 0xFFFFF0E3, 0xFFFFFAC6, 0xFFFFF0E1, 0xFFFFFACC, 0xFFFFF0DF, 0xFFFFFAD2, 0xFFFFF0DD, 0xFFFFFAD8, 0xFFFFF0DB, 0xFFFFFADE, 0xFFFFF0D9, 0xFFFFFAE4, 0xFFFFF0D7, 0xFFFFFAEA, 0xFFFFF0D5, 0xFFFFFAF0, 0xFFFFF0D3, 0xFFFFFAF6, 0xFFFFF0D1,
		0xFFFFFAFC, 0xFFFFF0CF, 0xFFFFFB02, 0xFFFFF0CD, 0xFFFFFB08, 0xFFFFF0CB, 0xFFFFFB0E, 0xFFFFF0C9, 0xFFFFFB14, 0xFFFFF0C7, 0xFFFFFB1A, 0xFFFFF0C5, 0xFFFFFB20, 0xFFFFF0C4, 0xFFFFFB25, 0xFFFFF0C2, 0xFFFFFB2B, 0xFFFFF0C0, 0xFFFFFB31, 0xFFFFF0BE, 0xFFFFFB37, 0xFFFFF0BC, 0xFFFFFB3D, 0xFFFFF0BA, 0xFFFFFB43, 0xFFFFF0B8, 0xFFFFFB49, 0xFFFFF0B6, 0xFFFFFB4F, 0xFFFFF0B5, 0xFFFFFB55, 0xFFFFF0B3,
		0xFFFFFB5B, 0xFFFFF0B1, 0xFFFFFB62, 0xFFFFF0AF, 0xFFFFFB68, 0xFFFFF0AD, 0xFFFFFB6E, 0xFFFFF0AB, 0xFFFFFB74, 0xFFFFF0AA, 0xFFFFFB7A, 0xFFFFF0A8, 0xFFFFFB80, 0xFFFFF0A6, 0xFFFFFB86, 0xFFFFF0A4, 0xFFFFFB8C, 0xFFFFF0A3, 0xFFFFFB92, 0xFFFFF0A1, 0xFFFFFB98, 0xFFFFF09F, 0xFFFFFB9E, 0xFFFFF09D, 0xFFFFFBA4, 0xFFFFF09C, 0xFFFFFBAA, 0xFFFFF09A, 0xFFFFFBB0, 0xFFFFF098, 0xFFFFFBB6, 0xFFFFF097,
		0xFFFFFBBC, 0xFFFFF095, 0xFFFFFBC2, 0xFFFFF093, 0xFFFFFBC8, 0xFFFFF092, 0xFFFFFBCE, 0xFFFFF090, 0xFFFFFBD4, 0xFFFFF08E, 0xFFFFFBDA, 0xFFFFF08D, 0xFFFFFBE0, 0xFFFFF08B, 0xFFFFFBE6, 0xFFFFF089, 0xFFFFFBED, 0xFFFFF088, 0xFFFFFBF3, 0xFFFFF086, 0xFFFFFBF9, 0xFFFFF085, 0xFFFFFBFF, 0xFFFFF083, 0xFFFFFC05, 0xFFFFF081, 0xFFFFFC0B, 0xFFFFF080, 0xFFFFFC11, 0xFFFFF07E, 0xFFFFFC17, 0xFFFFF07D,
		0xFFFFFC1D, 0xFFFFF07B, 0xFFFFFC23, 0xFFFFF07A, 0xFFFFFC29, 0xFFFFF078, 0xFFFFFC30, 0xFFFFF077, 0xFFFFFC36, 0xFFFFF075, 0xFFFFFC3C, 0xFFFFF074, 0xFFFFFC42, 0xFFFFF072, 0xFFFFFC48, 0xFFFFF071, 0xFFFFFC4E, 0xFFFFF06F, 0xFFFFFC54, 0xFFFFF06E, 0xFFFFFC5A, 0xFFFFF06C, 0xFFFFFC60, 0xFFFFF06B, 0xFFFFFC67, 0xFFFFF06A, 0xFFFFFC6D, 0xFFFFF068, 0xFFFFFC73, 0xFFFFF067, 0xFFFFFC79, 0xFFFFF065,
		0xFFFFFC7F, 0xFFFFF064, 0xFFFFFC85, 0xFFFFF063, 0xFFFFFC8B, 0xFFFFF061, 0xFFFFFC91, 0xFFFFF060, 0xFFFFFC98, 0xFFFFF05F, 0xFFFFFC9E, 0xFFFFF05D, 0xFFFFFCA4, 0xFFFFF05C, 0xFFFFFCAA, 0xFFFFF05B, 0xFFFFFCB0, 0xFFFFF059, 0xFFFFFCB6, 0xFFFFF058, 0xFFFFFCBC, 0xFFFFF057, 0xFFFFFCC3, 0xFFFFF055, 0xFFFFFCC9, 0xFFFFF054, 0xFFFFFCCF, 0xFFFFF053, 0xFFFFFCD5, 0xFFFFF052, 0xFFFFFCDB, 0xFFFFF050,
		0xFFFFFCE1, 0xFFFFF04F, 0xFFFFFCE8, 0xFFFFF04E, 0xFFFFFCEE, 0xFFFFF04D, 0xFFFFFCF4, 0xFFFFF04C, 0xFFFFFCFA, 0xFFFFF04A, 0xFFFFFD00, 0xFFFFF049, 0xFFFFFD06, 0xFFFFF048, 0xFFFFFD0D, 0xFFFFF047, 0xFFFFFD13, 0xFFFFF046, 0xFFFFFD19, 0xFFFFF045, 0xFFFFFD1F, 0xFFFFF043, 0xFFFFFD25, 0xFFFFF042, 0xFFFFFD2B, 0xFFFFF041, 0xFFFFFD32, 0xFFFFF040, 0xFFFFFD38, 0xFFFFF03F, 0xFFFFFD3E, 0xFFFFF03E,
		0xFFFFFD44, 0xFFFFF03D, 0xFFFFFD4A, 0xFFFFF03C, 0xFFFFFD51, 0xFFFFF03B, 0xFFFFFD57, 0xFFFFF03A, 0xFFFFFD5D, 0xFFFFF039, 0xFFFFFD63, 0xFFFFF038, 0xFFFFFD69, 0xFFFFF037, 0xFFFFFD70, 0xFFFFF036, 0xFFFFFD76, 0xFFFFF035, 0xFFFFFD7C, 0xFFFFF034, 0xFFFFFD82, 0xFFFFF033, 0xFFFFFD88, 0xFFFFF032, 0xFFFFFD8F, 0xFFFFF031, 0xFFFFFD95, 0xFFFFF030, 0xFFFFFD9B, 0xFFFFF02F, 0xFFFFFDA1, 0xFFFFF02E,
		0xFFFFFDA7, 0xFFFFF02D, 0xFFFFFDAE, 0xFFFFF02C, 0xFFFFFDB4, 0xFFFFF02B, 0xFFFFFDBA, 0xFFFFF02A, 0xFFFFFDC0, 0xFFFFF029, 0xFFFFFDC7, 0xFFFFF028, 0xFFFFFDCD, 0xFFFFF027, 0xFFFFFDD3, 0xFFFFF027, 0xFFFFFDD9, 0xFFFFF026, 0xFFFFFDDF, 0xFFFFF025, 0xFFFFFDE6, 0xFFFFF024, 0xFFFFFDEC, 0xFFFFF023, 0xFFFFFDF2, 0xFFFFF022, 0xFFFFFDF8, 0xFFFFF022, 0xFFFFFDFF, 0xFFFFF021, 0xFFFFFE05, 0xFFFFF020,
		0xFFFFFE0B, 0xFFFFF01F, 0xFFFFFE11, 0xFFFFF01F, 0xFFFFFE18, 0xFFFFF01E, 0xFFFFFE1E, 0xFFFFF01D, 0xFFFFFE24, 0xFFFFF01C, 0xFFFFFE2A, 0xFFFFF01C, 0xFFFFFE31, 0xFFFFF01B, 0xFFFFFE37, 0xFFFFF01A, 0xFFFFFE3D, 0xFFFFF019, 0xFFFFFE43, 0xFFFFF019, 0xFFFFFE4A, 0xFFFFF018, 0xFFFFFE50, 0xFFFFF017, 0xFFFFFE56, 0xFFFFF017, 0xFFFFFE5C, 0xFFFFF016, 0xFFFFFE63, 0xFFFFF015, 0xFFFFFE69, 0xFFFFF015,
		0xFFFFFE6F, 0xFFFFF014, 0xFFFFFE75, 0xFFFFF014, 0xFFFFFE7C, 0xFFFFF013, 0xFFFFFE82, 0xFFFFF012, 0xFFFFFE88, 0xFFFFF012, 0xFFFFFE8E, 0xFFFFF011, 0xFFFFFE95, 0xFFFFF011, 0xFFFFFE9B, 0xFFFFF010, 0xFFFFFEA1, 0xFFFFF010, 0xFFFFFEA7, 0xFFFFF00F, 0xFFFFFEAE, 0xFFFFF00F, 0xFFFFFEB4, 0xFFFFF00E, 0xFFFFFEBA, 0xFFFFF00E, 0xFFFFFEC0, 0xFFFFF00D, 0xFFFFFEC7, 0xFFFFF00D, 0xFFFFFECD, 0xFFFFF00C,
		0xFFFFFED3, 0xFFFFF00C, 0xFFFFFED9, 0xFFFFF00B, 0xFFFFFEE0, 0xFFFFF00B, 0xFFFFFEE6, 0xFFFFF00A, 0xFFFFFEEC, 0xFFFFF00A, 0xFFFFFEF3, 0xFFFFF009, 0xFFFFFEF9, 0xFFFFF009, 0xFFFFFEFF, 0xFFFFF009, 0xFFFFFF05, 0xFFFFF008, 0xFFFFFF0C, 0xFFFFF008, 0xFFFFFF12, 0xFFFFF007, 0xFFFFFF18, 0xFFFFF007, 0xFFFFFF1E, 0xFFFFF007, 0xFFFFFF25, 0xFFFFF006, 0xFFFFFF2B, 0xFFFFF006, 0xFFFFFF31, 0xFFFFF006,
		0xFFFFFF38, 0xFFFFF005, 0xFFFFFF3E, 0xFFFFF005, 0xFFFFFF44, 0xFFFFF005, 0xFFFFFF4A, 0xFFFFF005, 0xFFFFFF51, 0xFFFFF004, 0xFFFFFF57, 0xFFFFF004, 0xFFFFFF5D, 0xFFFFF004, 0xFFFFFF63, 0xFFFFF004, 0xFFFFFF6A, 0xFFFFF003, 0xFFFFFF70, 0xFFFFF003, 0xFFFFFF76, 0xFFFFF003, 0xFFFFFF7D, 0xFFFFF003, 0xFFFFFF83, 0xFFFFF002, 0xFFFFFF89, 0xFFFFF002, 0xFFFFFF8F, 0xFFFFF002, 0xFFFFFF96, 0xFFFFF002,
		0xFFFFFF9C, 0xFFFFF002, 0xFFFFFFA2, 0xFFFFF002, 0xFFFFFFA9, 0xFFFFF001, 0xFFFFFFAF, 0xFFFFF001, 0xFFFFFFB5, 0xFFFFF001, 0xFFFFFFBB, 0xFFFFF001, 0xFFFFFFC2, 0xFFFFF001, 0xFFFFFFC8, 0xFFFFF001, 0xFFFFFFCE, 0xFFFFF001, 0xFFFFFFD5, 0xFFFFF001, 0xFFFFFFDB, 0xFFFFF001, 0xFFFFFFE1, 0xFFFFF001, 0xFFFFFFE7, 0xFFFFF001, 0xFFFFFFEE, 0xFFFFF001, 0xFFFFFFF4, 0xFFFFF001, 0xFFFFFFFA, 0xFFFFF001,
		0x00000000, 0xFFFFF000, 0x00000006, 0xFFFFF001, 0x0000000C, 0xFFFFF001, 0x00000012, 0xFFFFF001, 0x00000019, 0xFFFFF001, 0x0000001F, 0xFFFFF001, 0x00000025, 0xFFFFF001, 0x0000002B, 0xFFFFF001, 0x00000032, 0xFFFFF001, 0x00000038, 0xFFFFF001, 0x0000003E, 0xFFFFF001, 0x00000045, 0xFFFFF001, 0x0000004B, 0xFFFFF001, 0x00000051, 0xFFFFF001, 0x00000057, 0xFFFFF001, 0x0000005E, 0xFFFFF002,
		0x00000064, 0xFFFFF002, 0x0000006A, 0xFFFFF002, 0x00000071, 0xFFFFF002, 0x00000077, 0xFFFFF002, 0x0000007D, 0xFFFFF002, 0x00000083, 0xFFFFF003, 0x0000008A, 0xFFFFF003, 0x00000090, 0xFFFFF003, 0x00000096, 0xFFFFF003, 0x0000009D, 0xFFFFF004, 0x000000A3, 0xFFFFF004, 0x000000A9, 0xFFFFF004, 0x000000AF, 0xFFFFF004, 0x000000B6, 0xFFFFF005, 0x000000BC, 0xFFFFF005, 0x000000C2, 0xFFFFF005,
		0x000000C8, 0xFFFFF005, 0x000000CF, 0xFFFFF006, 0x000000D5, 0xFFFFF006, 0x000000DB, 0xFFFFF006, 0x000000E2, 0xFFFFF007, 0x000000E8, 0xFFFFF007, 0x000000EE, 0xFFFFF007, 0x000000F4, 0xFFFFF008, 0x000000FB, 0xFFFFF008, 0x00000101, 0xFFFFF009, 0x00000107, 0xFFFFF009, 0x0000010D, 0xFFFFF009, 0x00000114, 0xFFFFF00A, 0x0000011A, 0xFFFFF00A, 0x00000120, 0xFFFFF00B, 0x00000127, 0xFFFFF00B,
		0x0000012D, 0xFFFFF00C, 0x00000133, 0xFFFFF00C, 0x00000139, 0xFFFFF00D, 0x00000140, 0xFFFFF00D, 0x00000146, 0xFFFFF00E, 0x0000014C, 0xFFFFF00E, 0x00000152, 0xFFFFF00F, 0x00000159, 0xFFFFF00F, 0x0000015F, 0xFFFFF010, 0x00000165, 0xFFFFF010, 0x0000016B, 0xFFFFF011, 0x00000172, 0xFFFFF011, 0x00000178, 0xFFFFF012, 0x0000017E, 0xFFFFF012, 0x00000184, 0xFFFFF013, 0x0000018B, 0xFFFFF014,
		0x00000191, 0xFFFFF014, 0x00000197, 0xFFFFF015, 0x0000019D, 0xFFFFF015, 0x000001A4, 0xFFFFF016, 0x000001AA, 0xFFFFF017, 0x000001B0, 0xFFFFF017, 0x000001B6, 0xFFFFF018, 0x000001BD, 0xFFFFF019, 0x000001C3, 0xFFFFF019, 0x000001C9, 0xFFFFF01A, 0x000001CF, 0xFFFFF01B, 0x000001D6, 0xFFFFF01C, 0x000001DC, 0xFFFFF01C, 0x000001E2, 0xFFFFF01D, 0x000001E8, 0xFFFFF01E, 0x000001EF, 0xFFFFF01F,
		0x000001F5, 0xFFFFF01F, 0x000001FB, 0xFFFFF020, 0x00000201, 0xFFFFF021, 0x00000208, 0xFFFFF022, 0x0000020E, 0xFFFFF022, 0x00000214, 0xFFFFF023, 0x0000021A, 0xFFFFF024, 0x00000221, 0xFFFFF025, 0x00000227, 0xFFFFF026, 0x0000022D, 0xFFFFF027, 0x00000233, 0xFFFFF027, 0x00000239, 0xFFFFF028, 0x00000240, 0xFFFFF029, 0x00000246, 0xFFFFF02A, 0x0000024C, 0xFFFFF02B, 0x00000252, 0xFFFFF02C,
		0x00000259, 0xFFFFF02D, 0x0000025F, 0xFFFFF02E, 0x00000265, 0xFFFFF02F, 0x0000026B, 0xFFFFF030, 0x00000271, 0xFFFFF031, 0x00000278, 0xFFFFF032, 0x0000027E, 0xFFFFF033, 0x00000284, 0xFFFFF034, 0x0000028A, 0xFFFFF035, 0x00000290, 0xFFFFF036, 0x00000297, 0xFFFFF037, 0x0000029D, 0xFFFFF038, 0x000002A3, 0xFFFFF039, 0x000002A9, 0xFFFFF03A, 0x000002AF, 0xFFFFF03B, 0x000002B6, 0xFFFFF03C,
		0x000002BC, 0xFFFFF03D, 0x000002C2, 0xFFFFF03E, 0x000002C8, 0xFFFFF03F, 0x000002CE, 0xFFFFF040, 0x000002D5, 0xFFFFF041, 0x000002DB, 0xFFFFF042, 0x000002E1, 0xFFFFF043, 0x000002E7, 0xFFFFF045, 0x000002ED, 0xFFFFF046, 0x000002F3, 0xFFFFF047, 0x000002FA, 0xFFFFF048, 0x00000300, 0xFFFFF049, 0x00000306, 0xFFFFF04A, 0x0000030C, 0xFFFFF04C, 0x00000312, 0xFFFFF04D, 0x00000318, 0xFFFFF04E,
		0x0000031F, 0xFFFFF04F, 0x00000325, 0xFFFFF050, 0x0000032B, 0xFFFFF052, 0x00000331, 0xFFFFF053, 0x00000337, 0xFFFFF054, 0x0000033D, 0xFFFFF055, 0x00000344, 0xFFFFF057, 0x0000034A, 0xFFFFF058, 0x00000350, 0xFFFFF059, 0x00000356, 0xFFFFF05B, 0x0000035C, 0xFFFFF05C, 0x00000362, 0xFFFFF05D, 0x00000368, 0xFFFFF05F, 0x0000036F, 0xFFFFF060, 0x00000375, 0xFFFFF061, 0x0000037B, 0xFFFFF063,
		0x00000381, 0xFFFFF064, 0x00000387, 0xFFFFF065, 0x0000038D, 0xFFFFF067, 0x00000393, 0xFFFFF068, 0x00000399, 0xFFFFF06A, 0x000003A0, 0xFFFFF06B, 0x000003A6, 0xFFFFF06C, 0x000003AC, 0xFFFFF06E, 0x000003B2, 0xFFFFF06F, 0x000003B8, 0xFFFFF071, 0x000003BE, 0xFFFFF072, 0x000003C4, 0xFFFFF074, 0x000003CA, 0xFFFFF075, 0x000003D0, 0xFFFFF077, 0x000003D7, 0xFFFFF078, 0x000003DD, 0xFFFFF07A,
		0x000003E3, 0xFFFFF07B, 0x000003E9, 0xFFFFF07D, 0x000003EF, 0xFFFFF07E, 0x000003F5, 0xFFFFF080, 0x000003FB, 0xFFFFF081, 0x00000401, 0xFFFFF083, 0x00000407, 0xFFFFF085, 0x0000040D, 0xFFFFF086, 0x00000413, 0xFFFFF088, 0x0000041A, 0xFFFFF089, 0x00000420, 0xFFFFF08B, 0x00000426, 0xFFFFF08D, 0x0000042C, 0xFFFFF08E, 0x00000432, 0xFFFFF090, 0x00000438, 0xFFFFF092, 0x0000043E, 0xFFFFF093,
		0x00000444, 0xFFFFF095, 0x0000044A, 0xFFFFF097, 0x00000450, 0xFFFFF098, 0x00000456, 0xFFFFF09A, 0x0000045C, 0xFFFFF09C, 0x00000462, 0xFFFFF09D, 0x00000468, 0xFFFFF09F, 0x0000046E, 0xFFFFF0A1, 0x00000474, 0xFFFFF0A3, 0x0000047A, 0xFFFFF0A4, 0x00000480, 0xFFFFF0A6, 0x00000486, 0xFFFFF0A8, 0x0000048C, 0xFFFFF0AA, 0x00000492, 0xFFFFF0AB, 0x00000498, 0xFFFFF0AD, 0x0000049E, 0xFFFFF0AF,
		0x000004A5, 0xFFFFF0B1, 0x000004AB, 0xFFFFF0B3, 0x000004B1, 0xFFFFF0B5, 0x000004B7, 0xFFFFF0B6, 0x000004BD, 0xFFFFF0B8, 0x000004C3, 0xFFFFF0BA, 0x000004C9, 0xFFFFF0BC, 0x000004CF, 0xFFFFF0BE, 0x000004D5, 0xFFFFF0C0, 0x000004DB, 0xFFFFF0C2, 0x000004E0, 0xFFFFF0C4, 0x000004E6, 0xFFFFF0C5, 0x000004EC, 0xFFFFF0C7, 0x000004F2, 0xFFFFF0C9, 0x000004F8, 0xFFFFF0CB, 0x000004FE, 0xFFFFF0CD,
		0x00000504, 0xFFFFF0CF, 0x0000050A, 0xFFFFF0D1, 0x00000510, 0xFFFFF0D3, 0x00000516, 0xFFFFF0D5, 0x0000051C, 0xFFFFF0D7, 0x00000522, 0xFFFFF0D9, 0x00000528, 0xFFFFF0DB, 0x0000052E, 0xFFFFF0DD, 0x00000534, 0xFFFFF0DF, 0x0000053A, 0xFFFFF0E1, 0x00000540, 0xFFFFF0E3, 0x00000546, 0xFFFFF0E5, 0x0000054C, 0xFFFFF0E8, 0x00000552, 0xFFFFF0EA, 0x00000558, 0xFFFFF0EC, 0x0000055D, 0xFFFFF0EE,
		0x00000563, 0xFFFFF0F0, 0x00000569, 0xFFFFF0F2, 0x0000056F, 0xFFFFF0F4, 0x00000575, 0xFFFFF0F6, 0x0000057B, 0xFFFFF0F8, 0x00000581, 0xFFFFF0FB, 0x00000587, 0xFFFFF0FD, 0x0000058D, 0xFFFFF0FF, 0x00000593, 0xFFFFF101, 0x00000599, 0xFFFFF103, 0x0000059E, 0xFFFFF106, 0x000005A4, 0xFFFFF108, 0x000005AA, 0xFFFFF10A, 0x000005B0, 0xFFFFF10C, 0x000005B6, 0xFFFFF10E, 0x000005BC, 0xFFFFF111,
		0x000005C2, 0xFFFFF113, 0x000005C7, 0xFFFFF115, 0x000005CD, 0xFFFFF118, 0x000005D3, 0xFFFFF11A, 0x000005D9, 0xFFFFF11C, 0x000005DF, 0xFFFFF11E, 0x000005E5, 0xFFFFF121, 0x000005EB, 0xFFFFF123, 0x000005F0, 0xFFFFF125, 0x000005F6, 0xFFFFF128, 0x000005FC, 0xFFFFF12A, 0x00000602, 0xFFFFF12C, 0x00000608, 0xFFFFF12F, 0x0000060E, 0xFFFFF131, 0x00000613, 0xFFFFF133, 0x00000619, 0xFFFFF136,
		0x0000061F, 0xFFFFF138, 0x00000625, 0xFFFFF13B, 0x0000062B, 0xFFFFF13D, 0x00000630, 0xFFFFF140, 0x00000636, 0xFFFFF142, 0x0000063C, 0xFFFFF144, 0x00000642, 0xFFFFF147, 0x00000648, 0xFFFFF149, 0x0000064D, 0xFFFFF14C, 0x00000653, 0xFFFFF14E, 0x00000659, 0xFFFFF151, 0x0000065F, 0xFFFFF153, 0x00000664, 0xFFFFF156, 0x0000066A, 0xFFFFF158, 0x00000670, 0xFFFFF15B, 0x00000676, 0xFFFFF15D,
		0x0000067B, 0xFFFFF160, 0x00000681, 0xFFFFF162, 0x00000687, 0xFFFFF165, 0x0000068D, 0xFFFFF168, 0x00000692, 0xFFFFF16A, 0x00000698, 0xFFFFF16D, 0x0000069E, 0xFFFFF16F, 0x000006A3, 0xFFFFF172, 0x000006A9, 0xFFFFF175, 0x000006AF, 0xFFFFF177, 0x000006B5, 0xFFFFF17A, 0x000006BA, 0xFFFFF17C, 0x000006C0, 0xFFFFF17F, 0x000006C6, 0xFFFFF182, 0x000006CB, 0xFFFFF184, 0x000006D1, 0xFFFFF187,
		0x000006D7, 0xFFFFF18A, 0x000006DC, 0xFFFFF18C, 0x000006E2, 0xFFFFF18F, 0x000006E8, 0xFFFFF192, 0x000006ED, 0xFFFFF195, 0x000006F3, 0xFFFFF197, 0x000006F9, 0xFFFFF19A, 0x000006FE, 0xFFFFF19D, 0x00000704, 0xFFFFF1A0, 0x0000070A, 0xFFFFF1A2, 0x0000070F, 0xFFFFF1A5, 0x00000715, 0xFFFFF1A8, 0x0000071B, 0xFFFFF1AB, 0x00000720, 0xFFFFF1AD, 0x00000726, 0xFFFFF1B0, 0x0000072B, 0xFFFFF1B3,
		0x00000731, 0xFFFFF1B6, 0x00000737, 0xFFFFF1B9, 0x0000073C, 0xFFFFF1BC, 0x00000742, 0xFFFFF1BE, 0x00000748, 0xFFFFF1C1, 0x0000074D, 0xFFFFF1C4, 0x00000753, 0xFFFFF1C7, 0x00000758, 0xFFFFF1CA, 0x0000075E, 0xFFFFF1CD, 0x00000763, 0xFFFFF1D0, 0x00000769, 0xFFFFF1D3, 0x0000076F, 0xFFFFF1D5, 0x00000774, 0xFFFFF1D8, 0x0000077A, 0xFFFFF1DB, 0x0000077F, 0xFFFFF1DE, 0x00000785, 0xFFFFF1E1,
		0x0000078A, 0xFFFFF1E4, 0x00000790, 0xFFFFF1E7, 0x00000795, 0xFFFFF1EA, 0x0000079B, 0xFFFFF1ED, 0x000007A0, 0xFFFFF1F0, 0x000007A6, 0xFFFFF1F3, 0x000007AC, 0xFFFFF1F6, 0x000007B1, 0xFFFFF1F9, 0x000007B7, 0xFFFFF1FC, 0x000007BC, 0xFFFFF1FF, 0x000007C2, 0xFFFFF202, 0x000007C7, 0xFFFFF205, 0x000007CD, 0xFFFFF208, 0x000007D2, 0xFFFFF20B, 0x000007D7, 0xFFFFF20E, 0x000007DD, 0xFFFFF212,
		0x000007E2, 0xFFFFF215, 0x000007E8, 0xFFFFF218, 0x000007ED, 0xFFFFF21B, 0x000007F3, 0xFFFFF21E, 0x000007F8, 0xFFFFF221, 0x000007FE, 0xFFFFF224, 0x00000803, 0xFFFFF227, 0x00000809, 0xFFFFF22B, 0x0000080E, 0xFFFFF22E, 0x00000813, 0xFFFFF231, 0x00000819, 0xFFFFF234, 0x0000081E, 0xFFFFF237, 0x00000824, 0xFFFFF23A, 0x00000829, 0xFFFFF23E, 0x0000082E, 0xFFFFF241, 0x00000834, 0xFFFFF244,
		0x00000839, 0xFFFFF247, 0x0000083F, 0xFFFFF24A, 0x00000844, 0xFFFFF24E, 0x00000849, 0xFFFFF251, 0x0000084F, 0xFFFFF254, 0x00000854, 0xFFFFF257, 0x0000085A, 0xFFFFF25B, 0x0000085F, 0xFFFFF25E, 0x00000864, 0xFFFFF261, 0x0000086A, 0xFFFFF265, 0x0000086F, 0xFFFFF268, 0x00000874, 0xFFFFF26B, 0x0000087A, 0xFFFFF26F, 0x0000087F, 0xFFFFF272, 0x00000884, 0xFFFFF275, 0x0000088A, 0xFFFFF279,
		0x0000088F, 0xFFFFF27C, 0x00000894, 0xFFFFF27F, 0x00000899, 0xFFFFF283, 0x0000089F, 0xFFFFF286, 0x000008A4, 0xFFFFF289, 0x000008A9, 0xFFFFF28D, 0x000008AF, 0xFFFFF290, 0x000008B4, 0xFFFFF294, 0x000008B9, 0xFFFFF297, 0x000008BE, 0xFFFFF29B, 0x000008C4, 0xFFFFF29E, 0x000008C9, 0xFFFFF2A1, 0x000008CE, 0xFFFFF2A5, 0x000008D3, 0xFFFFF2A8, 0x000008D9, 0xFFFFF2AC, 0x000008DE, 0xFFFFF2AF,
		0x000008E3, 0xFFFFF2B3, 0x000008E8, 0xFFFFF2B6, 0x000008EE, 0xFFFFF2BA, 0x000008F3, 0xFFFFF2BD, 0x000008F8, 0xFFFFF2C1, 0x000008FD, 0xFFFFF2C4, 0x00000902, 0xFFFFF2C8, 0x00000908, 0xFFFFF2CB, 0x0000090D, 0xFFFFF2CF, 0x00000912, 0xFFFFF2D3, 0x00000917, 0xFFFFF2D6, 0x0000091C, 0xFFFFF2DA, 0x00000921, 0xFFFFF2DD, 0x00000927, 0xFFFFF2E1, 0x0000092C, 0xFFFFF2E4, 0x00000931, 0xFFFFF2E8,
		0x00000936, 0xFFFFF2EC, 0x0000093B, 0xFFFFF2EF, 0x00000940, 0xFFFFF2F3, 0x00000945, 0xFFFFF2F7, 0x0000094B, 0xFFFFF2FA, 0x00000950, 0xFFFFF2FE, 0x00000955, 0xFFFFF302, 0x0000095A, 0xFFFFF305, 0x0000095F, 0xFFFFF309, 0x00000964, 0xFFFFF30D, 0x00000969, 0xFFFFF310, 0x0000096E, 0xFFFFF314, 0x00000973, 0xFFFFF318, 0x00000978, 0xFFFFF31B, 0x0000097D, 0xFFFFF31F, 0x00000982, 0xFFFFF323,
		0x00000987, 0xFFFFF327, 0x0000098D, 0xFFFFF32A, 0x00000992, 0xFFFFF32E, 0x00000997, 0xFFFFF332, 0x0000099C, 0xFFFFF336, 0x000009A1, 0xFFFFF339, 0x000009A6, 0xFFFFF33D, 0x000009AB, 0xFFFFF341, 0x000009B0, 0xFFFFF345, 0x000009B5, 0xFFFFF349, 0x000009BA, 0xFFFFF34C, 0x000009BF, 0xFFFFF350, 0x000009C4, 0xFFFFF354, 0x000009C9, 0xFFFFF358, 0x000009CE, 0xFFFFF35C, 0x000009D3, 0xFFFFF360,
		0x000009D7, 0xFFFFF363, 0x000009DC, 0xFFFFF367, 0x000009E1, 0xFFFFF36B, 0x000009E6, 0xFFFFF36F, 0x000009EB, 0xFFFFF373, 0x000009F0, 0xFFFFF377, 0x000009F5, 0xFFFFF37B, 0x000009FA, 0xFFFFF37F, 0x000009FF, 0xFFFFF383, 0x00000A04, 0xFFFFF387, 0x00000A09, 0xFFFFF38A, 0x00000A0E, 0xFFFFF38E, 0x00000A12, 0xFFFFF392, 0x00000A17, 0xFFFFF396, 0x00000A1C, 0xFFFFF39A, 0x00000A21, 0xFFFFF39E,
		0x00000A26, 0xFFFFF3A2, 0x00000A2B, 0xFFFFF3A6, 0x00000A30, 0xFFFFF3AA, 0x00000A35, 0xFFFFF3AE, 0x00000A39, 0xFFFFF3B2, 0x00000A3E, 0xFFFFF3B6, 0x00000A43, 0xFFFFF3BA, 0x00000A48, 0xFFFFF3BE, 0x00000A4D, 0xFFFFF3C2, 0x00000A51, 0xFFFFF3C6, 0x00000A56, 0xFFFFF3CA, 0x00000A5B, 0xFFFFF3CF, 0x00000A60, 0xFFFFF3D3, 0x00000A65, 0xFFFFF3D7, 0x00000A69, 0xFFFFF3DB, 0x00000A6E, 0xFFFFF3DF,
		0x00000A73, 0xFFFFF3E3, 0x00000A78, 0xFFFFF3E7, 0x00000A7C, 0xFFFFF3EB, 0x00000A81, 0xFFFFF3EF, 0x00000A86, 0xFFFFF3F3, 0x00000A8B, 0xFFFFF3F8, 0x00000A8F, 0xFFFFF3FC, 0x00000A94, 0xFFFFF400, 0x00000A99, 0xFFFFF404, 0x00000A9D, 0xFFFFF408, 0x00000AA2, 0xFFFFF40C, 0x00000AA7, 0xFFFFF411, 0x00000AAC, 0xFFFFF415, 0x00000AB0, 0xFFFFF419, 0x00000AB5, 0xFFFFF41D, 0x00000ABA, 0xFFFFF421,
		0x00000ABE, 0xFFFFF426, 0x00000AC3, 0xFFFFF42A, 0x00000AC8, 0xFFFFF42E, 0x00000ACC, 0xFFFFF432, 0x00000AD1, 0xFFFFF436, 0x00000AD5, 0xFFFFF43B, 0x00000ADA, 0xFFFFF43F, 0x00000ADF, 0xFFFFF443, 0x00000AE3, 0xFFFFF448, 0x00000AE8, 0xFFFFF44C, 0x00000AEC, 0xFFFFF450, 0x00000AF1, 0xFFFFF454, 0x00000AF6, 0xFFFFF459, 0x00000AFA, 0xFFFFF45D, 0x00000AFF, 0xFFFFF461, 0x00000B03, 0xFFFFF466,
		0x00000B08, 0xFFFFF46A, 0x00000B0C, 0xFFFFF46E, 0x00000B11, 0xFFFFF473, 0x00000B15, 0xFFFFF477, 0x00000B1A, 0xFFFFF47B, 0x00000B1F, 0xFFFFF480, 0x00000B23, 0xFFFFF484, 0x00000B28, 0xFFFFF488, 0x00000B2C, 0xFFFFF48D, 0x00000B31, 0xFFFFF491, 0x00000B35, 0xFFFFF496, 0x00000B3A, 0xFFFFF49A, 0x00000B3E, 0xFFFFF49E, 0x00000B42, 0xFFFFF4A3, 0x00000B47, 0xFFFFF4A7, 0x00000B4B, 0xFFFFF4AC,
		0x00000B50, 0xFFFFF4B0, 0x00000B54, 0xFFFFF4B5, 0x00000B59, 0xFFFFF4B9, 0x00000B5D, 0xFFFFF4BE, 0x00000B62, 0xFFFFF4C2, 0x00000B66, 0xFFFFF4C6, 0x00000B6A, 0xFFFFF4CB, 0x00000B6F, 0xFFFFF4CF, 0x00000B73, 0xFFFFF4D4, 0x00000B78, 0xFFFFF4D8, 0x00000B7C, 0xFFFFF4DD, 0x00000B80, 0xFFFFF4E1, 0x00000B85, 0xFFFFF4E6, 0x00000B89, 0xFFFFF4EB, 0x00000B8D, 0xFFFFF4EF, 0x00000B92, 0xFFFFF4F4,
		0x00000B96, 0xFFFFF4F8, 0x00000B9A, 0xFFFFF4FD, 0x00000B9F, 0xFFFFF501, 0x00000BA3, 0xFFFFF506, 0x00000BA7, 0xFFFFF50A, 0x00000BAC, 0xFFFFF50F, 0x00000BB0, 0xFFFFF514, 0x00000BB4, 0xFFFFF518, 0x00000BB8, 0xFFFFF51D, 0x00000BBD, 0xFFFFF521, 0x00000BC1, 0xFFFFF526, 0x00000BC5, 0xFFFFF52B, 0x00000BCA, 0xFFFFF52F, 0x00000BCE, 0xFFFFF534, 0x00000BD2, 0xFFFFF538, 0x00000BD6, 0xFFFFF53D,
		0x00000BDA, 0xFFFFF542, 0x00000BDF, 0xFFFFF546, 0x00000BE3, 0xFFFFF54B, 0x00000BE7, 0xFFFFF550, 0x00000BEB, 0xFFFFF554, 0x00000BEF, 0xFFFFF559, 0x00000BF4, 0xFFFFF55E, 0x00000BF8, 0xFFFFF563, 0x00000BFC, 0xFFFFF567, 0x00000C00, 0xFFFFF56C, 0x00000C04, 0xFFFFF571, 0x00000C08, 0xFFFFF575, 0x00000C0D, 0xFFFFF57A, 0x00000C11, 0xFFFFF57F, 0x00000C15, 0xFFFFF584, 0x00000C19, 0xFFFFF588,
		0x00000C1D, 0xFFFFF58D, 0x00000C21, 0xFFFFF592, 0x00000C25, 0xFFFFF597, 0x00000C29, 0xFFFFF59B, 0x00000C2D, 0xFFFFF5A0, 0x00000C31, 0xFFFFF5A5, 0x00000C36, 0xFFFFF5AA, 0x00000C3A, 0xFFFFF5AF, 0x00000C3E, 0xFFFFF5B3, 0x00000C42, 0xFFFFF5B8, 0x00000C46, 0xFFFFF5BD, 0x00000C4A, 0xFFFFF5C2, 0x00000C4E, 0xFFFFF5C7, 0x00000C52, 0xFFFFF5CB, 0x00000C56, 0xFFFFF5D0, 0x00000C5A, 0xFFFFF5D5,
		0x00000C5E, 0xFFFFF5DA, 0x00000C62, 0xFFFFF5DF, 0x00000C66, 0xFFFFF5E4, 0x00000C6A, 0xFFFFF5E9, 0x00000C6E, 0xFFFFF5EE, 0x00000C72, 0xFFFFF5F2, 0x00000C76, 0xFFFFF5F7, 0x00000C79, 0xFFFFF5FC, 0x00000C7D, 0xFFFFF601, 0x00000C81, 0xFFFFF606, 0x00000C85, 0xFFFFF60B, 0x00000C89, 0xFFFFF610, 0x00000C8D, 0xFFFFF615, 0x00000C91, 0xFFFFF61A, 0x00000C95, 0xFFFFF61F, 0x00000C99, 0xFFFFF624,
		0x00000C9D, 0xFFFFF629, 0x00000CA0, 0xFFFFF62D, 0x00000CA4, 0xFFFFF632, 0x00000CA8, 0xFFFFF637, 0x00000CAC, 0xFFFFF63C, 0x00000CB0, 0xFFFFF641, 0x00000CB4, 0xFFFFF646, 0x00000CB7, 0xFFFFF64B, 0x00000CBB, 0xFFFFF650, 0x00000CBF, 0xFFFFF655, 0x00000CC3, 0xFFFFF65A, 0x00000CC7, 0xFFFFF65F, 0x00000CCA, 0xFFFFF664, 0x00000CCE, 0xFFFFF669, 0x00000CD2, 0xFFFFF66E, 0x00000CD6, 0xFFFFF673,
		0x00000CD9, 0xFFFFF679, 0x00000CDD, 0xFFFFF67E, 0x00000CE1, 0xFFFFF683, 0x00000CE5, 0xFFFFF688, 0x00000CE8, 0xFFFFF68D, 0x00000CEC, 0xFFFFF692, 0x00000CF0, 0xFFFFF697, 0x00000CF3, 0xFFFFF69C, 0x00000CF7, 0xFFFFF6A1, 0x00000CFB, 0xFFFFF6A6, 0x00000CFE, 0xFFFFF6AB, 0x00000D02, 0xFFFFF6B0, 0x00000D06, 0xFFFFF6B5, 0x00000D09, 0xFFFFF6BB, 0x00000D0D, 0xFFFFF6C0, 0x00000D11, 0xFFFFF6C5,
		0x00000D14, 0xFFFFF6CA, 0x00000D18, 0xFFFFF6CF, 0x00000D1C, 0xFFFFF6D4, 0x00000D1F, 0xFFFFF6D9, 0x00000D23, 0xFFFFF6DF, 0x00000D26, 0xFFFFF6E4, 0x00000D2A, 0xFFFFF6E9, 0x00000D2D, 0xFFFFF6EE, 0x00000D31, 0xFFFFF6F3, 0x00000D35, 0xFFFFF6F8, 0x00000D38, 0xFFFFF6FE, 0x00000D3C, 0xFFFFF703, 0x00000D3F, 0xFFFFF708, 0x00000D43, 0xFFFFF70D, 0x00000D46, 0xFFFFF712, 0x00000D4A, 0xFFFFF718,
		0x00000D4D, 0xFFFFF71D, 0x00000D51, 0xFFFFF722, 0x00000D54, 0xFFFFF727, 0x00000D58, 0xFFFFF72D, 0x00000D5B, 0xFFFFF732, 0x00000D5F, 0xFFFFF737, 0x00000D62, 0xFFFFF73C, 0x00000D65, 0xFFFFF742, 0x00000D69, 0xFFFFF747, 0x00000D6C, 0xFFFFF74C, 0x00000D70, 0xFFFFF751, 0x00000D73, 0xFFFFF757, 0x00000D77, 0xFFFFF75C, 0x00000D7A, 0xFFFFF761, 0x00000D7D, 0xFFFFF767, 0x00000D81, 0xFFFFF76C,
		0x00000D84, 0xFFFFF771, 0x00000D87, 0xFFFFF776, 0x00000D8B, 0xFFFFF77C, 0x00000D8E, 0xFFFFF781, 0x00000D91, 0xFFFFF786, 0x00000D95, 0xFFFFF78C, 0x00000D98, 0xFFFFF791, 0x00000D9B, 0xFFFFF796, 0x00000D9F, 0xFFFFF79C, 0x00000DA2, 0xFFFFF7A1, 0x00000DA5, 0xFFFFF7A6, 0x00000DA9, 0xFFFFF7AC, 0x00000DAC, 0xFFFFF7B1, 0x00000DAF, 0xFFFFF7B7, 0x00000DB2, 0xFFFFF7BC, 0x00000DB6, 0xFFFFF7C1,
		0x00000DB9, 0xFFFFF7C7, 0x00000DBC, 0xFFFFF7CC, 0x00000DBF, 0xFFFFF7D2, 0x00000DC2, 0xFFFFF7D7, 0x00000DC6, 0xFFFFF7DC, 0x00000DC9, 0xFFFFF7E2, 0x00000DCC, 0xFFFFF7E7, 0x00000DCF, 0xFFFFF7ED, 0x00000DD2, 0xFFFFF7F2, 0x00000DD5, 0xFFFFF7F7, 0x00000DD9, 0xFFFFF7FD, 0x00000DDC, 0xFFFFF802, 0x00000DDF, 0xFFFFF808, 0x00000DE2, 0xFFFFF80D, 0x00000DE5, 0xFFFFF813, 0x00000DE8, 0xFFFFF818,
		0x00000DEB, 0xFFFFF81E, 0x00000DEE, 0xFFFFF823, 0x00000DF2, 0xFFFFF829, 0x00000DF5, 0xFFFFF82E, 0x00000DF8, 0xFFFFF833, 0x00000DFB, 0xFFFFF839, 0x00000DFE, 0xFFFFF83E, 0x00000E01, 0xFFFFF844, 0x00000E04, 0xFFFFF849, 0x00000E07, 0xFFFFF84F, 0x00000E0A, 0xFFFFF854, 0x00000E0D, 0xFFFFF85A, 0x00000E10, 0xFFFFF860, 0x00000E13, 0xFFFFF865, 0x00000E16, 0xFFFFF86B, 0x00000E19, 0xFFFFF870,
		0x00000E1C, 0xFFFFF876, 0x00000E1F, 0xFFFFF87B, 0x00000E22, 0xFFFFF881, 0x00000E25, 0xFFFFF886, 0x00000E28, 0xFFFFF88C, 0x00000E2B, 0xFFFFF891, 0x00000E2D, 0xFFFFF897, 0x00000E30, 0xFFFFF89D, 0x00000E33, 0xFFFFF8A2, 0x00000E36, 0xFFFFF8A8, 0x00000E39, 0xFFFFF8AD, 0x00000E3C, 0xFFFFF8B3, 0x00000E3F, 0xFFFFF8B8, 0x00000E42, 0xFFFFF8BE, 0x00000E44, 0xFFFFF8C4, 0x00000E47, 0xFFFFF8C9,
		0x00000E4A, 0xFFFFF8CF, 0x00000E4D, 0xFFFFF8D5, 0x00000E50, 0xFFFFF8DA, 0x00000E53, 0xFFFFF8E0, 0x00000E55, 0xFFFFF8E5, 0x00000E58, 0xFFFFF8EB, 0x00000E5B, 0xFFFFF8F1, 0x00000E5E, 0xFFFFF8F6, 0x00000E60, 0xFFFFF8FC, 0x00000E63, 0xFFFFF902, 0x00000E66, 0xFFFFF907, 0x00000E69, 0xFFFFF90D, 0x00000E6B, 0xFFFFF913, 0x00000E6E, 0xFFFFF918, 0x00000E71, 0xFFFFF91E, 0x00000E74, 0xFFFFF924,
		0x00000E76, 0xFFFFF929, 0x00000E79, 0xFFFFF92F, 0x00000E7C, 0xFFFFF935, 0x00000E7E, 0xFFFFF93A, 0x00000E81, 0xFFFFF940, 0x00000E84, 0xFFFFF946, 0x00000E86, 0xFFFFF94B, 0x00000E89, 0xFFFFF951, 0x00000E8B, 0xFFFFF957, 0x00000E8E, 0xFFFFF95D, 0x00000E91, 0xFFFFF962, 0x00000E93, 0xFFFFF968, 0x00000E96, 0xFFFFF96E, 0x00000E98, 0xFFFFF973, 0x00000E9B, 0xFFFFF979, 0x00000E9E, 0xFFFFF97F,
		0x00000EA0, 0xFFFFF985, 0x00000EA3, 0xFFFFF98A, 0x00000EA5, 0xFFFFF990, 0x00000EA8, 0xFFFFF996, 0x00000EAA, 0xFFFFF99C, 0x00000EAD, 0xFFFFF9A1, 0x00000EAF, 0xFFFFF9A7, 0x00000EB2, 0xFFFFF9AD, 0x00000EB4, 0xFFFFF9B3, 0x00000EB7, 0xFFFFF9B8, 0x00000EB9, 0xFFFFF9BE, 0x00000EBC, 0xFFFFF9C4, 0x00000EBE, 0xFFFFF9CA, 0x00000EC0, 0xFFFFF9D0, 0x00000EC3, 0xFFFFF9D5, 0x00000EC5, 0xFFFFF9DB,
		0x00000EC8, 0xFFFFF9E1, 0x00000ECA, 0xFFFFF9E7, 0x00000ECD, 0xFFFFF9ED, 0x00000ECF, 0xFFFFF9F2, 0x00000ED1, 0xFFFFF9F8, 0x00000ED4, 0xFFFFF9FE, 0x00000ED6, 0xFFFFFA04, 0x00000ED8, 0xFFFFFA0A, 0x00000EDB, 0xFFFFFA10, 0x00000EDD, 0xFFFFFA15, 0x00000EDF, 0xFFFFFA1B, 0x00000EE2, 0xFFFFFA21, 0x00000EE4, 0xFFFFFA27, 0x00000EE6, 0xFFFFFA2D, 0x00000EE8, 0xFFFFFA33, 0x00000EEB, 0xFFFFFA39,
		0x00000EED, 0xFFFFFA3E, 0x00000EEF, 0xFFFFFA44, 0x00000EF2, 0xFFFFFA4A, 0x00000EF4, 0xFFFFFA50, 0x00000EF6, 0xFFFFFA56, 0x00000EF8, 0xFFFFFA5C, 0x00000EFA, 0xFFFFFA62, 0x00000EFD, 0xFFFFFA67, 0x00000EFF, 0xFFFFFA6D, 0x00000F01, 0xFFFFFA73, 0x00000F03, 0xFFFFFA79, 0x00000F05, 0xFFFFFA7F, 0x00000F08, 0xFFFFFA85, 0x00000F0A, 0xFFFFFA8B, 0x00000F0C, 0xFFFFFA91, 0x00000F0E, 0xFFFFFA97,
		0x00000F10, 0xFFFFFA9D, 0x00000F12, 0xFFFFFAA3, 0x00000F14, 0xFFFFFAA8, 0x00000F16, 0xFFFFFAAE, 0x00000F18, 0xFFFFFAB4, 0x00000F1B, 0xFFFFFABA, 0x00000F1D, 0xFFFFFAC0, 0x00000F1F, 0xFFFFFAC6, 0x00000F21, 0xFFFFFACC, 0x00000F23, 0xFFFFFAD2, 0x00000F25, 0xFFFFFAD8, 0x00000F27, 0xFFFFFADE, 0x00000F29, 0xFFFFFAE4, 0x00000F2B, 0xFFFFFAEA, 0x00000F2D, 0xFFFFFAF0, 0x00000F2F, 0xFFFFFAF6,
		0x00000F31, 0xFFFFFAFC, 0x00000F33, 0xFFFFFB02, 0x00000F35, 0xFFFFFB08, 0x00000F37, 0xFFFFFB0E, 0x00000F39, 0xFFFFFB14, 0x00000F3B, 0xFFFFFB1A, 0x00000F3C, 0xFFFFFB20, 0x00000F3E, 0xFFFFFB25, 0x00000F40, 0xFFFFFB2B, 0x00000F42, 0xFFFFFB31, 0x00000F44, 0xFFFFFB37, 0x00000F46, 0xFFFFFB3D, 0x00000F48, 0xFFFFFB43, 0x00000F4A, 0xFFFFFB49, 0x00000F4B, 0xFFFFFB4F, 0x00000F4D, 0xFFFFFB55,
		0x00000F4F, 0xFFFFFB5B, 0x00000F51, 0xFFFFFB62, 0x00000F53, 0xFFFFFB68, 0x00000F55, 0xFFFFFB6E, 0x00000F56, 0xFFFFFB74, 0x00000F58, 0xFFFFFB7A, 0x00000F5A, 0xFFFFFB80, 0x00000F5C, 0xFFFFFB86, 0x00000F5D, 0xFFFFFB8C, 0x00000F5F, 0xFFFFFB92, 0x00000F61, 0xFFFFFB98, 0x00000F63, 0xFFFFFB9E, 0x00000F64, 0xFFFFFBA4, 0x00000F66, 0xFFFFFBAA, 0x00000F68, 0xFFFFFBB0, 0x00000F69, 0xFFFFFBB6,
		0x00000F6B, 0xFFFFFBBC, 0x00000F6D, 0xFFFFFBC2, 0x00000F6E, 0xFFFFFBC8, 0x00000F70, 0xFFFFFBCE, 0x00000F72, 0xFFFFFBD4, 0x00000F73, 0xFFFFFBDA, 0x00000F75, 0xFFFFFBE0, 0x00000F77, 0xFFFFFBE6, 0x00000F78, 0xFFFFFBED, 0x00000F7A, 0xFFFFFBF3, 0x00000F7B, 0xFFFFFBF9, 0x00000F7D, 0xFFFFFBFF, 0x00000F7F, 0xFFFFFC05, 0x00000F80, 0xFFFFFC0B, 0x00000F82, 0xFFFFFC11, 0x00000F83, 0xFFFFFC17,
		0x00000F85, 0xFFFFFC1D, 0x00000F86, 0xFFFFFC23, 0x00000F88, 0xFFFFFC29, 0x00000F89, 0xFFFFFC30, 0x00000F8B, 0xFFFFFC36, 0x00000F8C, 0xFFFFFC3C, 0x00000F8E, 0xFFFFFC42, 0x00000F8F, 0xFFFFFC48, 0x00000F91, 0xFFFFFC4E, 0x00000F92, 0xFFFFFC54, 0x00000F94, 0xFFFFFC5A, 0x00000F95, 0xFFFFFC60, 0x00000F96, 0xFFFFFC67, 0x00000F98, 0xFFFFFC6D, 0x00000F99, 0xFFFFFC73, 0x00000F9B, 0xFFFFFC79,
		0x00000F9C, 0xFFFFFC7F, 0x00000F9D, 0xFFFFFC85, 0x00000F9F, 0xFFFFFC8B, 0x00000FA0, 0xFFFFFC91, 0x00000FA1, 0xFFFFFC98, 0x00000FA3, 0xFFFFFC9E, 0x00000FA4, 0xFFFFFCA4, 0x00000FA5, 0xFFFFFCAA, 0x00000FA7, 0xFFFFFCB0, 0x00000FA8, 0xFFFFFCB6, 0x00000FA9, 0xFFFFFCBC, 0x00000FAB, 0xFFFFFCC3, 0x00000FAC, 0xFFFFFCC9, 0x00000FAD, 0xFFFFFCCF, 0x00000FAE, 0xFFFFFCD5, 0x00000FB0, 0xFFFFFCDB,
		0x00000FB1, 0xFFFFFCE1, 0x00000FB2, 0xFFFFFCE8, 0x00000FB3, 0xFFFFFCEE, 0x00000FB4, 0xFFFFFCF4, 0x00000FB6, 0xFFFFFCFA, 0x00000FB7, 0xFFFFFD00, 0x00000FB8, 0xFFFFFD06, 0x00000FB9, 0xFFFFFD0D, 0x00000FBA, 0xFFFFFD13, 0x00000FBB, 0xFFFFFD19, 0x00000FBD, 0xFFFFFD1F, 0x00000FBE, 0xFFFFFD25, 0x00000FBF, 0xFFFFFD2B, 0x00000FC0, 0xFFFFFD32, 0x00000FC1, 0xFFFFFD38, 0x00000FC2, 0xFFFFFD3E,
		0x00000FC3, 0xFFFFFD44, 0x00000FC4, 0xFFFFFD4A, 0x00000FC5, 0xFFFFFD51, 0x00000FC6, 0xFFFFFD57, 0x00000FC7, 0xFFFFFD5D, 0x00000FC8, 0xFFFFFD63, 0x00000FC9, 0xFFFFFD69, 0x00000FCA, 0xFFFFFD70, 0x00000FCB, 0xFFFFFD76, 0x00000FCC, 0xFFFFFD7C, 0x00000FCD, 0xFFFFFD82, 0x00000FCE, 0xFFFFFD88, 0x00000FCF, 0xFFFFFD8F, 0x00000FD0, 0xFFFFFD95, 0x00000FD1, 0xFFFFFD9B, 0x00000FD2, 0xFFFFFDA1,
		0x00000FD3, 0xFFFFFDA7, 0x00000FD4, 0xFFFFFDAE, 0x00000FD5, 0xFFFFFDB4, 0x00000FD6, 0xFFFFFDBA, 0x00000FD7, 0xFFFFFDC0, 0x00000FD8, 0xFFFFFDC7, 0x00000FD9, 0xFFFFFDCD, 0x00000FD9, 0xFFFFFDD3, 0x00000FDA, 0xFFFFFDD9, 0x00000FDB, 0xFFFFFDDF, 0x00000FDC, 0xFFFFFDE6, 0x00000FDD, 0xFFFFFDEC, 0x00000FDE, 0xFFFFFDF2, 0x00000FDE, 0xFFFFFDF8, 0x00000FDF, 0xFFFFFDFF, 0x00000FE0, 0xFFFFFE05,
		0x00000FE1, 0xFFFFFE0B, 0x00000FE1, 0xFFFFFE11, 0x00000FE2, 0xFFFFFE18, 0x00000FE3, 0xFFFFFE1E, 0x00000FE4, 0xFFFFFE24, 0x00000FE4, 0xFFFFFE2A, 0x00000FE5, 0xFFFFFE31, 0x00000FE6, 0xFFFFFE37, 0x00000FE7, 0xFFFFFE3D, 0x00000FE7, 0xFFFFFE43, 0x00000FE8, 0xFFFFFE4A, 0x00000FE9, 0xFFFFFE50, 0x00000FE9, 0xFFFFFE56, 0x00000FEA, 0xFFFFFE5C, 0x00000FEB, 0xFFFFFE63, 0x00000FEB, 0xFFFFFE69,
		0x00000FEC, 0xFFFFFE6F, 0x00000FEC, 0xFFFFFE75, 0x00000FED, 0xFFFFFE7C, 0x00000FEE, 0xFFFFFE82, 0x00000FEE, 0xFFFFFE88, 0x00000FEF, 0xFFFFFE8E, 0x00000FEF, 0xFFFFFE95, 0x00000FF0, 0xFFFFFE9B, 0x00000FF0, 0xFFFFFEA1, 0x00000FF1, 0xFFFFFEA7, 0x00000FF1, 0xFFFFFEAE, 0x00000FF2, 0xFFFFFEB4, 0x00000FF2, 0xFFFFFEBA, 0x00000FF3, 0xFFFFFEC0, 0x00000FF3, 0xFFFFFEC7, 0x00000FF4, 0xFFFFFECD,
		0x00000FF4, 0xFFFFFED3, 0x00000FF5, 0xFFFFFED9, 0x00000FF5, 0xFFFFFEE0, 0x00000FF6, 0xFFFFFEE6, 0x00000FF6, 0xFFFFFEEC, 0x00000FF7, 0xFFFFFEF3, 0x00000FF7, 0xFFFFFEF9, 0x00000FF7, 0xFFFFFEFF, 0x00000FF8, 0xFFFFFF05, 0x00000FF8, 0xFFFFFF0C, 0x00000FF9, 0xFFFFFF12, 0x00000FF9, 0xFFFFFF18, 0x00000FF9, 0xFFFFFF1E, 0x00000FFA, 0xFFFFFF25, 0x00000FFA, 0xFFFFFF2B, 0x00000FFA, 0xFFFFFF31,
		0x00000FFB, 0xFFFFFF38, 0x00000FFB, 0xFFFFFF3E, 0x00000FFB, 0xFFFFFF44, 0x00000FFB, 0xFFFFFF4A, 0x00000FFC, 0xFFFFFF51, 0x00000FFC, 0xFFFFFF57, 0x00000FFC, 0xFFFFFF5D, 0x00000FFC, 0xFFFFFF63, 0x00000FFD, 0xFFFFFF6A, 0x00000FFD, 0xFFFFFF70, 0x00000FFD, 0xFFFFFF76, 0x00000FFD, 0xFFFFFF7D, 0x00000FFE, 0xFFFFFF83, 0x00000FFE, 0xFFFFFF89, 0x00000FFE, 0xFFFFFF8F, 0x00000FFE, 0xFFFFFF96,
		0x00000FFE, 0xFFFFFF9C, 0x00000FFE, 0xFFFFFFA2, 0x00000FFF, 0xFFFFFFA9, 0x00000FFF, 0xFFFFFFAF, 0x00000FFF, 0xFFFFFFB5, 0x00000FFF, 0xFFFFFFBB, 0x00000FFF, 0xFFFFFFC2, 0x00000FFF, 0xFFFFFFC8, 0x00000FFF, 0xFFFFFFCE, 0x00000FFF, 0xFFFFFFD5, 0x00000FFF, 0xFFFFFFDB, 0x00000FFF, 0xFFFFFFE1, 0x00000FFF, 0xFFFFFFE7, 0x00000FFF, 0xFFFFFFEE, 0x00000FFF, 0xFFFFFFF4, 0x00000FFF, 0xFFFFFFFA
	};

	WORD				awTable[65536 * 2];

	WORD				wLow = 0;
	WORD				wHigh = 1;

	for( DWORD i = 0 ; i < _countof( awTable ) ; i += 2 )
	{
		awTable[i] = wLow--;
		awTable[i + 1] = wHigh++;
	}

	// Decode

	DWORD				dwDstSizeOfHalf = (dwDstSize >> 1);

	BYTE				abtTable1[4096];
	BYTE				abtTable2[4096];
	BYTE				abtTable3[4096];

	while( dwSrcPtr < dwDstSizeOfHalf )
	{
		// TODO: Unfinished ?
	}

	return	TRUE;
}

//////////////////////////////////////////////////////////////////////////////////////////
//	PCM Extraction (Type 2)

BOOL	CCircus::DecompPCM2(
	void*				pvDst,							// Destination
	DWORD				dwDstSize,						// Destination Size
	const void*			pvSrc,							// Input Data
	DWORD				dwSrcSize						// Input Size
	)
{
	const BYTE*			pbtSrc = (const BYTE*)pvSrc;
	BYTE*				pbtDst = (BYTE*)pvDst;

	DWORD				dwSrcPtr = 0;
	DWORD				dwDstPtr = 0;

	char				cData;
	DWORD				dwChannel = 0;
	DWORD				adwTable[6];

	ZeroMemory( adwTable, sizeof(adwTable) );

	while( (dwSrcPtr < dwSrcSize) && (dwDstPtr < dwDstSize) )
	{
		cData = (char)pbtSrc[dwSrcPtr++];
		
		adwTable[dwChannel * 3 + 0] += cData << (adwTable[dwChannel * 3 + 1] & 0xFF);

		if( cData == 0x00 )
		{
			if( adwTable[dwChannel * 3 + 1] != 0 )
			{
				adwTable[dwChannel * 3 + 1]--;
			}
		}
		else if( (cData == 0x7F) || (cData == -0x80) )
		{
			if( adwTable[dwChannel * 3 + 1] != 8 )
			{
				adwTable[dwChannel * 3 + 1]++;
			}
		}

		pbtDst[dwDstPtr++] = (BYTE)(adwTable[dwChannel * 3 + 0] & 0xFF);
		pbtDst[dwDstPtr++] = (BYTE)((adwTable[dwChannel * 3 + 0] >> 8) & 0xFF);

		dwChannel = 1 - dwChannel;
	}

	return	TRUE;
}
